ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 115 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 30000340 		.word	1073938480
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoDisableWcoLock
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoDisableWcoLock, %function
  56              	CySysClkImoDisableWcoLock:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 4


  57              	.LFB4:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 141:Generated_Source\PSoC4/CyLib.c **** }
 142:Generated_Source\PSoC4/CyLib.c **** 
 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 5


 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
 200:Generated_Source\PSoC4/CyLib.c ****             #else
 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 6


 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
  58              		.loc 1 276 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 280:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 7


 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
  63              		.loc 1 297 0
  64 0000 0C4B     		ldr	r3, .L5
  65 0002 1B68     		ldr	r3, [r3]
  66 0004 9B00     		lsls	r3, r3, #2
  67 0006 1C22     		movs	r2, #28
  68 0008 1340     		ands	r3, r2
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  69              		.loc 1 298 0
  70 000a 1833     		adds	r3, r3, #24
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
  71              		.loc 1 299 0
  72 000c 0A4A     		ldr	r2, .L5+4
  73 000e 1268     		ldr	r2, [r2]
  74 0010 9208     		lsrs	r2, r2, #2
  75 0012 0321     		movs	r1, #3
  76 0014 0A40     		ands	r2, r1
 297:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
  77              		.loc 1 297 0
  78 0016 D340     		lsrs	r3, r3, r2
  79              	.LVL0:
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  80              		.loc 1 308 0
  81 0018 0849     		ldr	r1, .L5+8
  82 001a 0868     		ldr	r0, [r1]
  83 001c 084A     		ldr	r2, .L5+12
  84 001e 0240     		ands	r2, r0
  85 0020 0A60     		str	r2, [r1]
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
  86              		.loc 1 311 0
  87 0022 084A     		ldr	r2, .L5+16
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 8


  88 0024 9446     		mov	ip, r2
  89 0026 6344     		add	r3, r3, ip
  90              	.LVL1:
  91 0028 1B78     		ldrb	r3, [r3]
  92              	.LVL2:
  93 002a DBB2     		uxtb	r3, r3
  94 002c 064A     		ldr	r2, .L5+20
  95 002e 1360     		str	r3, [r2]
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 314:Generated_Source\PSoC4/CyLib.c ****         #endif
 315:Generated_Source\PSoC4/CyLib.c ****     }
  96              		.loc 1 315 0
  97              		@ sp needed
  98 0030 7047     		bx	lr
  99              	.L6:
 100 0032 C046     		.align	2
 101              	.L5:
 102 0034 080F0340 		.word	1073942280
 103 0038 28000340 		.word	1073938472
 104 003c 00000740 		.word	1074200576
 105 0040 FFFFFFBF 		.word	-1073741825
 106 0044 CDF1FF0F 		.word	268431821
 107 0048 0C0F0340 		.word	1073942284
 108              		.cfi_endproc
 109              	.LFE4:
 110              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 111              		.section	.text.CySysClkImoStop,"ax",%progbits
 112              		.align	2
 113              		.global	CySysClkImoStop
 114              		.code	16
 115              		.thumb_func
 116              		.type	CySysClkImoStop, %function
 117              	CySysClkImoStop:
 118              	.LFB2:
 131:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 119              		.loc 1 131 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 10B5     		push	{r4, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 133:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 127              		.loc 1 133 0
 128 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 129              	.LVL3:
 140:Generated_Source\PSoC4/CyLib.c **** }
 130              		.loc 1 140 0
 131 0006 034A     		ldr	r2, .L8
 132 0008 1368     		ldr	r3, [r2]
 133 000a 5B00     		lsls	r3, r3, #1
 134 000c 5B08     		lsrs	r3, r3, #1
 135 000e 1360     		str	r3, [r2]
 141:Generated_Source\PSoC4/CyLib.c **** 
 136              		.loc 1 141 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 9


 137              		@ sp needed
 138 0010 10BD     		pop	{r4, pc}
 139              	.L9:
 140 0012 C046     		.align	2
 141              	.L8:
 142 0014 30000340 		.word	1073938480
 143              		.cfi_endproc
 144              	.LFE2:
 145              		.size	CySysClkImoStop, .-CySysClkImoStop
 146              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 147              		.align	2
 148              		.global	CySysClkImoGetWcoLock
 149              		.code	16
 150              		.thumb_func
 151              		.type	CySysClkImoGetWcoLock, %function
 152              	CySysClkImoGetWcoLock:
 153              	.LFB5:
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 154              		.loc 1 332 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 159              		.loc 1 333 0
 160 0000 034B     		ldr	r3, .L12
 161 0002 1868     		ldr	r0, [r3]
 162 0004 8023     		movs	r3, #128
 163 0006 DB05     		lsls	r3, r3, #23
 164 0008 1840     		ands	r0, r3
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 165              		.loc 1 334 0
 166 000a 00D0     		beq	.L11
 167 000c 0120     		movs	r0, #1
 168              	.L11:
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 169              		.loc 1 336 0
 170              		@ sp needed
 171 000e 7047     		bx	lr
 172              	.L13:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 10


 173              		.align	2
 174              	.L12:
 175 0010 00000740 		.word	1074200576
 176              		.cfi_endproc
 177              	.LFE5:
 178              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 179              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 180              		.align	2
 181              		.global	CySysClkWriteHfclkDirect
 182              		.code	16
 183              		.thumb_func
 184              		.type	CySysClkWriteHfclkDirect, %function
 185              	CySysClkWriteHfclkDirect:
 186              	.LFB6:
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 359:Generated_Source\PSoC4/CyLib.c ****     {
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 371:Generated_Source\PSoC4/CyLib.c ****             {
 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 11


 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 418:Generated_Source\PSoC4/CyLib.c ****             }
 419:Generated_Source\PSoC4/CyLib.c ****             else
 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC4/CyLib.c ****     }
 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 12


 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 475:Generated_Source\PSoC4/CyLib.c ****             }
 476:Generated_Source\PSoC4/CyLib.c ****             
 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 478:Generated_Source\PSoC4/CyLib.c ****             
 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 486:Generated_Source\PSoC4/CyLib.c ****     *
 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 13


 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
 187              		.loc 1 540 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              	.LVL4:
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 196 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 14


 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 197              		.loc 1 548 0
 198 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 199              	.LVL5:
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 200              		.loc 1 575 0
 201 0008 044A     		ldr	r2, .L15
 202 000a 1368     		ldr	r3, [r2]
 203 000c 0321     		movs	r1, #3
 204 000e 8B43     		bics	r3, r1
 205              	.LVL6:
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 206              		.loc 1 586 0
 207 0010 0C40     		ands	r4, r1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 15


 208              	.LVL7:
 209 0012 1C43     		orrs	r4, r3
 210              	.LVL8:
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 211              		.loc 1 589 0
 212 0014 1460     		str	r4, [r2]
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 213              		.loc 1 591 0
 214 0016 FFF7FEFF 		bl	CyExitCriticalSection
 215              	.LVL9:
 592:Generated_Source\PSoC4/CyLib.c **** }
 216              		.loc 1 592 0
 217              		@ sp needed
 218              	.LVL10:
 219 001a 10BD     		pop	{r4, pc}
 220              	.L16:
 221              		.align	2
 222              	.L15:
 223 001c 28000340 		.word	1073938472
 224              		.cfi_endproc
 225              	.LFE6:
 226              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 227              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 228              		.align	2
 229              		.global	CySysEnablePumpClock
 230              		.code	16
 231              		.thumb_func
 232              		.type	CySysEnablePumpClock, %function
 233              	CySysEnablePumpClock:
 234              	.LFB7:
 593:Generated_Source\PSoC4/CyLib.c **** 
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 235              		.loc 1 612 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 16


 239              		@ link register save eliminated.
 240              	.LVL11:
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 241              		.loc 1 625 0
 242 0000 C307     		lsls	r3, r0, #31
 243 0002 07D5     		bpl	.L18
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 244              		.loc 1 627 0
 245 0004 094A     		ldr	r2, .L20
 246 0006 1168     		ldr	r1, [r2]
 247 0008 094B     		ldr	r3, .L20+4
 248 000a 1B68     		ldr	r3, [r3]
 249 000c 1B01     		lsls	r3, r3, #4
 250 000e 0B43     		orrs	r3, r1
 251 0010 1360     		str	r3, [r2]
 252 0012 0AE0     		b	.L17
 253              	.L18:
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 254              		.loc 1 631 0
 255 0014 054A     		ldr	r2, .L20
 256 0016 1368     		ldr	r3, [r2]
 257 0018 1B09     		lsrs	r3, r3, #4
 258 001a 0321     		movs	r1, #3
 259 001c 0B40     		ands	r3, r1
 260 001e 0449     		ldr	r1, .L20+4
 261 0020 0B60     		str	r3, [r1]
 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 262              		.loc 1 633 0
 263 0022 1368     		ldr	r3, [r2]
 264 0024 3021     		movs	r1, #48
 265 0026 8B43     		bics	r3, r1
 266 0028 1360     		str	r3, [r2]
 267              	.L17:
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 268              		.loc 1 636 0
 269              		@ sp needed
 270 002a 7047     		bx	lr
 271              	.L21:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 17


 272              		.align	2
 273              	.L20:
 274 002c 28000340 		.word	1073938472
 275 0030 00000000 		.word	.LANCHOR0
 276              		.cfi_endproc
 277              	.LFE7:
 278              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 279              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 280              		.align	2
 281              		.global	CySysClkGetSysclkSource
 282              		.code	16
 283              		.thumb_func
 284              		.type	CySysClkGetSysclkSource, %function
 285              	CySysClkGetSysclkSource:
 286              	.LFB8:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 287              		.loc 1 649 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 10B5     		push	{r4, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
 294              		.cfi_offset 14, -4
 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 295              		.loc 1 653 0
 296 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 297              	.LVL12:
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 657:Generated_Source\PSoC4/CyLib.c ****     {
 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 298              		.loc 1 663 0
 299 0006 044B     		ldr	r3, .L23
 300 0008 1B68     		ldr	r3, [r3]
 301 000a 0324     		movs	r4, #3
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 18


 302 000c 1C40     		ands	r4, r3
 303              	.LVL13:
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 304              		.loc 1 672 0
 305 000e FFF7FEFF 		bl	CyExitCriticalSection
 306              	.LVL14:
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 675:Generated_Source\PSoC4/CyLib.c **** }
 307              		.loc 1 675 0
 308 0012 2000     		movs	r0, r4
 309              		@ sp needed
 310              	.LVL15:
 311 0014 10BD     		pop	{r4, pc}
 312              	.L24:
 313 0016 C046     		.align	2
 314              	.L23:
 315 0018 28000340 		.word	1073938472
 316              		.cfi_endproc
 317              	.LFE8:
 318              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 319              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 320              		.align	2
 321              		.global	CySysClkWriteSysclkDiv
 322              		.code	16
 323              		.thumb_func
 324              		.type	CySysClkWriteSysclkDiv, %function
 325              	CySysClkWriteSysclkDiv:
 326              	.LFB9:
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 19


 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 327              		.loc 1 710 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              	.LVL16:
 332 0000 10B5     		push	{r4, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336 0002 0400     		movs	r4, r0
 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 337              		.loc 1 713 0
 338 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 339              	.LVL17:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 340              		.loc 1 715 0
 341 0008 A401     		lsls	r4, r4, #6
 342              	.LVL18:
 343 000a FF23     		movs	r3, #255
 344 000c 2340     		ands	r3, r4
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 345              		.loc 1 717 0
 346 000e 0449     		ldr	r1, .L26
 347 0010 0A68     		ldr	r2, [r1]
 348 0012 C024     		movs	r4, #192
 349 0014 A243     		bics	r2, r4
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 350              		.loc 1 716 0
 351 0016 1343     		orrs	r3, r2
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 352              		.loc 1 715 0
 353 0018 0B60     		str	r3, [r1]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 354              		.loc 1 720 0
 355 001a FFF7FEFF 		bl	CyExitCriticalSection
 356              	.LVL19:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 20


 721:Generated_Source\PSoC4/CyLib.c **** }
 357              		.loc 1 721 0
 358              		@ sp needed
 359 001e 10BD     		pop	{r4, pc}
 360              	.L27:
 361              		.align	2
 362              	.L26:
 363 0020 28000340 		.word	1073938472
 364              		.cfi_endproc
 365              	.LFE9:
 366              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 367              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 368              		.align	2
 369              		.global	CySysClkWriteHfclkDiv
 370              		.code	16
 371              		.thumb_func
 372              		.type	CySysClkWriteHfclkDiv, %function
 373              	CySysClkWriteHfclkDiv:
 374              	.LFB11:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 21


 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 22


 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****             }
 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 23


 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 24


 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 948:Generated_Source\PSoC4/CyLib.c ****     }
 949:Generated_Source\PSoC4/CyLib.c **** 
 950:Generated_Source\PSoC4/CyLib.c **** #else
 951:Generated_Source\PSoC4/CyLib.c **** 
 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 25


 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1007:Generated_Source\PSoC4/CyLib.c **** 
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 26


1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 27


1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
 375              		.loc 1 1106 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              	.LVL20:
 380 0000 70B5     		push	{r4, r5, r6, lr}
 381              		.cfi_def_cfa_offset 16
 382              		.cfi_offset 4, -16
 383              		.cfi_offset 5, -12
 384              		.cfi_offset 6, -8
 385              		.cfi_offset 14, -4
 386 0002 0400     		movs	r4, r0
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 387              		.loc 1 1109 0
 388 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 389              	.LVL21:
1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 390              		.loc 1 1111 0
 391 0008 0549     		ldr	r1, .L29
 392 000a 0A68     		ldr	r2, [r1]
 393 000c 0C25     		movs	r5, #12
 394 000e AA43     		bics	r2, r5
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 395              		.loc 1 1113 0
 396 0010 A300     		lsls	r3, r4, #2
 397 0012 2C00     		movs	r4, r5
 398              	.LVL22:
 399 0014 1C40     		ands	r4, r3
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 400              		.loc 1 1112 0
 401 0016 1443     		orrs	r4, r2
1111:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 402              		.loc 1 1111 0
 403 0018 0C60     		str	r4, [r1]
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 404              		.loc 1 1115 0
 405 001a FFF7FEFF 		bl	CyExitCriticalSection
 406              	.LVL23:
1116:Generated_Source\PSoC4/CyLib.c ****     }
 407              		.loc 1 1116 0
 408              		@ sp needed
 409 001e 70BD     		pop	{r4, r5, r6, pc}
 410              	.L30:
 411              		.align	2
 412              	.L29:
 413 0020 28000340 		.word	1073938472
 414              		.cfi_endproc
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 28


 415              	.LFE11:
 416              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 417              		.section	.text.CySysGetResetReason,"ax",%progbits
 418              		.align	2
 419              		.global	CySysGetResetReason
 420              		.code	16
 421              		.thumb_func
 422              		.type	CySysGetResetReason, %function
 423              	CySysGetResetReason:
 424              	.LFB12:
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 29


1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****             
1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 30


1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1237:Generated_Source\PSoC4/CyLib.c ****                 
1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 31


1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1279:Generated_Source\PSoC4/CyLib.c ****     }
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1294:Generated_Source\PSoC4/CyLib.c ****     {
1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 32


1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1345:Generated_Source\PSoC4/CyLib.c ****     }
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 33


1392:Generated_Source\PSoC4/CyLib.c ****         }
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1408:Generated_Source\PSoC4/CyLib.c ****         *
1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 34


1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1464:Generated_Source\PSoC4/CyLib.c ****         {
1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1485:Generated_Source\PSoC4/CyLib.c ****         }
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 35


1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1562:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 36


1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 37


1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1628:Generated_Source\PSoC4/CyLib.c ****         }
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 38


1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1694:Generated_Source\PSoC4/CyLib.c ****                 {
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1705:Generated_Source\PSoC4/CyLib.c ****                 }
1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1714:Generated_Source\PSoC4/CyLib.c ****     }
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 39


1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1740:Generated_Source\PSoC4/CyLib.c **** 
1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1749:Generated_Source\PSoC4/CyLib.c **** 
1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1751:Generated_Source\PSoC4/CyLib.c ****     }
1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 40


1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 41


1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1897:Generated_Source\PSoC4/CyLib.c ****     }
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 42


1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1930:Generated_Source\PSoC4/CyLib.c ****     }
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 43


1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2004:Generated_Source\PSoC4/CyLib.c ****     }
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 44


2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 45


2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2092:Generated_Source\PSoC4/CyLib.c **** 
2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2104:Generated_Source\PSoC4/CyLib.c ****                 {
2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2115:Generated_Source\PSoC4/CyLib.c ****     }
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 46


2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2177:Generated_Source\PSoC4/CyLib.c ****     }
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 47


2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2207:Generated_Source\PSoC4/CyLib.c ****     {
2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2231:Generated_Source\PSoC4/CyLib.c ****     }
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 48


2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2264:Generated_Source\PSoC4/CyLib.c ****     *
2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2286:Generated_Source\PSoC4/CyLib.c ****     }
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2297:Generated_Source\PSoC4/CyLib.c ****     {
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2300:Generated_Source\PSoC4/CyLib.c ****     }
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 49


2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2317:Generated_Source\PSoC4/CyLib.c ****     }
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2331:Generated_Source\PSoC4/CyLib.c ****     {
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2333:Generated_Source\PSoC4/CyLib.c ****     }
2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2354:Generated_Source\PSoC4/CyLib.c **** *
2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 425              		.loc 1 2357 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 50


 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430              	.LVL24:
 431 0000 0200     		movs	r2, r0
2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 432              		.loc 1 2360 0
 433 0002 1920     		movs	r0, #25
 434              	.LVL25:
 435 0004 0240     		ands	r2, r0
 436              	.LVL26:
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 437              		.loc 1 2361 0
 438 0006 0249     		ldr	r1, .L32
 439 0008 0B68     		ldr	r3, [r1]
 440 000a 1840     		ands	r0, r3
 441              	.LVL27:
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 442              		.loc 1 2363 0
 443 000c 0A60     		str	r2, [r1]
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2366:Generated_Source\PSoC4/CyLib.c **** }
 444              		.loc 1 2366 0
 445              		@ sp needed
 446 000e 7047     		bx	lr
 447              	.L33:
 448              		.align	2
 449              	.L32:
 450 0010 54000340 		.word	1073938516
 451              		.cfi_endproc
 452              	.LFE12:
 453              		.size	CySysGetResetReason, .-CySysGetResetReason
 454              		.section	.text.CyDisableInts,"ax",%progbits
 455              		.align	2
 456              		.global	CyDisableInts
 457              		.code	16
 458              		.thumb_func
 459              		.type	CyDisableInts, %function
 460              	CyDisableInts:
 461              	.LFB13:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 51


 462              		.loc 1 2380 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 467              		.loc 1 2384 0
 468 0000 024B     		ldr	r3, .L35
 469 0002 1868     		ldr	r0, [r3]
 470              	.LVL28:
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 471              		.loc 1 2387 0
 472 0004 0122     		movs	r2, #1
 473 0006 5242     		rsbs	r2, r2, #0
 474 0008 1A60     		str	r2, [r3]
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2390:Generated_Source\PSoC4/CyLib.c **** }
 475              		.loc 1 2390 0
 476              		@ sp needed
 477 000a 7047     		bx	lr
 478              	.L36:
 479              		.align	2
 480              	.L35:
 481 000c 80E100E0 		.word	-536813184
 482              		.cfi_endproc
 483              	.LFE13:
 484              		.size	CyDisableInts, .-CyDisableInts
 485              		.section	.text.CyEnableInts,"ax",%progbits
 486              		.align	2
 487              		.global	CyEnableInts
 488              		.code	16
 489              		.thumb_func
 490              		.type	CyEnableInts, %function
 491              	CyEnableInts:
 492              	.LFB14:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2403:Generated_Source\PSoC4/CyLib.c **** {
 493              		.loc 1 2403 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 52


 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498              	.LVL29:
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 499              		.loc 1 2404 0
 500 0000 014B     		ldr	r3, .L38
 501 0002 1860     		str	r0, [r3]
2405:Generated_Source\PSoC4/CyLib.c **** }
 502              		.loc 1 2405 0
 503              		@ sp needed
 504 0004 7047     		bx	lr
 505              	.L39:
 506 0006 C046     		.align	2
 507              	.L38:
 508 0008 00E100E0 		.word	-536813312
 509              		.cfi_endproc
 510              	.LFE14:
 511              		.size	CyEnableInts, .-CyEnableInts
 512              		.section	.text.CyIntEnable,"ax",%progbits
 513              		.align	2
 514              		.global	CyIntEnable
 515              		.code	16
 516              		.thumb_func
 517              		.type	CyIntEnable, %function
 518              	CyIntEnable:
 519              	.LFB21:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2431:Generated_Source\PSoC4/CyLib.c **** 
2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2436:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 53


2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2441:Generated_Source\PSoC4/CyLib.c **** }
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2468:Generated_Source\PSoC4/CyLib.c **** }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 54


2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2497:Generated_Source\PSoC4/CyLib.c **** }
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2518:Generated_Source\PSoC4/CyLib.c **** }
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2540:Generated_Source\PSoC4/CyLib.c **** 
2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2549:Generated_Source\PSoC4/CyLib.c **** }
2550:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 55


2551:Generated_Source\PSoC4/CyLib.c **** 
2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2573:Generated_Source\PSoC4/CyLib.c **** }
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 520              		.loc 1 2586 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525              	.LVL30:
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 526              		.loc 1 2587 0
 527 0000 1F23     		movs	r3, #31
 528 0002 1840     		ands	r0, r3
 529              	.LVL31:
 530 0004 1E3B     		subs	r3, r3, #30
 531 0006 8340     		lsls	r3, r3, r0
 532 0008 014A     		ldr	r2, .L41
 533 000a 1360     		str	r3, [r2]
2588:Generated_Source\PSoC4/CyLib.c **** }
 534              		.loc 1 2588 0
 535              		@ sp needed
 536 000c 7047     		bx	lr
 537              	.L42:
 538 000e C046     		.align	2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 56


 539              	.L41:
 540 0010 00E100E0 		.word	-536813312
 541              		.cfi_endproc
 542              	.LFE21:
 543              		.size	CyIntEnable, .-CyIntEnable
 544              		.section	.text.CyIntGetState,"ax",%progbits
 545              		.align	2
 546              		.global	CyIntGetState
 547              		.code	16
 548              		.thumb_func
 549              		.type	CyIntGetState, %function
 550              	CyIntGetState:
 551              	.LFB22:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
 552              		.loc 1 2604 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL32:
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 558              		.loc 1 2606 0
 559 0000 044B     		ldr	r3, .L44
 560 0002 1B68     		ldr	r3, [r3]
 561 0004 1F22     		movs	r2, #31
 562 0006 1040     		ands	r0, r2
 563              	.LVL33:
 564 0008 C340     		lsrs	r3, r3, r0
 565 000a 1800     		movs	r0, r3
 566 000c 0123     		movs	r3, #1
 567 000e 1840     		ands	r0, r3
2607:Generated_Source\PSoC4/CyLib.c **** }
 568              		.loc 1 2607 0
 569              		@ sp needed
 570 0010 7047     		bx	lr
 571              	.L45:
 572 0012 C046     		.align	2
 573              	.L44:
 574 0014 00E100E0 		.word	-536813312
 575              		.cfi_endproc
 576              	.LFE22:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 57


 577              		.size	CyIntGetState, .-CyIntGetState
 578              		.section	.text.CyIntDisable,"ax",%progbits
 579              		.align	2
 580              		.global	CyIntDisable
 581              		.code	16
 582              		.thumb_func
 583              		.type	CyIntDisable, %function
 584              	CyIntDisable:
 585              	.LFB23:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2613:Generated_Source\PSoC4/CyLib.c **** *
2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 586              		.loc 1 2620 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LVL34:
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 592              		.loc 1 2621 0
 593 0000 1F23     		movs	r3, #31
 594 0002 1840     		ands	r0, r3
 595              	.LVL35:
 596 0004 1E3B     		subs	r3, r3, #30
 597 0006 8340     		lsls	r3, r3, r0
 598 0008 014A     		ldr	r2, .L47
 599 000a 1360     		str	r3, [r2]
2622:Generated_Source\PSoC4/CyLib.c **** }
 600              		.loc 1 2622 0
 601              		@ sp needed
 602 000c 7047     		bx	lr
 603              	.L48:
 604 000e C046     		.align	2
 605              	.L47:
 606 0010 80E100E0 		.word	-536813184
 607              		.cfi_endproc
 608              	.LFE23:
 609              		.size	CyIntDisable, .-CyIntDisable
 610              		.section	.text.CyIntSetPending,"ax",%progbits
 611              		.align	2
 612              		.global	CyIntSetPending
 613              		.code	16
 614              		.thumb_func
 615              		.type	CyIntSetPending, %function
 616              	CyIntSetPending:
 617              	.LFB24:
2623:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 58


2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 618              		.loc 1 2634 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623              	.LVL36:
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 624              		.loc 1 2635 0
 625 0000 1F23     		movs	r3, #31
 626 0002 1840     		ands	r0, r3
 627              	.LVL37:
 628 0004 1E3B     		subs	r3, r3, #30
 629 0006 8340     		lsls	r3, r3, r0
 630 0008 014A     		ldr	r2, .L50
 631 000a 1360     		str	r3, [r2]
2636:Generated_Source\PSoC4/CyLib.c **** }
 632              		.loc 1 2636 0
 633              		@ sp needed
 634 000c 7047     		bx	lr
 635              	.L51:
 636 000e C046     		.align	2
 637              	.L50:
 638 0010 00E200E0 		.word	-536813056
 639              		.cfi_endproc
 640              	.LFE24:
 641              		.size	CyIntSetPending, .-CyIntSetPending
 642              		.section	.text.CyIntClearPending,"ax",%progbits
 643              		.align	2
 644              		.global	CyIntClearPending
 645              		.code	16
 646              		.thumb_func
 647              		.type	CyIntClearPending, %function
 648              	CyIntClearPending:
 649              	.LFB25:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 59


2649:Generated_Source\PSoC4/CyLib.c **** {
 650              		.loc 1 2649 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL38:
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 656              		.loc 1 2650 0
 657 0000 1F23     		movs	r3, #31
 658 0002 1840     		ands	r0, r3
 659              	.LVL39:
 660 0004 1E3B     		subs	r3, r3, #30
 661 0006 8340     		lsls	r3, r3, r0
 662 0008 014A     		ldr	r2, .L53
 663 000a 1360     		str	r3, [r2]
2651:Generated_Source\PSoC4/CyLib.c **** }
 664              		.loc 1 2651 0
 665              		@ sp needed
 666 000c 7047     		bx	lr
 667              	.L54:
 668 000e C046     		.align	2
 669              	.L53:
 670 0010 80E200E0 		.word	-536812928
 671              		.cfi_endproc
 672              	.LFE25:
 673              		.size	CyIntClearPending, .-CyIntClearPending
 674              		.section	.text.CyHalt,"ax",%progbits
 675              		.align	2
 676              		.global	CyHalt
 677              		.code	16
 678              		.thumb_func
 679              		.type	CyHalt, %function
 680              	CyHalt:
 681              	.LFB26:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 682              		.loc 1 2664 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687              	.LVL40:
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 60


2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 688              		.loc 1 2673 0
 689              		.syntax divided
 690              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 691 0000 01BE     		    bkpt    1
 692              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 693              		.loc 1 2677 0
 694              		.thumb
 695              		.syntax unified
 696              		@ sp needed
 697 0002 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE26:
 700              		.size	CyHalt, .-CyHalt
 701              		.section	.text.CyIntSetSysVector,"ax",%progbits
 702              		.align	2
 703              		.global	CyIntSetSysVector
 704              		.code	16
 705              		.thumb_func
 706              		.type	CyIntSetSysVector, %function
 707              	CyIntSetSysVector:
 708              	.LFB15:
2428:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 709              		.loc 1 2428 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              	.LVL41:
 714 0000 70B5     		push	{r4, r5, r6, lr}
 715              		.cfi_def_cfa_offset 16
 716              		.cfi_offset 4, -16
 717              		.cfi_offset 5, -12
 718              		.cfi_offset 6, -8
 719              		.cfi_offset 14, -4
 720 0002 0400     		movs	r4, r0
 721 0004 0D00     		movs	r5, r1
 722              	.LVL42:
2432:Generated_Source\PSoC4/CyLib.c **** 
 723              		.loc 1 2432 0
 724 0006 0F28     		cmp	r0, #15
 725 0008 02D9     		bls	.L57
2432:Generated_Source\PSoC4/CyLib.c **** 
 726              		.loc 1 2432 0 is_stmt 0 discriminator 1
 727 000a 0020     		movs	r0, #0
 728              	.LVL43:
 729 000c FFF7FEFF 		bl	CyHalt
 730              	.LVL44:
 731              	.L57:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 61


2435:Generated_Source\PSoC4/CyLib.c **** 
 732              		.loc 1 2435 0 is_stmt 1
 733 0010 A400     		lsls	r4, r4, #2
 734 0012 8023     		movs	r3, #128
 735 0014 9B05     		lsls	r3, r3, #22
 736 0016 9C46     		mov	ip, r3
 737 0018 6444     		add	r4, r4, ip
 738 001a 2068     		ldr	r0, [r4]
 739              	.LVL45:
2438:Generated_Source\PSoC4/CyLib.c **** 
 740              		.loc 1 2438 0
 741 001c 2560     		str	r5, [r4]
2441:Generated_Source\PSoC4/CyLib.c **** 
 742              		.loc 1 2441 0
 743              		@ sp needed
 744              	.LVL46:
 745 001e 70BD     		pop	{r4, r5, r6, pc}
 746              		.cfi_endproc
 747              	.LFE15:
 748              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 749              		.section	.text.CyIntGetSysVector,"ax",%progbits
 750              		.align	2
 751              		.global	CyIntGetSysVector
 752              		.code	16
 753              		.thumb_func
 754              		.type	CyIntGetSysVector, %function
 755              	CyIntGetSysVector:
 756              	.LFB16:
2462:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 757              		.loc 1 2462 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL47:
 762 0000 10B5     		push	{r4, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 4, -8
 765              		.cfi_offset 14, -4
 766 0002 0400     		movs	r4, r0
 767              	.LVL48:
2465:Generated_Source\PSoC4/CyLib.c **** 
 768              		.loc 1 2465 0
 769 0004 0F28     		cmp	r0, #15
 770 0006 02D9     		bls	.L59
2465:Generated_Source\PSoC4/CyLib.c **** 
 771              		.loc 1 2465 0 is_stmt 0 discriminator 1
 772 0008 0020     		movs	r0, #0
 773              	.LVL49:
 774 000a FFF7FEFF 		bl	CyHalt
 775              	.LVL50:
 776              	.L59:
2467:Generated_Source\PSoC4/CyLib.c **** }
 777              		.loc 1 2467 0 is_stmt 1
 778 000e A400     		lsls	r4, r4, #2
 779 0010 8023     		movs	r3, #128
 780 0012 9B05     		lsls	r3, r3, #22
 781 0014 9C46     		mov	ip, r3
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 62


 782 0016 6444     		add	r4, r4, ip
 783 0018 2068     		ldr	r0, [r4]
2468:Generated_Source\PSoC4/CyLib.c **** 
 784              		.loc 1 2468 0
 785              		@ sp needed
 786 001a 10BD     		pop	{r4, pc}
 787              		.cfi_endproc
 788              	.LFE16:
 789              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 790              		.section	.text.CyIntSetVector,"ax",%progbits
 791              		.align	2
 792              		.global	CyIntSetVector
 793              		.code	16
 794              		.thumb_func
 795              		.type	CyIntSetVector, %function
 796              	CyIntSetVector:
 797              	.LFB17:
2484:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 798              		.loc 1 2484 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL51:
 803 0000 70B5     		push	{r4, r5, r6, lr}
 804              		.cfi_def_cfa_offset 16
 805              		.cfi_offset 4, -16
 806              		.cfi_offset 5, -12
 807              		.cfi_offset 6, -8
 808              		.cfi_offset 14, -4
 809 0002 0400     		movs	r4, r0
 810 0004 0D00     		movs	r5, r1
 811              	.LVL52:
2488:Generated_Source\PSoC4/CyLib.c **** 
 812              		.loc 1 2488 0
 813 0006 0F28     		cmp	r0, #15
 814 0008 02D9     		bls	.L61
2488:Generated_Source\PSoC4/CyLib.c **** 
 815              		.loc 1 2488 0 is_stmt 0 discriminator 1
 816 000a 0020     		movs	r0, #0
 817              	.LVL53:
 818 000c FFF7FEFF 		bl	CyHalt
 819              	.LVL54:
 820              	.L61:
2491:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2491 0 is_stmt 1
 822 0010 1034     		adds	r4, r4, #16
 823 0012 A400     		lsls	r4, r4, #2
 824 0014 8023     		movs	r3, #128
 825 0016 9B05     		lsls	r3, r3, #22
 826 0018 9C46     		mov	ip, r3
 827 001a 6444     		add	r4, r4, ip
 828 001c 2068     		ldr	r0, [r4]
 829              	.LVL55:
2494:Generated_Source\PSoC4/CyLib.c **** 
 830              		.loc 1 2494 0
 831 001e 2560     		str	r5, [r4]
2497:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 63


 832              		.loc 1 2497 0
 833              		@ sp needed
 834              	.LVL56:
 835 0020 70BD     		pop	{r4, r5, r6, pc}
 836              		.cfi_endproc
 837              	.LFE17:
 838              		.size	CyIntSetVector, .-CyIntSetVector
 839 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 840              		.align	2
 841              		.global	CyIntGetVector
 842              		.code	16
 843              		.thumb_func
 844              		.type	CyIntGetVector, %function
 845              	CyIntGetVector:
 846              	.LFB18:
2512:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 847              		.loc 1 2512 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL57:
 852 0000 10B5     		push	{r4, lr}
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 4, -8
 855              		.cfi_offset 14, -4
 856 0002 0400     		movs	r4, r0
 857              	.LVL58:
2515:Generated_Source\PSoC4/CyLib.c **** 
 858              		.loc 1 2515 0
 859 0004 0F28     		cmp	r0, #15
 860 0006 02D9     		bls	.L63
2515:Generated_Source\PSoC4/CyLib.c **** 
 861              		.loc 1 2515 0 is_stmt 0 discriminator 1
 862 0008 0020     		movs	r0, #0
 863              	.LVL59:
 864 000a FFF7FEFF 		bl	CyHalt
 865              	.LVL60:
 866              	.L63:
2517:Generated_Source\PSoC4/CyLib.c **** }
 867              		.loc 1 2517 0 is_stmt 1
 868 000e 1034     		adds	r4, r4, #16
 869 0010 A400     		lsls	r4, r4, #2
 870 0012 8023     		movs	r3, #128
 871 0014 9B05     		lsls	r3, r3, #22
 872 0016 9C46     		mov	ip, r3
 873 0018 6444     		add	r4, r4, ip
 874 001a 2068     		ldr	r0, [r4]
2518:Generated_Source\PSoC4/CyLib.c **** 
 875              		.loc 1 2518 0
 876              		@ sp needed
 877 001c 10BD     		pop	{r4, pc}
 878              		.cfi_endproc
 879              	.LFE18:
 880              		.size	CyIntGetVector, .-CyIntGetVector
 881 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 882              		.align	2
 883              		.global	CyIntSetPriority
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 64


 884              		.code	16
 885              		.thumb_func
 886              		.type	CyIntSetPriority, %function
 887              	CyIntSetPriority:
 888              	.LFB19:
2531:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 889              		.loc 1 2531 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL61:
 894 0000 70B5     		push	{r4, r5, r6, lr}
 895              		.cfi_def_cfa_offset 16
 896              		.cfi_offset 4, -16
 897              		.cfi_offset 5, -12
 898              		.cfi_offset 6, -8
 899              		.cfi_offset 14, -4
 900 0002 0400     		movs	r4, r0
 901 0004 0E00     		movs	r6, r1
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 902              		.loc 1 2536 0
 903 0006 0329     		cmp	r1, #3
 904 0008 02D9     		bls	.L65
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 905              		.loc 1 2536 0 is_stmt 0 discriminator 1
 906 000a 0020     		movs	r0, #0
 907              	.LVL62:
 908 000c FFF7FEFF 		bl	CyHalt
 909              	.LVL63:
 910              	.L65:
2537:Generated_Source\PSoC4/CyLib.c **** 
 911              		.loc 1 2537 0 is_stmt 1
 912 0010 0F2C     		cmp	r4, #15
 913 0012 02D9     		bls	.L66
2537:Generated_Source\PSoC4/CyLib.c **** 
 914              		.loc 1 2537 0 is_stmt 0 discriminator 1
 915 0014 0020     		movs	r0, #0
 916 0016 FFF7FEFF 		bl	CyHalt
 917              	.LVL64:
 918              	.L66:
2539:Generated_Source\PSoC4/CyLib.c **** 
 919              		.loc 1 2539 0 is_stmt 1
 920 001a 0325     		movs	r5, #3
 921 001c 2540     		ands	r5, r4
 922 001e ED00     		lsls	r5, r5, #3
 923 0020 0635     		adds	r5, r5, #6
 924              	.LVL65:
2541:Generated_Source\PSoC4/CyLib.c **** 
 925              		.loc 1 2541 0
 926 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 927              	.LVL66:
2543:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 928              		.loc 1 2543 0
 929 0026 A408     		lsrs	r4, r4, #2
 930 0028 A400     		lsls	r4, r4, #2
 931 002a 074B     		ldr	r3, .L67
 932 002c 9C46     		mov	ip, r3
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 65


 933 002e 6444     		add	r4, r4, ip
 934 0030 2168     		ldr	r1, [r4]
 935              	.LVL67:
2544:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 936              		.loc 1 2544 0
 937 0032 0323     		movs	r3, #3
 938 0034 AB40     		lsls	r3, r3, r5
 939 0036 9943     		bics	r1, r3
 940              	.LVL68:
 941 0038 0B00     		movs	r3, r1
 942              	.LVL69:
2545:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 943              		.loc 1 2545 0
 944 003a 3100     		movs	r1, r6
 945              	.LVL70:
 946 003c A940     		lsls	r1, r1, r5
 947 003e 1943     		orrs	r1, r3
 948              	.LVL71:
2546:Generated_Source\PSoC4/CyLib.c **** 
 949              		.loc 1 2546 0
 950 0040 2160     		str	r1, [r4]
2548:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2548 0
 952 0042 FFF7FEFF 		bl	CyExitCriticalSection
 953              	.LVL72:
2549:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2549 0
 955              		@ sp needed
 956              	.LVL73:
 957 0046 70BD     		pop	{r4, r5, r6, pc}
 958              	.L68:
 959              		.align	2
 960              	.L67:
 961 0048 00E400E0 		.word	-536812544
 962              		.cfi_endproc
 963              	.LFE19:
 964              		.size	CyIntSetPriority, .-CyIntSetPriority
 965              		.section	.text.CyIntGetPriority,"ax",%progbits
 966              		.align	2
 967              		.global	CyIntGetPriority
 968              		.code	16
 969              		.thumb_func
 970              		.type	CyIntGetPriority, %function
 971              	CyIntGetPriority:
 972              	.LFB20:
2565:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 973              		.loc 1 2565 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              	.LVL74:
 978 0000 10B5     		push	{r4, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 4, -8
 981              		.cfi_offset 14, -4
 982 0002 0400     		movs	r4, r0
2568:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 66


 983              		.loc 1 2568 0
 984 0004 0F28     		cmp	r0, #15
 985 0006 02D9     		bls	.L70
2568:Generated_Source\PSoC4/CyLib.c **** 
 986              		.loc 1 2568 0 is_stmt 0 discriminator 1
 987 0008 0020     		movs	r0, #0
 988              	.LVL75:
 989 000a FFF7FEFF 		bl	CyHalt
 990              	.LVL76:
 991              	.L70:
2570:Generated_Source\PSoC4/CyLib.c **** 
 992              		.loc 1 2570 0 is_stmt 1
 993 000e A308     		lsrs	r3, r4, #2
 994 0010 9B00     		lsls	r3, r3, #2
 995 0012 054A     		ldr	r2, .L71
 996 0014 9446     		mov	ip, r2
 997 0016 6344     		add	r3, r3, ip
 998 0018 1868     		ldr	r0, [r3]
 999 001a 0323     		movs	r3, #3
 1000 001c 1C40     		ands	r4, r3
 1001 001e E400     		lsls	r4, r4, #3
 1002 0020 0634     		adds	r4, r4, #6
 1003 0022 E040     		lsrs	r0, r0, r4
 1004              	.LVL77:
2572:Generated_Source\PSoC4/CyLib.c **** }
 1005              		.loc 1 2572 0
 1006 0024 1840     		ands	r0, r3
 1007              	.LVL78:
2573:Generated_Source\PSoC4/CyLib.c **** 
 1008              		.loc 1 2573 0
 1009              		@ sp needed
 1010 0026 10BD     		pop	{r4, pc}
 1011              	.L72:
 1012              		.align	2
 1013              	.L71:
 1014 0028 00E400E0 		.word	-536812544
 1015              		.cfi_endproc
 1016              	.LFE20:
 1017              		.size	CyIntGetPriority, .-CyIntGetPriority
 1018              		.section	.text.CySoftwareReset,"ax",%progbits
 1019              		.align	2
 1020              		.global	CySoftwareReset
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	CySoftwareReset, %function
 1024              	CySoftwareReset:
 1025              	.LFB27:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 67


2688:Generated_Source\PSoC4/CyLib.c **** {
 1026              		.loc 1 2688 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              		@ link register save eliminated.
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1031              		.loc 1 2693 0
 1032 0000 034A     		ldr	r2, .L74
 1033 0002 1368     		ldr	r3, [r2]
 1034 0004 1B04     		lsls	r3, r3, #16
 1035 0006 1B0C     		lsrs	r3, r3, #16
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1036              		.loc 1 2694 0
 1037 0008 0249     		ldr	r1, .L74+4
 1038 000a 0B43     		orrs	r3, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1039              		.loc 1 2693 0
 1040 000c 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c **** }
 1041              		.loc 1 2695 0
 1042              		@ sp needed
 1043 000e 7047     		bx	lr
 1044              	.L75:
 1045              		.align	2
 1046              	.L74:
 1047 0010 0CED00E0 		.word	-536810228
 1048 0014 0400FA05 		.word	100270084
 1049              		.cfi_endproc
 1050              	.LFE27:
 1051              		.size	CySoftwareReset, .-CySoftwareReset
 1052              		.section	.text.CyDelay,"ax",%progbits
 1053              		.align	2
 1054              		.global	CyDelay
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	CyDelay, %function
 1058              	CyDelay:
 1059              	.LFB28:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2708:Generated_Source\PSoC4/CyLib.c **** {
 1060              		.loc 1 2708 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 68


 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              	.LVL79:
 1065 0000 10B5     		push	{r4, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 4, -8
 1068              		.cfi_offset 14, -4
 1069 0002 0400     		movs	r4, r0
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1070              		.loc 1 2709 0
 1071 0004 06E0     		b	.L77
 1072              	.LVL80:
 1073              	.L78:
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1074              		.loc 1 2714 0
 1075 0006 084B     		ldr	r3, .L79
 1076 0008 5868     		ldr	r0, [r3, #4]
 1077 000a FFF7FEFF 		bl	CyDelayCycles
 1078              	.LVL81:
2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1079              		.loc 1 2715 0
 1080 000e 074B     		ldr	r3, .L79+4
 1081 0010 9C46     		mov	ip, r3
 1082 0012 6444     		add	r4, r4, ip
 1083              	.LVL82:
 1084              	.L77:
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1085              		.loc 1 2709 0
 1086 0014 8023     		movs	r3, #128
 1087 0016 1B02     		lsls	r3, r3, #8
 1088 0018 9C42     		cmp	r4, r3
 1089 001a F4D8     		bhi	.L78
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1090              		.loc 1 2718 0
 1091 001c 024B     		ldr	r3, .L79
 1092 001e 9868     		ldr	r0, [r3, #8]
 1093 0020 6043     		muls	r0, r4
 1094 0022 FFF7FEFF 		bl	CyDelayCycles
 1095              	.LVL83:
2719:Generated_Source\PSoC4/CyLib.c **** }
 1096              		.loc 1 2719 0
 1097              		@ sp needed
 1098              	.LVL84:
 1099 0026 10BD     		pop	{r4, pc}
 1100              	.L80:
 1101              		.align	2
 1102              	.L79:
 1103 0028 00000000 		.word	.LANCHOR0
 1104 002c 0080FFFF 		.word	-32768
 1105              		.cfi_endproc
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 69


 1106              	.LFE28:
 1107              		.size	CyDelay, .-CyDelay
 1108              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1109              		.align	2
 1110              		.global	CySysClkImoEnableWcoLock
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	CySysClkImoEnableWcoLock, %function
 1114              	CySysClkImoEnableWcoLock:
 1115              	.LFB3:
 167:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1116              		.loc 1 167 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 8
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120 0000 70B5     		push	{r4, r5, r6, lr}
 1121              		.cfi_def_cfa_offset 16
 1122              		.cfi_offset 4, -16
 1123              		.cfi_offset 5, -12
 1124              		.cfi_offset 6, -8
 1125              		.cfi_offset 14, -4
 1126 0002 82B0     		sub	sp, sp, #8
 1127              		.cfi_def_cfa_offset 24
 1128              	.LVL85:
 178:Generated_Source\PSoC4/CyLib.c ****         {
 1129              		.loc 1 178 0
 1130 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1131              	.LVL86:
 1132 0008 0028     		cmp	r0, #0
 1133 000a 4DD0     		beq	.L81
 180:Generated_Source\PSoC4/CyLib.c **** 
 1134              		.loc 1 180 0
 1135 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1136              	.LVL87:
 1137 0010 0500     		movs	r5, r0
 1138              	.LVL88:
 203:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1139              		.loc 1 203 0
 1140 0012 264B     		ldr	r3, .L85
 1141 0014 1A68     		ldr	r2, [r3]
 1142 0016 9200     		lsls	r2, r2, #2
 1143 0018 1C23     		movs	r3, #28
 1144 001a 1A40     		ands	r2, r3
 204:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1145              		.loc 1 204 0
 1146 001c 1832     		adds	r2, r2, #24
 205:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1147              		.loc 1 205 0
 1148 001e 244B     		ldr	r3, .L85+4
 1149 0020 1B68     		ldr	r3, [r3]
 1150 0022 9B08     		lsrs	r3, r3, #2
 1151 0024 0321     		movs	r1, #3
 1152 0026 0B40     		ands	r3, r1
 203:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1153              		.loc 1 203 0
 1154 0028 DA40     		lsrs	r2, r2, r3
 1155              	.LVL89:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 70


 214:Generated_Source\PSoC4/CyLib.c ****             
 1156              		.loc 1 214 0
 1157 002a 0021     		movs	r1, #0
 1158 002c 214B     		ldr	r3, .L85+8
 1159 002e 1960     		str	r1, [r3]
 225:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1160              		.loc 1 225 0
 1161 0030 214C     		ldr	r4, .L85+12
 1162 0032 2168     		ldr	r1, [r4]
 1163 0034 214B     		ldr	r3, .L85+16
 1164 0036 0B40     		ands	r3, r1
 1165              	.LVL90:
 231:Generated_Source\PSoC4/CyLib.c **** 
 1166              		.loc 1 231 0
 1167 0038 2149     		ldr	r1, .L85+20
 1168 003a 4A43     		muls	r2, r1
 1169              	.LVL91:
 1170 003c 8021     		movs	r1, #128
 1171 003e C901     		lsls	r1, r1, #7
 1172 0040 8C46     		mov	ip, r1
 1173 0042 6244     		add	r2, r2, ip
 1174 0044 D20B     		lsrs	r2, r2, #15
 1175 0046 013A     		subs	r2, r2, #1
 1176 0048 5205     		lsls	r2, r2, #21
 1177 004a 520D     		lsrs	r2, r2, #21
 1178 004c 1343     		orrs	r3, r2
 1179              	.LVL92:
 234:Generated_Source\PSoC4/CyLib.c **** 
 1180              		.loc 1 234 0
 1181 004e A022     		movs	r2, #160
 1182 0050 5203     		lsls	r2, r2, #13
 1183 0052 1343     		orrs	r3, r2
 1184              	.LVL93:
 236:Generated_Source\PSoC4/CyLib.c ****             
 1185              		.loc 1 236 0
 1186 0054 2360     		str	r3, [r4]
 238:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1187              		.loc 1 238 0
 1188 0056 1B4B     		ldr	r3, .L85+24
 1189              	.LVL94:
 1190 0058 1B68     		ldr	r3, [r3]
 1191 005a 0193     		str	r3, [sp, #4]
 1192              	.LVL95:
 239:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1193              		.loc 1 239 0
 1194 005c 3020     		movs	r0, #48
 1195 005e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1196              	.LVL96:
 240:Generated_Source\PSoC4/CyLib.c **** 
 1197              		.loc 1 240 0
 1198 0062 194A     		ldr	r2, .L85+28
 1199 0064 1368     		ldr	r3, [r2]
 1200 0066 8021     		movs	r1, #128
 1201 0068 C905     		lsls	r1, r1, #23
 1202 006a 0B43     		orrs	r3, r1
 1203 006c 1360     		str	r3, [r2]
 242:Generated_Source\PSoC4/CyLib.c ****             
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 71


 1204              		.loc 1 242 0
 1205 006e 2668     		ldr	r6, [r4]
 1206 0070 164B     		ldr	r3, .L85+32
 1207 0072 1E40     		ands	r6, r3
 1208              	.LVL97:
 175:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 1209              		.loc 1 175 0
 1210 0074 0024     		movs	r4, #0
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1211              		.loc 1 244 0
 1212 0076 07E0     		b	.L83
 1213              	.LVL98:
 1214              	.L84:
 246:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 1215              		.loc 1 246 0
 1216 0078 0120     		movs	r0, #1
 1217 007a FFF7FEFF 		bl	CyDelay
 1218              	.LVL99:
 247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 1219              		.loc 1 247 0
 1220 007e 1034     		adds	r4, r4, #16
 1221              	.LVL100:
 248:Generated_Source\PSoC4/CyLib.c ****             }
 1222              		.loc 1 248 0
 1223 0080 A305     		lsls	r3, r4, #22
 1224 0082 3343     		orrs	r3, r6
 1225 0084 0C4A     		ldr	r2, .L85+12
 1226 0086 1360     		str	r3, [r2]
 1227              	.LVL101:
 1228              	.L83:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1229              		.loc 1 244 0
 1230 0088 EE2C     		cmp	r4, #238
 1231 008a F5D9     		bls	.L84
 251:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 1232              		.loc 1 251 0
 1233 008c 0120     		movs	r0, #1
 1234 008e FFF7FEFF 		bl	CyDelay
 1235              	.LVL102:
 252:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 1236              		.loc 1 252 0
 1237 0092 FF23     		movs	r3, #255
 1238 0094 9B05     		lsls	r3, r3, #22
 1239 0096 1E43     		orrs	r6, r3
 1240              	.LVL103:
 1241 0098 074B     		ldr	r3, .L85+12
 1242 009a 1E60     		str	r6, [r3]
 255:Generated_Source\PSoC4/CyLib.c **** 
 1243              		.loc 1 255 0
 1244 009c 019A     		ldr	r2, [sp, #4]
 1245 009e 094B     		ldr	r3, .L85+24
 1246 00a0 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/CyLib.c ****         }
 1247              		.loc 1 257 0
 1248 00a2 2800     		movs	r0, r5
 1249 00a4 FFF7FEFF 		bl	CyExitCriticalSection
 1250              	.LVL104:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 72


 1251              	.L81:
 259:Generated_Source\PSoC4/CyLib.c **** 
 1252              		.loc 1 259 0
 1253 00a8 02B0     		add	sp, sp, #8
 1254              		@ sp needed
 1255 00aa 70BD     		pop	{r4, r5, r6, pc}
 1256              	.L86:
 1257              		.align	2
 1258              	.L85:
 1259 00ac 080F0340 		.word	1073942280
 1260 00b0 28000340 		.word	1073938472
 1261 00b4 0C0F0340 		.word	1073942284
 1262 00b8 08000740 		.word	1074200584
 1263 00bc 00F800C0 		.word	-1073678336
 1264 00c0 40420F00 		.word	1000000
 1265 00c4 30001040 		.word	1074790448
 1266 00c8 00000740 		.word	1074200576
 1267 00cc FFFF3FC0 		.word	-1069547521
 1268              		.cfi_endproc
 1269              	.LFE3:
 1270              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1271              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1272              		.align	2
 1273              		.global	CySysClkWriteImoFreq
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	CySysClkWriteImoFreq, %function
 1277              	CySysClkWriteImoFreq:
 1278              	.LFB10:
 953:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1279              		.loc 1 953 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 8
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              	.LVL105:
 1284 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1285              		.cfi_def_cfa_offset 20
 1286              		.cfi_offset 4, -20
 1287              		.cfi_offset 5, -16
 1288              		.cfi_offset 6, -12
 1289              		.cfi_offset 7, -8
 1290              		.cfi_offset 14, -4
 1291 0002 83B0     		sub	sp, sp, #12
 1292              		.cfi_def_cfa_offset 32
 1293 0004 0400     		movs	r4, r0
 1294              	.LVL106:
 970:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1295              		.loc 1 970 0
 1296 0006 1828     		cmp	r0, #24
 1297 0008 0BD0     		beq	.L88
 970:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1298              		.loc 1 970 0 is_stmt 0 discriminator 1
 1299 000a 1C28     		cmp	r0, #28
 1300 000c 09D0     		beq	.L88
 970:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1301              		.loc 1 970 0 discriminator 2
 1302 000e 2028     		cmp	r0, #32
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 73


 1303 0010 07D0     		beq	.L88
 970:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1304              		.loc 1 970 0 discriminator 3
 1305 0012 2428     		cmp	r0, #36
 1306 0014 05D0     		beq	.L88
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1307              		.loc 1 971 0 is_stmt 1
 1308 0016 2828     		cmp	r0, #40
 1309 0018 03D0     		beq	.L88
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1310              		.loc 1 971 0 is_stmt 0 discriminator 1
 1311 001a 2C28     		cmp	r0, #44
 1312 001c 01D0     		beq	.L88
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1313              		.loc 1 971 0 discriminator 2
 1314 001e 3028     		cmp	r0, #48
 1315 0020 49D1     		bne	.L89
 1316              	.L88:
 975:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 975 0 is_stmt 1
 1318 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1319              	.LVL107:
 1320 0026 0190     		str	r0, [sp, #4]
 1321              	.LVL108:
 978:Generated_Source\PSoC4/CyLib.c ****                 {
 1322              		.loc 1 978 0
 1323 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1324              	.LVL109:
 1325 002c 0028     		cmp	r0, #0
 1326 002e 03D0     		beq	.L94
 1327              	.LVL110:
 981:Generated_Source\PSoC4/CyLib.c ****                 }
 1328              		.loc 1 981 0
 1329 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1330              	.LVL111:
 980:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1331              		.loc 1 980 0
 1332 0034 0126     		movs	r6, #1
 1333 0036 00E0     		b	.L90
 1334              	.LVL112:
 1335              	.L94:
 958:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1336              		.loc 1 958 0
 1337 0038 0026     		movs	r6, #0
 1338              	.LVL113:
 1339              	.L90:
1006:Generated_Source\PSoC4/CyLib.c **** 
 1340              		.loc 1 1006 0
 1341 003a 214A     		ldr	r2, .L95
 1342 003c 1368     		ldr	r3, [r2]
 1343 003e 0721     		movs	r1, #7
 1344 0040 8B43     		bics	r3, r1
 1345 0042 1360     		str	r3, [r2]
 1346              	.LVL114:
1024:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1347              		.loc 1 1024 0
 1348 0044 1F4B     		ldr	r3, .L95+4
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 74


 1349 0046 E318     		adds	r3, r4, r3
 1350 0048 1B78     		ldrb	r3, [r3]
 1351 004a DBB2     		uxtb	r3, r3
 1352              	.LVL115:
1026:Generated_Source\PSoC4/CyLib.c **** 
 1353              		.loc 1 1026 0
 1354 004c 1E4A     		ldr	r2, .L95+8
 1355 004e 1360     		str	r3, [r2]
1029:Generated_Source\PSoC4/CyLib.c **** 
 1356              		.loc 1 1029 0
 1357 0050 1E4A     		ldr	r2, .L95+12
 1358 0052 1368     		ldr	r3, [r2]
 1359              	.LVL116:
 1360 0054 8B43     		bics	r3, r1
 1361 0056 1360     		str	r3, [r2]
 1362              	.LVL117:
1032:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1363              		.loc 1 1032 0
 1364 0058 1D48     		ldr	r0, .L95+16
 1365 005a 0368     		ldr	r3, [r0]
 1366 005c 7F22     		movs	r2, #127
 1367 005e 9343     		bics	r3, r2
 1368 0060 1900     		movs	r1, r3
1033:Generated_Source\PSoC4/CyLib.c **** 
 1369              		.loc 1 1033 0
 1370 0062 1C4B     		ldr	r3, .L95+20
 1371 0064 E318     		adds	r3, r4, r3
 1372 0066 1B78     		ldrb	r3, [r3]
 1373 0068 1340     		ands	r3, r2
1032:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1374              		.loc 1 1032 0
 1375 006a 0B43     		orrs	r3, r1
 1376 006c 0360     		str	r3, [r0]
1035:Generated_Source\PSoC4/CyLib.c **** 
 1377              		.loc 1 1035 0
 1378 006e 3220     		movs	r0, #50
 1379 0070 FFF7FEFF 		bl	CyDelayCycles
 1380              	.LVL118:
1037:Generated_Source\PSoC4/CyLib.c ****             {
 1381              		.loc 1 1037 0
 1382 0074 182C     		cmp	r4, #24
 1383 0076 16D9     		bls	.L91
1040:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1384              		.loc 1 1040 0
 1385 0078 114F     		ldr	r7, .L95
 1386 007a 3B68     		ldr	r3, [r7]
 1387 007c 0725     		movs	r5, #7
 1388 007e AB43     		bics	r3, r5
 1389 0080 1A00     		movs	r2, r3
1041:Generated_Source\PSoC4/CyLib.c **** 
 1390              		.loc 1 1041 0
 1391 0082 2300     		movs	r3, r4
 1392 0084 1C3B     		subs	r3, r3, #28
 1393 0086 9B08     		lsrs	r3, r3, #2
 1394 0088 2B40     		ands	r3, r5
1040:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1395              		.loc 1 1040 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 75


 1396 008a 1343     		orrs	r3, r2
 1397 008c 3B60     		str	r3, [r7]
1043:Generated_Source\PSoC4/CyLib.c **** 
 1398              		.loc 1 1043 0
 1399 008e 3220     		movs	r0, #50
 1400 0090 FFF7FEFF 		bl	CyDelayCycles
 1401              	.LVL119:
1047:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1402              		.loc 1 1047 0
 1403 0094 3A68     		ldr	r2, [r7]
 1404 0096 AA43     		bics	r2, r5
1048:Generated_Source\PSoC4/CyLib.c ****             }
 1405              		.loc 1 1048 0
 1406 0098 2300     		movs	r3, r4
 1407 009a 183B     		subs	r3, r3, #24
 1408 009c 9B08     		lsrs	r3, r3, #2
 1409 009e 2C00     		movs	r4, r5
 1410              	.LVL120:
 1411 00a0 1C40     		ands	r4, r3
1047:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1412              		.loc 1 1047 0
 1413 00a2 1443     		orrs	r4, r2
 1414 00a4 3C60     		str	r4, [r7]
 1415              	.L91:
1052:Generated_Source\PSoC4/CyLib.c ****                 {
 1416              		.loc 1 1052 0
 1417 00a6 012E     		cmp	r6, #1
 1418 00a8 01D1     		bne	.L92
1054:Generated_Source\PSoC4/CyLib.c ****                 }
 1419              		.loc 1 1054 0
 1420 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1421              	.LVL121:
 1422              	.L92:
1066:Generated_Source\PSoC4/CyLib.c ****         }
 1423              		.loc 1 1066 0
 1424 00ae 0198     		ldr	r0, [sp, #4]
 1425 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 1426              	.LVL122:
 1427 00b4 02E0     		b	.L87
 1428              	.LVL123:
 1429              	.L89:
1071:Generated_Source\PSoC4/CyLib.c ****         }
 1430              		.loc 1 1071 0 discriminator 1
 1431 00b6 0020     		movs	r0, #0
 1432              	.LVL124:
 1433 00b8 FFF7FEFF 		bl	CyHalt
 1434              	.LVL125:
 1435              	.L87:
1073:Generated_Source\PSoC4/CyLib.c **** 
 1436              		.loc 1 1073 0
 1437 00bc 03B0     		add	sp, sp, #12
 1438              		@ sp needed
 1439 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 1440              	.L96:
 1441              		.align	2
 1442              	.L95:
 1443 00c0 080F0340 		.word	1073942280
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 76


 1444 00c4 CDF1FF0F 		.word	268431821
 1445 00c8 0C0F0340 		.word	1073942284
 1446 00cc 100F0340 		.word	1073942288
 1447 00d0 180F0340 		.word	1073942296
 1448 00d4 B4F1FF0F 		.word	268431796
 1449              		.cfi_endproc
 1450              	.LFE10:
 1451              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1452              		.section	.text.CyDelayUs,"ax",%progbits
 1453              		.align	2
 1454              		.global	CyDelayUs
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	CyDelayUs, %function
 1458              	CyDelayUs:
 1459              	.LFB29:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 1460              		.loc 1 2731 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              	.LVL126:
 1465 0000 10B5     		push	{r4, lr}
 1466              		.cfi_def_cfa_offset 8
 1467              		.cfi_offset 4, -8
 1468              		.cfi_offset 14, -4
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1469              		.loc 1 2732 0
 1470 0002 034B     		ldr	r3, .L98
 1471 0004 1B7B     		ldrb	r3, [r3, #12]
 1472 0006 5843     		muls	r0, r3
 1473              	.LVL127:
 1474 0008 FFF7FEFF 		bl	CyDelayCycles
 1475              	.LVL128:
2733:Generated_Source\PSoC4/CyLib.c **** }
 1476              		.loc 1 2733 0
 1477              		@ sp needed
 1478 000c 10BD     		pop	{r4, pc}
 1479              	.L99:
 1480 000e C046     		.align	2
 1481              	.L98:
 1482 0010 00000000 		.word	.LANCHOR0
 1483              		.cfi_endproc
 1484              	.LFE29:
 1485              		.size	CyDelayUs, .-CyDelayUs
 1486              		.global	__aeabi_uidiv
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 77


 1487              		.section	.text.CyDelayFreq,"ax",%progbits
 1488              		.align	2
 1489              		.global	CyDelayFreq
 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	CyDelayFreq, %function
 1493              	CyDelayFreq:
 1494              	.LFB30:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 1495              		.loc 1 2745 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL129:
 1500 0000 70B5     		push	{r4, r5, r6, lr}
 1501              		.cfi_def_cfa_offset 16
 1502              		.cfi_offset 4, -16
 1503              		.cfi_offset 5, -12
 1504              		.cfi_offset 6, -8
 1505              		.cfi_offset 14, -4
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1506              		.loc 1 2746 0
 1507 0002 0028     		cmp	r0, #0
 1508 0004 02D0     		beq	.L101
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1509              		.loc 1 2748 0
 1510 0006 0C4B     		ldr	r3, .L103
 1511 0008 1861     		str	r0, [r3, #16]
 1512 000a 02E0     		b	.L102
 1513              	.L101:
2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1514              		.loc 1 2752 0
 1515 000c 0B4A     		ldr	r2, .L103+4
 1516 000e 0A4B     		ldr	r3, .L103
 1517 0010 1A61     		str	r2, [r3, #16]
 1518              	.L102:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1519              		.loc 1 2755 0
 1520 0012 094C     		ldr	r4, .L103
 1521 0014 2569     		ldr	r5, [r4, #16]
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 78


 1522 0016 0A4B     		ldr	r3, .L103+8
 1523 0018 E818     		adds	r0, r5, r3
 1524              	.LVL130:
 1525 001a 0A49     		ldr	r1, .L103+12
 1526 001c FFF7FEFF 		bl	__aeabi_uidiv
 1527              	.LVL131:
 1528 0020 2073     		strb	r0, [r4, #12]
2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1529              		.loc 1 2756 0
 1530 0022 094B     		ldr	r3, .L103+16
 1531 0024 E818     		adds	r0, r5, r3
 1532 0026 FA21     		movs	r1, #250
 1533 0028 8900     		lsls	r1, r1, #2
 1534 002a FFF7FEFF 		bl	__aeabi_uidiv
 1535              	.LVL132:
 1536 002e A060     		str	r0, [r4, #8]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1537              		.loc 1 2757 0
 1538 0030 C003     		lsls	r0, r0, #15
 1539 0032 6060     		str	r0, [r4, #4]
2758:Generated_Source\PSoC4/CyLib.c **** }
 1540              		.loc 1 2758 0
 1541              		@ sp needed
 1542 0034 70BD     		pop	{r4, r5, r6, pc}
 1543              	.L104:
 1544 0036 C046     		.align	2
 1545              	.L103:
 1546 0038 00000000 		.word	.LANCHOR0
 1547 003c 00366E01 		.word	24000000
 1548 0040 3F420F00 		.word	999999
 1549 0044 40420F00 		.word	1000000
 1550 0048 E7030000 		.word	999
 1551              		.cfi_endproc
 1552              	.LFE30:
 1553              		.size	CyDelayFreq, .-CyDelayFreq
 1554              		.section	.text.CySysTickStop,"ax",%progbits
 1555              		.align	2
 1556              		.global	CySysTickStop
 1557              		.code	16
 1558              		.thumb_func
 1559              		.type	CySysTickStop, %function
 1560              	CySysTickStop:
 1561              	.LFB34:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 79


2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2785:Generated_Source\PSoC4/CyLib.c **** }
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2810:Generated_Source\PSoC4/CyLib.c ****     {
2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2822:Generated_Source\PSoC4/CyLib.c **** }
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 80


2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
 1562              		.loc 1 2853 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1567              		.loc 1 2854 0
 1568 0000 024A     		ldr	r2, .L106
 1569 0002 1368     		ldr	r3, [r2]
 1570 0004 0121     		movs	r1, #1
 1571 0006 8B43     		bics	r3, r1
 1572 0008 1360     		str	r3, [r2]
2855:Generated_Source\PSoC4/CyLib.c **** }
 1573              		.loc 1 2855 0
 1574              		@ sp needed
 1575 000a 7047     		bx	lr
 1576              	.L107:
 1577              		.align	2
 1578              	.L106:
 1579 000c 10E000E0 		.word	-536813552
 1580              		.cfi_endproc
 1581              	.LFE34:
 1582              		.size	CySysTickStop, .-CySysTickStop
 1583              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1584              		.align	2
 1585              		.global	CySysTickEnableInterrupt
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CySysTickEnableInterrupt, %function
 1589              	CySysTickEnableInterrupt:
 1590              	.LFB35:
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 81


2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
 1591              		.loc 1 2869 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              		@ link register save eliminated.
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1596              		.loc 1 2870 0
 1597 0000 024A     		ldr	r2, .L109
 1598 0002 1168     		ldr	r1, [r2]
 1599 0004 0223     		movs	r3, #2
 1600 0006 0B43     		orrs	r3, r1
 1601 0008 1360     		str	r3, [r2]
2871:Generated_Source\PSoC4/CyLib.c **** }
 1602              		.loc 1 2871 0
 1603              		@ sp needed
 1604 000a 7047     		bx	lr
 1605              	.L110:
 1606              		.align	2
 1607              	.L109:
 1608 000c 10E000E0 		.word	-536813552
 1609              		.cfi_endproc
 1610              	.LFE35:
 1611              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1612              		.section	.text.CySysTickEnable,"ax",%progbits
 1613              		.align	2
 1614              		.global	CySysTickEnable
 1615              		.code	16
 1616              		.thumb_func
 1617              		.type	CySysTickEnable, %function
 1618              	CySysTickEnable:
 1619              	.LFB33:
2836:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1620              		.loc 1 2836 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624 0000 10B5     		push	{r4, lr}
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 4, -8
 1627              		.cfi_offset 14, -4
2837:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1628              		.loc 1 2837 0
 1629 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1630              	.LVL133:
2838:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 82


 1631              		.loc 1 2838 0
 1632 0006 034A     		ldr	r2, .L112
 1633 0008 1168     		ldr	r1, [r2]
 1634 000a 0123     		movs	r3, #1
 1635 000c 0B43     		orrs	r3, r1
 1636 000e 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CyLib.c **** 
 1637              		.loc 1 2839 0
 1638              		@ sp needed
 1639 0010 10BD     		pop	{r4, pc}
 1640              	.L113:
 1641 0012 C046     		.align	2
 1642              	.L112:
 1643 0014 10E000E0 		.word	-536813552
 1644              		.cfi_endproc
 1645              	.LFE33:
 1646              		.size	CySysTickEnable, .-CySysTickEnable
 1647              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1648              		.align	2
 1649              		.global	CySysTickDisableInterrupt
 1650              		.code	16
 1651              		.thumb_func
 1652              		.type	CySysTickDisableInterrupt, %function
 1653              	CySysTickDisableInterrupt:
 1654              	.LFB36:
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2885:Generated_Source\PSoC4/CyLib.c **** {
 1655              		.loc 1 2885 0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 0
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 1659              		@ link register save eliminated.
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1660              		.loc 1 2886 0
 1661 0000 024A     		ldr	r2, .L115
 1662 0002 1368     		ldr	r3, [r2]
 1663 0004 0221     		movs	r1, #2
 1664 0006 8B43     		bics	r3, r1
 1665 0008 1360     		str	r3, [r2]
2887:Generated_Source\PSoC4/CyLib.c **** }
 1666              		.loc 1 2887 0
 1667              		@ sp needed
 1668 000a 7047     		bx	lr
 1669              	.L116:
 1670              		.align	2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 83


 1671              	.L115:
 1672 000c 10E000E0 		.word	-536813552
 1673              		.cfi_endproc
 1674              	.LFE36:
 1675              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1676              		.section	.text.CySysTickSetReload,"ax",%progbits
 1677              		.align	2
 1678              		.global	CySysTickSetReload
 1679              		.code	16
 1680              		.thumb_func
 1681              		.type	CySysTickSetReload, %function
 1682              	CySysTickSetReload:
 1683              	.LFB37:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
 1684              		.loc 1 2902 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              		@ link register save eliminated.
 1689              	.LVL134:
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1690              		.loc 1 2903 0
 1691 0000 0002     		lsls	r0, r0, #8
 1692              	.LVL135:
 1693 0002 000A     		lsrs	r0, r0, #8
 1694 0004 014B     		ldr	r3, .L118
 1695 0006 1860     		str	r0, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** }
 1696              		.loc 1 2904 0
 1697              		@ sp needed
 1698 0008 7047     		bx	lr
 1699              	.L119:
 1700 000a C046     		.align	2
 1701              	.L118:
 1702 000c 14E000E0 		.word	-536813548
 1703              		.cfi_endproc
 1704              	.LFE37:
 1705              		.size	CySysTickSetReload, .-CySysTickSetReload
 1706              		.section	.text.CySysTickGetReload,"ax",%progbits
 1707              		.align	2
 1708              		.global	CySysTickGetReload
 1709              		.code	16
 1710              		.thumb_func
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 84


 1711              		.type	CySysTickGetReload, %function
 1712              	CySysTickGetReload:
 1713              	.LFB38:
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
 1714              		.loc 1 2918 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
 1717              		@ frame_needed = 0, uses_anonymous_args = 0
 1718              		@ link register save eliminated.
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1719              		.loc 1 2919 0
 1720 0000 024B     		ldr	r3, .L121
 1721 0002 1868     		ldr	r0, [r3]
 1722 0004 0002     		lsls	r0, r0, #8
 1723 0006 000A     		lsrs	r0, r0, #8
2920:Generated_Source\PSoC4/CyLib.c **** }
 1724              		.loc 1 2920 0
 1725              		@ sp needed
 1726 0008 7047     		bx	lr
 1727              	.L122:
 1728 000a C046     		.align	2
 1729              	.L121:
 1730 000c 14E000E0 		.word	-536813548
 1731              		.cfi_endproc
 1732              	.LFE38:
 1733              		.size	CySysTickGetReload, .-CySysTickGetReload
 1734              		.section	.text.CySysTickGetValue,"ax",%progbits
 1735              		.align	2
 1736              		.global	CySysTickGetValue
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	CySysTickGetValue, %function
 1740              	CySysTickGetValue:
 1741              	.LFB39:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 85


2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
 1742              		.loc 1 2934 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 1746              		@ link register save eliminated.
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1747              		.loc 1 2935 0
 1748 0000 024B     		ldr	r3, .L124
 1749 0002 1868     		ldr	r0, [r3]
 1750 0004 0002     		lsls	r0, r0, #8
 1751 0006 000A     		lsrs	r0, r0, #8
2936:Generated_Source\PSoC4/CyLib.c **** }
 1752              		.loc 1 2936 0
 1753              		@ sp needed
 1754 0008 7047     		bx	lr
 1755              	.L125:
 1756 000a C046     		.align	2
 1757              	.L124:
 1758 000c 18E000E0 		.word	-536813544
 1759              		.cfi_endproc
 1760              	.LFE39:
 1761              		.size	CySysTickGetValue, .-CySysTickGetValue
 1762              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1763              		.align	2
 1764              		.global	CySysTickSetClockSource
 1765              		.code	16
 1766              		.thumb_func
 1767              		.type	CySysTickSetClockSource, %function
 1768              	CySysTickSetClockSource:
 1769              	.LFB40:
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2954:Generated_Source\PSoC4/CyLib.c ****     *
2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 86


2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
 1770              		.loc 1 2966 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
 1775              	.LVL136:
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1776              		.loc 1 2967 0
 1777 0000 0128     		cmp	r0, #1
 1778 0002 05D1     		bne	.L127
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1779              		.loc 1 2969 0
 1780 0004 054A     		ldr	r2, .L129
 1781 0006 1168     		ldr	r1, [r2]
 1782 0008 0423     		movs	r3, #4
 1783 000a 0B43     		orrs	r3, r1
 1784 000c 1360     		str	r3, [r2]
 1785 000e 04E0     		b	.L126
 1786              	.L127:
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1787              		.loc 1 2973 0
 1788 0010 024A     		ldr	r2, .L129
 1789 0012 1368     		ldr	r3, [r2]
 1790 0014 0421     		movs	r1, #4
 1791 0016 8B43     		bics	r3, r1
 1792 0018 1360     		str	r3, [r2]
 1793              	.L126:
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
 1794              		.loc 1 2975 0
 1795              		@ sp needed
 1796 001a 7047     		bx	lr
 1797              	.L130:
 1798              		.align	2
 1799              	.L129:
 1800 001c 10E000E0 		.word	-536813552
 1801              		.cfi_endproc
 1802              	.LFE40:
 1803              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1804              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1805              		.align	2
 1806              		.global	CySysTickGetClockSource
 1807              		.code	16
 1808              		.thumb_func
 1809              		.type	CySysTickGetClockSource, %function
 1810              	CySysTickGetClockSource:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 87


 1811              	.LFB41:
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
 1812              		.loc 1 2991 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 0
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
 1816              		@ link register save eliminated.
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1817              		.loc 1 2992 0
 1818 0000 024B     		ldr	r3, .L132
 1819 0002 1868     		ldr	r0, [r3]
 1820 0004 8008     		lsrs	r0, r0, #2
 1821 0006 0123     		movs	r3, #1
 1822 0008 1840     		ands	r0, r3
2993:Generated_Source\PSoC4/CyLib.c ****     }
 1823              		.loc 1 2993 0
 1824              		@ sp needed
 1825 000a 7047     		bx	lr
 1826              	.L133:
 1827              		.align	2
 1828              	.L132:
 1829 000c 10E000E0 		.word	-536813552
 1830              		.cfi_endproc
 1831              	.LFE41:
 1832              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1833              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1834              		.align	2
 1835              		.global	CySysTickGetCountFlag
 1836              		.code	16
 1837              		.thumb_func
 1838              		.type	CySysTickGetCountFlag, %function
 1839              	CySysTickGetCountFlag:
 1840              	.LFB42:
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 88


3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
 1841              		.loc 1 3014 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1846              		.loc 1 3015 0
 1847 0000 024B     		ldr	r3, .L135
 1848 0002 1868     		ldr	r0, [r3]
 1849 0004 000C     		lsrs	r0, r0, #16
 1850 0006 0123     		movs	r3, #1
 1851 0008 1840     		ands	r0, r3
3016:Generated_Source\PSoC4/CyLib.c **** }
 1852              		.loc 1 3016 0
 1853              		@ sp needed
 1854 000a 7047     		bx	lr
 1855              	.L136:
 1856              		.align	2
 1857              	.L135:
 1858 000c 10E000E0 		.word	-536813552
 1859              		.cfi_endproc
 1860              	.LFE42:
 1861              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1862              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1863              		.align	2
 1864              		.code	16
 1865              		.thumb_func
 1866              		.type	CySysTickServiceCallbacks, %function
 1867              	CySysTickServiceCallbacks:
 1868              	.LFB46:
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3027:Generated_Source\PSoC4/CyLib.c **** {
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3029:Generated_Source\PSoC4/CyLib.c **** }
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 89


3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3068:Generated_Source\PSoC4/CyLib.c **** }
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3088:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 90


3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 1869              		.loc 1 3099 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873 0000 10B5     		push	{r4, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 4, -8
 1876              		.cfi_offset 14, -4
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1877              		.loc 1 3103 0
 1878 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1879              	.LVL137:
 1880 0006 0128     		cmp	r0, #1
 1881 0008 0BD1     		bne	.L137
 1882 000a 07E0     		b	.L142
 1883              	.LVL138:
 1884              	.L141:
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1885              		.loc 1 3107 0
 1886 000c A300     		lsls	r3, r4, #2
 1887 000e 054A     		ldr	r2, .L143
 1888 0010 9B58     		ldr	r3, [r3, r2]
 1889 0012 002B     		cmp	r3, #0
 1890 0014 00D0     		beq	.L140
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1891              		.loc 1 3109 0
 1892 0016 9847     		blx	r3
 1893              	.LVL139:
 1894              	.L140:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 1895              		.loc 1 3105 0 discriminator 2
 1896 0018 0134     		adds	r4, r4, #1
 1897              	.LVL140:
 1898 001a 00E0     		b	.L138
 1899              	.LVL141:
 1900              	.L142:
 1901 001c 0024     		movs	r4, #0
 1902              	.L138:
 1903              	.LVL142:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 91


3105:Generated_Source\PSoC4/CyLib.c ****         {
 1904              		.loc 1 3105 0 is_stmt 0 discriminator 1
 1905 001e 042C     		cmp	r4, #4
 1906 0020 F4D9     		bls	.L141
 1907              	.LVL143:
 1908              	.L137:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** }
 1909              		.loc 1 3113 0 is_stmt 1
 1910              		@ sp needed
 1911 0022 10BD     		pop	{r4, pc}
 1912              	.L144:
 1913              		.align	2
 1914              	.L143:
 1915 0024 00000000 		.word	.LANCHOR1
 1916              		.cfi_endproc
 1917              	.LFE46:
 1918              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1919              		.section	.text.CySysTickClear,"ax",%progbits
 1920              		.align	2
 1921              		.global	CySysTickClear
 1922              		.code	16
 1923              		.thumb_func
 1924              		.type	CySysTickClear, %function
 1925              	CySysTickClear:
 1926              	.LFB43:
3027:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1927              		.loc 1 3027 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 0
 1930              		@ frame_needed = 0, uses_anonymous_args = 0
 1931              		@ link register save eliminated.
3028:Generated_Source\PSoC4/CyLib.c **** }
 1932              		.loc 1 3028 0
 1933 0000 0022     		movs	r2, #0
 1934 0002 014B     		ldr	r3, .L146
 1935 0004 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** 
 1936              		.loc 1 3029 0
 1937              		@ sp needed
 1938 0006 7047     		bx	lr
 1939              	.L147:
 1940              		.align	2
 1941              	.L146:
 1942 0008 18E000E0 		.word	-536813544
 1943              		.cfi_endproc
 1944              	.LFE43:
 1945              		.size	CySysTickClear, .-CySysTickClear
 1946              		.section	.text.CySysTickInit,"ax",%progbits
 1947              		.align	2
 1948              		.global	CySysTickInit
 1949              		.code	16
 1950              		.thumb_func
 1951              		.type	CySysTickInit, %function
 1952              	CySysTickInit:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 92


 1953              	.LFB32:
2806:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1954              		.loc 1 2806 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958 0000 10B5     		push	{r4, lr}
 1959              		.cfi_def_cfa_offset 8
 1960              		.cfi_offset 4, -8
 1961              		.cfi_offset 14, -4
 1962              	.LVL144:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1963              		.loc 1 2809 0
 1964 0002 0023     		movs	r3, #0
 1965 0004 04E0     		b	.L149
 1966              	.LVL145:
 1967              	.L150:
2811:Generated_Source\PSoC4/CyLib.c ****     }
 1968              		.loc 1 2811 0 discriminator 3
 1969 0006 9900     		lsls	r1, r3, #2
 1970 0008 0020     		movs	r0, #0
 1971 000a 0B4A     		ldr	r2, .L151
 1972 000c 8850     		str	r0, [r1, r2]
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1973              		.loc 1 2809 0 discriminator 3
 1974 000e 0133     		adds	r3, r3, #1
 1975              	.LVL146:
 1976              	.L149:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1977              		.loc 1 2809 0 is_stmt 0 discriminator 1
 1978 0010 042B     		cmp	r3, #4
 1979 0012 F8D9     		bls	.L150
2814:Generated_Source\PSoC4/CyLib.c **** 
 1980              		.loc 1 2814 0 is_stmt 1
 1981 0014 0949     		ldr	r1, .L151+4
 1982 0016 0F20     		movs	r0, #15
 1983 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1984              	.LVL147:
2817:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1985              		.loc 1 2817 0
 1986 001c 0120     		movs	r0, #1
 1987 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1988              	.LVL148:
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1989              		.loc 1 2820 0
 1990 0022 074B     		ldr	r3, .L151+8
 1991 0024 1869     		ldr	r0, [r3, #16]
 1992 0026 FA21     		movs	r1, #250
 1993 0028 8900     		lsls	r1, r1, #2
 1994 002a FFF7FEFF 		bl	__aeabi_uidiv
 1995              	.LVL149:
 1996 002e FFF7FEFF 		bl	CySysTickSetReload
 1997              	.LVL150:
2821:Generated_Source\PSoC4/CyLib.c **** }
 1998              		.loc 1 2821 0
 1999 0032 FFF7FEFF 		bl	CySysTickClear
 2000              	.LVL151:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 93


2822:Generated_Source\PSoC4/CyLib.c **** 
 2001              		.loc 1 2822 0
 2002              		@ sp needed
 2003 0036 10BD     		pop	{r4, pc}
 2004              	.L152:
 2005              		.align	2
 2006              	.L151:
 2007 0038 00000000 		.word	.LANCHOR1
 2008 003c 00000000 		.word	CySysTickServiceCallbacks
 2009 0040 00000000 		.word	.LANCHOR0
 2010              		.cfi_endproc
 2011              	.LFE32:
 2012              		.size	CySysTickInit, .-CySysTickInit
 2013              		.section	.text.CySysTickStart,"ax",%progbits
 2014              		.align	2
 2015              		.global	CySysTickStart
 2016              		.code	16
 2017              		.thumb_func
 2018              		.type	CySysTickStart, %function
 2019              	CySysTickStart:
 2020              	.LFB31:
2777:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2021              		.loc 1 2777 0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025 0000 10B5     		push	{r4, lr}
 2026              		.cfi_def_cfa_offset 8
 2027              		.cfi_offset 4, -8
 2028              		.cfi_offset 14, -4
2778:Generated_Source\PSoC4/CyLib.c ****     {
 2029              		.loc 1 2778 0
 2030 0002 064B     		ldr	r3, .L155
 2031 0004 5B69     		ldr	r3, [r3, #20]
 2032 0006 002B     		cmp	r3, #0
 2033 0008 04D1     		bne	.L154
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2034              		.loc 1 2780 0
 2035 000a FFF7FEFF 		bl	CySysTickInit
 2036              	.LVL152:
2781:Generated_Source\PSoC4/CyLib.c ****     }
 2037              		.loc 1 2781 0
 2038 000e 0122     		movs	r2, #1
 2039 0010 024B     		ldr	r3, .L155
 2040 0012 5A61     		str	r2, [r3, #20]
 2041              	.L154:
2784:Generated_Source\PSoC4/CyLib.c **** }
 2042              		.loc 1 2784 0
 2043 0014 FFF7FEFF 		bl	CySysTickEnable
 2044              	.LVL153:
2785:Generated_Source\PSoC4/CyLib.c **** 
 2045              		.loc 1 2785 0
 2046              		@ sp needed
 2047 0018 10BD     		pop	{r4, pc}
 2048              	.L156:
 2049 001a C046     		.align	2
 2050              	.L155:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 94


 2051 001c 00000000 		.word	.LANCHOR1
 2052              		.cfi_endproc
 2053              	.LFE31:
 2054              		.size	CySysTickStart, .-CySysTickStart
 2055              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2056              		.align	2
 2057              		.global	CySysTickSetCallback
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	CySysTickSetCallback, %function
 2061              	CySysTickSetCallback:
 2062              	.LFB44:
3062:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2063              		.loc 1 3062 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
 2068              	.LVL154:
3065:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2069              		.loc 1 3065 0
 2070 0000 024A     		ldr	r2, .L158
 2071 0002 8300     		lsls	r3, r0, #2
 2072 0004 9858     		ldr	r0, [r3, r2]
 2073              	.LVL155:
3066:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2074              		.loc 1 3066 0
 2075 0006 9950     		str	r1, [r3, r2]
3068:Generated_Source\PSoC4/CyLib.c **** 
 2076              		.loc 1 3068 0
 2077              		@ sp needed
 2078 0008 7047     		bx	lr
 2079              	.L159:
 2080 000a C046     		.align	2
 2081              	.L158:
 2082 000c 00000000 		.word	.LANCHOR1
 2083              		.cfi_endproc
 2084              	.LFE44:
 2085              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2086              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2087              		.align	2
 2088              		.global	CySysTickGetCallback
 2089              		.code	16
 2090              		.thumb_func
 2091              		.type	CySysTickGetCallback, %function
 2092              	CySysTickGetCallback:
 2093              	.LFB45:
3086:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2094              		.loc 1 3086 0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 0
 2097              		@ frame_needed = 0, uses_anonymous_args = 0
 2098              		@ link register save eliminated.
 2099              	.LVL156:
3087:Generated_Source\PSoC4/CyLib.c **** }
 2100              		.loc 1 3087 0
 2101 0000 8000     		lsls	r0, r0, #2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 95


 2102              	.LVL157:
 2103 0002 014B     		ldr	r3, .L161
 2104 0004 C058     		ldr	r0, [r0, r3]
3088:Generated_Source\PSoC4/CyLib.c **** 
 2105              		.loc 1 3088 0
 2106              		@ sp needed
 2107 0006 7047     		bx	lr
 2108              	.L162:
 2109              		.align	2
 2110              	.L161:
 2111 0008 00000000 		.word	.LANCHOR1
 2112              		.cfi_endproc
 2113              	.LFE45:
 2114              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2115              		.section	.text.CyGetUniqueId,"ax",%progbits
 2116              		.align	2
 2117              		.global	CyGetUniqueId
 2118              		.code	16
 2119              		.thumb_func
 2120              		.type	CyGetUniqueId, %function
 2121              	CyGetUniqueId:
 2122              	.LFB47:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 2123              		.loc 1 3131 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 0, uses_anonymous_args = 0
 2127              		@ link register save eliminated.
 2128              	.LVL158:
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2129              		.loc 1 3133 0
 2130 0000 134B     		ldr	r3, .L164
 2131 0002 1B78     		ldrb	r3, [r3]
 2132 0004 DAB2     		uxtb	r2, r3
 2133 0006 0260     		str	r2, [r0]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2134              		.loc 1 3134 0
 2135 0008 124B     		ldr	r3, .L164+4
 2136 000a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 96


 2137 000c 1B02     		lsls	r3, r3, #8
 2138 000e 1343     		orrs	r3, r2
 2139 0010 0360     		str	r3, [r0]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2140              		.loc 1 3135 0
 2141 0012 114A     		ldr	r2, .L164+8
 2142 0014 1278     		ldrb	r2, [r2]
 2143 0016 1204     		lsls	r2, r2, #16
 2144 0018 1343     		orrs	r3, r2
 2145 001a 0360     		str	r3, [r0]
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2146              		.loc 1 3136 0
 2147 001c 0F4A     		ldr	r2, .L164+12
 2148 001e 1278     		ldrb	r2, [r2]
 2149 0020 1206     		lsls	r2, r2, #24
 2150 0022 1343     		orrs	r3, r2
 2151 0024 0360     		str	r3, [r0]
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2152              		.loc 1 3138 0
 2153 0026 0E4B     		ldr	r3, .L164+16
 2154 0028 1B78     		ldrb	r3, [r3]
 2155 002a DAB2     		uxtb	r2, r3
 2156 002c 4260     		str	r2, [r0, #4]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2157              		.loc 1 3139 0
 2158 002e 0D4B     		ldr	r3, .L164+20
 2159 0030 1B78     		ldrb	r3, [r3]
 2160 0032 1B02     		lsls	r3, r3, #8
 2161 0034 1343     		orrs	r3, r2
 2162 0036 4360     		str	r3, [r0, #4]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2163              		.loc 1 3140 0
 2164 0038 0B4A     		ldr	r2, .L164+24
 2165 003a 1278     		ldrb	r2, [r2]
 2166 003c 1204     		lsls	r2, r2, #16
 2167 003e 1343     		orrs	r3, r2
 2168 0040 4360     		str	r3, [r0, #4]
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2169              		.loc 1 3141 0
 2170 0042 0A4A     		ldr	r2, .L164+28
 2171 0044 1278     		ldrb	r2, [r2]
 2172 0046 1206     		lsls	r2, r2, #24
 2173 0048 1343     		orrs	r3, r2
 2174 004a 4360     		str	r3, [r0, #4]
3142:Generated_Source\PSoC4/CyLib.c **** #else
3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 97


 2175              		.loc 1 3153 0
 2176              		@ sp needed
 2177 004c 7047     		bx	lr
 2178              	.L165:
 2179 004e C046     		.align	2
 2180              	.L164:
 2181 0050 78F1FF0F 		.word	268431736
 2182 0054 79F1FF0F 		.word	268431737
 2183 0058 7AF1FF0F 		.word	268431738
 2184 005c 7BF1FF0F 		.word	268431739
 2185 0060 7CF1FF0F 		.word	268431740
 2186 0064 7DF1FF0F 		.word	268431741
 2187 0068 7EF1FF0F 		.word	268431742
 2188 006c 7FF1FF0F 		.word	268431743
 2189              		.cfi_endproc
 2190              	.LFE47:
 2191              		.size	CyGetUniqueId, .-CyGetUniqueId
 2192              		.global	CySysClkPumpConfig
 2193              		.global	CySysTickInitVar
 2194              		.global	cydelay32kMs
 2195              		.global	cydelayFreqMhz
 2196              		.global	cydelayFreqKhz
 2197              		.global	cydelayFreqHz
 2198              		.data
 2199              		.align	2
 2200              		.set	.LANCHOR0,. + 0
 2201              		.type	CySysClkPumpConfig, %object
 2202              		.size	CySysClkPumpConfig, 4
 2203              	CySysClkPumpConfig:
 2204 0000 01000000 		.word	1
 2205              		.type	cydelay32kMs, %object
 2206              		.size	cydelay32kMs, 4
 2207              	cydelay32kMs:
 2208 0004 0000E02E 		.word	786432000
 2209              		.type	cydelayFreqKhz, %object
 2210              		.size	cydelayFreqKhz, 4
 2211              	cydelayFreqKhz:
 2212 0008 C05D0000 		.word	24000
 2213              		.type	cydelayFreqMhz, %object
 2214              		.size	cydelayFreqMhz, 1
 2215              	cydelayFreqMhz:
 2216 000c 18       		.byte	24
 2217 000d 000000   		.space	3
 2218              		.type	cydelayFreqHz, %object
 2219              		.size	cydelayFreqHz, 4
 2220              	cydelayFreqHz:
 2221 0010 00366E01 		.word	24000000
 2222              		.bss
 2223              		.align	2
 2224              		.set	.LANCHOR1,. + 0
 2225              		.type	CySysTickCallbacks, %object
 2226              		.size	CySysTickCallbacks, 20
 2227              	CySysTickCallbacks:
 2228 0000 00000000 		.space	20
 2228      00000000 
 2228      00000000 
 2228      00000000 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 98


 2228      00000000 
 2229              		.type	CySysTickInitVar, %object
 2230              		.size	CySysTickInitVar, 4
 2231              	CySysTickInitVar:
 2232 0014 00000000 		.space	4
 2233              		.text
 2234              	.Letext0:
 2235              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2236              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2237              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2238              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2239              		.section	.debug_info,"",%progbits
 2240              	.Ldebug_info0:
 2241 0000 C90B0000 		.4byte	0xbc9
 2242 0004 0400     		.2byte	0x4
 2243 0006 00000000 		.4byte	.Ldebug_abbrev0
 2244 000a 04       		.byte	0x4
 2245 000b 01       		.uleb128 0x1
 2246 000c FC040000 		.4byte	.LASF108
 2247 0010 0C       		.byte	0xc
 2248 0011 B7060000 		.4byte	.LASF109
 2249 0015 47040000 		.4byte	.LASF110
 2250 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2251 001d 00000000 		.4byte	0
 2252 0021 00000000 		.4byte	.Ldebug_line0
 2253 0025 02       		.uleb128 0x2
 2254 0026 01       		.byte	0x1
 2255 0027 06       		.byte	0x6
 2256 0028 02010000 		.4byte	.LASF0
 2257 002c 02       		.uleb128 0x2
 2258 002d 01       		.byte	0x1
 2259 002e 08       		.byte	0x8
 2260 002f AB040000 		.4byte	.LASF1
 2261 0033 02       		.uleb128 0x2
 2262 0034 02       		.byte	0x2
 2263 0035 05       		.byte	0x5
 2264 0036 B9040000 		.4byte	.LASF2
 2265 003a 02       		.uleb128 0x2
 2266 003b 02       		.byte	0x2
 2267 003c 07       		.byte	0x7
 2268 003d C9020000 		.4byte	.LASF3
 2269 0041 02       		.uleb128 0x2
 2270 0042 04       		.byte	0x4
 2271 0043 05       		.byte	0x5
 2272 0044 67010000 		.4byte	.LASF4
 2273 0048 02       		.uleb128 0x2
 2274 0049 04       		.byte	0x4
 2275 004a 07       		.byte	0x7
 2276 004b 76020000 		.4byte	.LASF5
 2277 004f 02       		.uleb128 0x2
 2278 0050 08       		.byte	0x8
 2279 0051 05       		.byte	0x5
 2280 0052 F4000000 		.4byte	.LASF6
 2281 0056 02       		.uleb128 0x2
 2282 0057 08       		.byte	0x8
 2283 0058 07       		.byte	0x7
 2284 0059 75000000 		.4byte	.LASF7
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 99


 2285 005d 03       		.uleb128 0x3
 2286 005e 04       		.byte	0x4
 2287 005f 05       		.byte	0x5
 2288 0060 696E7400 		.ascii	"int\000"
 2289 0064 02       		.uleb128 0x2
 2290 0065 04       		.byte	0x4
 2291 0066 07       		.byte	0x7
 2292 0067 5A020000 		.4byte	.LASF8
 2293 006b 04       		.uleb128 0x4
 2294 006c 92010000 		.4byte	.LASF9
 2295 0070 02       		.byte	0x2
 2296 0071 E401     		.2byte	0x1e4
 2297 0073 2C000000 		.4byte	0x2c
 2298 0077 04       		.uleb128 0x4
 2299 0078 0F000000 		.4byte	.LASF10
 2300 007c 02       		.byte	0x2
 2301 007d E501     		.2byte	0x1e5
 2302 007f 3A000000 		.4byte	0x3a
 2303 0083 04       		.uleb128 0x4
 2304 0084 BB010000 		.4byte	.LASF11
 2305 0088 02       		.byte	0x2
 2306 0089 E601     		.2byte	0x1e6
 2307 008b 48000000 		.4byte	0x48
 2308 008f 02       		.uleb128 0x2
 2309 0090 04       		.byte	0x4
 2310 0091 04       		.byte	0x4
 2311 0092 0A040000 		.4byte	.LASF12
 2312 0096 02       		.uleb128 0x2
 2313 0097 08       		.byte	0x8
 2314 0098 04       		.byte	0x4
 2315 0099 AE010000 		.4byte	.LASF13
 2316 009d 02       		.uleb128 0x2
 2317 009e 01       		.byte	0x1
 2318 009f 08       		.byte	0x8
 2319 00a0 8E050000 		.4byte	.LASF14
 2320 00a4 04       		.uleb128 0x4
 2321 00a5 9F040000 		.4byte	.LASF15
 2322 00a9 02       		.byte	0x2
 2323 00aa 8E02     		.2byte	0x28e
 2324 00ac B0000000 		.4byte	0xb0
 2325 00b0 05       		.uleb128 0x5
 2326 00b1 6B000000 		.4byte	0x6b
 2327 00b5 04       		.uleb128 0x4
 2328 00b6 72030000 		.4byte	.LASF16
 2329 00ba 02       		.byte	0x2
 2330 00bb 9002     		.2byte	0x290
 2331 00bd C1000000 		.4byte	0xc1
 2332 00c1 05       		.uleb128 0x5
 2333 00c2 83000000 		.4byte	0x83
 2334 00c6 04       		.uleb128 0x4
 2335 00c7 93050000 		.4byte	.LASF17
 2336 00cb 02       		.byte	0x2
 2337 00cc A002     		.2byte	0x2a0
 2338 00ce D2000000 		.4byte	0xd2
 2339 00d2 06       		.uleb128 0x6
 2340 00d3 04       		.byte	0x4
 2341 00d4 D8000000 		.4byte	0xd8
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 100


 2342 00d8 07       		.uleb128 0x7
 2343 00d9 02       		.uleb128 0x2
 2344 00da 08       		.byte	0x8
 2345 00db 04       		.byte	0x4
 2346 00dc AF030000 		.4byte	.LASF18
 2347 00e0 02       		.uleb128 0x2
 2348 00e1 04       		.byte	0x4
 2349 00e2 07       		.byte	0x7
 2350 00e3 94030000 		.4byte	.LASF19
 2351 00e7 08       		.uleb128 0x8
 2352 00e8 26040000 		.4byte	.LASF20
 2353 00ec 03       		.byte	0x3
 2354 00ed F5       		.byte	0xf5
 2355 00ee D2000000 		.4byte	0xd2
 2356 00f2 09       		.uleb128 0x9
 2357 00f3 8E060000 		.4byte	.LASF61
 2358 00f7 01       		.byte	0x1
 2359 00f8 62       		.byte	0x62
 2360 00f9 00000000 		.4byte	.LFB1
 2361 00fd 14000000 		.4byte	.LFE1-.LFB1
 2362 0101 01       		.uleb128 0x1
 2363 0102 9C       		.byte	0x9c
 2364 0103 0A       		.uleb128 0xa
 2365 0104 58030000 		.4byte	.LASF21
 2366 0108 01       		.byte	0x1
 2367 0109 1301     		.2byte	0x113
 2368 010b 00000000 		.4byte	.LFB4
 2369 010f 4C000000 		.4byte	.LFE4-.LFB4
 2370 0113 01       		.uleb128 0x1
 2371 0114 9C       		.byte	0x9c
 2372 0115 2A010000 		.4byte	0x12a
 2373 0119 0B       		.uleb128 0xb
 2374 011a 0E010000 		.4byte	.LASF24
 2375 011e 01       		.byte	0x1
 2376 011f 1901     		.2byte	0x119
 2377 0121 83000000 		.4byte	0x83
 2378 0125 00000000 		.4byte	.LLST0
 2379 0129 00       		.byte	0
 2380 012a 0C       		.uleb128 0xc
 2381 012b 88020000 		.4byte	.LASF22
 2382 012f 01       		.byte	0x1
 2383 0130 82       		.byte	0x82
 2384 0131 00000000 		.4byte	.LFB2
 2385 0135 18000000 		.4byte	.LFE2-.LFB2
 2386 0139 01       		.uleb128 0x1
 2387 013a 9C       		.byte	0x9c
 2388 013b 49010000 		.4byte	0x149
 2389 013f 0D       		.uleb128 0xd
 2390 0140 06000000 		.4byte	.LVL3
 2391 0144 03010000 		.4byte	0x103
 2392 0148 00       		.byte	0
 2393 0149 0E       		.uleb128 0xe
 2394 014a 49010000 		.4byte	.LASF80
 2395 014e 01       		.byte	0x1
 2396 014f 4B01     		.2byte	0x14b
 2397 0151 83000000 		.4byte	0x83
 2398 0155 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 101


 2399 0159 14000000 		.4byte	.LFE5-.LFB5
 2400 015d 01       		.uleb128 0x1
 2401 015e 9C       		.byte	0x9c
 2402 015f 0A       		.uleb128 0xa
 2403 0160 1F000000 		.4byte	.LASF23
 2404 0164 01       		.byte	0x1
 2405 0165 1B02     		.2byte	0x21b
 2406 0167 00000000 		.4byte	.LFB6
 2407 016b 20000000 		.4byte	.LFE6-.LFB6
 2408 016f 01       		.uleb128 0x1
 2409 0170 9C       		.byte	0x9c
 2410 0171 B8010000 		.4byte	0x1b8
 2411 0175 0F       		.uleb128 0xf
 2412 0176 E1040000 		.4byte	.LASF28
 2413 017a 01       		.byte	0x1
 2414 017b 1B02     		.2byte	0x21b
 2415 017d 83000000 		.4byte	0x83
 2416 0181 24000000 		.4byte	.LLST1
 2417 0185 0B       		.uleb128 0xb
 2418 0186 1F010000 		.4byte	.LASF25
 2419 018a 01       		.byte	0x1
 2420 018b 1D02     		.2byte	0x21d
 2421 018d 6B000000 		.4byte	0x6b
 2422 0191 50000000 		.4byte	.LLST2
 2423 0195 0B       		.uleb128 0xb
 2424 0196 E3060000 		.4byte	.LASF26
 2425 019a 01       		.byte	0x1
 2426 019b 1E02     		.2byte	0x21e
 2427 019d 83000000 		.4byte	0x83
 2428 01a1 63000000 		.4byte	.LLST3
 2429 01a5 0D       		.uleb128 0xd
 2430 01a6 08000000 		.4byte	.LVL5
 2431 01aa 950B0000 		.4byte	0xb95
 2432 01ae 0D       		.uleb128 0xd
 2433 01af 1A000000 		.4byte	.LVL9
 2434 01b3 A00B0000 		.4byte	0xba0
 2435 01b7 00       		.byte	0
 2436 01b8 0A       		.uleb128 0xa
 2437 01b9 4B000000 		.4byte	.LASF27
 2438 01bd 01       		.byte	0x1
 2439 01be 6302     		.2byte	0x263
 2440 01c0 00000000 		.4byte	.LFB7
 2441 01c4 34000000 		.4byte	.LFE7-.LFB7
 2442 01c8 01       		.uleb128 0x1
 2443 01c9 9C       		.byte	0x9c
 2444 01ca DD010000 		.4byte	0x1dd
 2445 01ce 10       		.uleb128 0x10
 2446 01cf A7010000 		.4byte	.LASF29
 2447 01d3 01       		.byte	0x1
 2448 01d4 6302     		.2byte	0x263
 2449 01d6 83000000 		.4byte	0x83
 2450 01da 01       		.uleb128 0x1
 2451 01db 50       		.byte	0x50
 2452 01dc 00       		.byte	0
 2453 01dd 11       		.uleb128 0x11
 2454 01de C7010000 		.4byte	.LASF34
 2455 01e2 01       		.byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 102


 2456 01e3 8802     		.2byte	0x288
 2457 01e5 83000000 		.4byte	0x83
 2458 01e9 00000000 		.4byte	.LFB8
 2459 01ed 1C000000 		.4byte	.LFE8-.LFB8
 2460 01f1 01       		.uleb128 0x1
 2461 01f2 9C       		.byte	0x9c
 2462 01f3 2A020000 		.4byte	0x22a
 2463 01f7 0B       		.uleb128 0xb
 2464 01f8 1F010000 		.4byte	.LASF25
 2465 01fc 01       		.byte	0x1
 2466 01fd 8A02     		.2byte	0x28a
 2467 01ff 6B000000 		.4byte	0x6b
 2468 0203 81000000 		.4byte	.LLST4
 2469 0207 0B       		.uleb128 0xb
 2470 0208 C3030000 		.4byte	.LASF30
 2471 020c 01       		.byte	0x1
 2472 020d 8B02     		.2byte	0x28b
 2473 020f 83000000 		.4byte	0x83
 2474 0213 94000000 		.4byte	.LLST5
 2475 0217 0D       		.uleb128 0xd
 2476 0218 06000000 		.4byte	.LVL12
 2477 021c 950B0000 		.4byte	0xb95
 2478 0220 0D       		.uleb128 0xd
 2479 0221 12000000 		.4byte	.LVL14
 2480 0225 A00B0000 		.4byte	0xba0
 2481 0229 00       		.byte	0
 2482 022a 0A       		.uleb128 0xa
 2483 022b C6050000 		.4byte	.LASF31
 2484 022f 01       		.byte	0x1
 2485 0230 C502     		.2byte	0x2c5
 2486 0232 00000000 		.4byte	.LFB9
 2487 0236 24000000 		.4byte	.LFE9-.LFB9
 2488 023a 01       		.uleb128 0x1
 2489 023b 9C       		.byte	0x9c
 2490 023c 73020000 		.4byte	0x273
 2491 0240 0F       		.uleb128 0xf
 2492 0241 86060000 		.4byte	.LASF32
 2493 0245 01       		.byte	0x1
 2494 0246 C502     		.2byte	0x2c5
 2495 0248 83000000 		.4byte	0x83
 2496 024c B2000000 		.4byte	.LLST6
 2497 0250 0B       		.uleb128 0xb
 2498 0251 1F010000 		.4byte	.LASF25
 2499 0255 01       		.byte	0x1
 2500 0256 C702     		.2byte	0x2c7
 2501 0258 6B000000 		.4byte	0x6b
 2502 025c DE000000 		.4byte	.LLST7
 2503 0260 0D       		.uleb128 0xd
 2504 0261 08000000 		.4byte	.LVL17
 2505 0265 950B0000 		.4byte	0xb95
 2506 0269 0D       		.uleb128 0xd
 2507 026a 1E000000 		.4byte	.LVL19
 2508 026e A00B0000 		.4byte	0xba0
 2509 0272 00       		.byte	0
 2510 0273 0A       		.uleb128 0xa
 2511 0274 B0050000 		.4byte	.LASF33
 2512 0278 01       		.byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 103


 2513 0279 5104     		.2byte	0x451
 2514 027b 00000000 		.4byte	.LFB11
 2515 027f 24000000 		.4byte	.LFE11-.LFB11
 2516 0283 01       		.uleb128 0x1
 2517 0284 9C       		.byte	0x9c
 2518 0285 BC020000 		.4byte	0x2bc
 2519 0289 0F       		.uleb128 0xf
 2520 028a 86060000 		.4byte	.LASF32
 2521 028e 01       		.byte	0x1
 2522 028f 5104     		.2byte	0x451
 2523 0291 83000000 		.4byte	0x83
 2524 0295 F1000000 		.4byte	.LLST8
 2525 0299 0B       		.uleb128 0xb
 2526 029a 1F010000 		.4byte	.LASF25
 2527 029e 01       		.byte	0x1
 2528 029f 5304     		.2byte	0x453
 2529 02a1 6B000000 		.4byte	0x6b
 2530 02a5 1D010000 		.4byte	.LLST9
 2531 02a9 0D       		.uleb128 0xd
 2532 02aa 08000000 		.4byte	.LVL21
 2533 02ae 950B0000 		.4byte	0xb95
 2534 02b2 0D       		.uleb128 0xd
 2535 02b3 1E000000 		.4byte	.LVL23
 2536 02b7 A00B0000 		.4byte	0xba0
 2537 02bb 00       		.byte	0
 2538 02bc 11       		.uleb128 0x11
 2539 02bd B5020000 		.4byte	.LASF35
 2540 02c1 01       		.byte	0x1
 2541 02c2 3409     		.2byte	0x934
 2542 02c4 83000000 		.4byte	0x83
 2543 02c8 00000000 		.4byte	.LFB12
 2544 02cc 14000000 		.4byte	.LFE12-.LFB12
 2545 02d0 01       		.uleb128 0x1
 2546 02d1 9C       		.byte	0x9c
 2547 02d2 F5020000 		.4byte	0x2f5
 2548 02d6 0F       		.uleb128 0xf
 2549 02d7 F5040000 		.4byte	.LASF36
 2550 02db 01       		.byte	0x1
 2551 02dc 3409     		.2byte	0x934
 2552 02de 83000000 		.4byte	0x83
 2553 02e2 30010000 		.4byte	.LLST10
 2554 02e6 12       		.uleb128 0x12
 2555 02e7 87030000 		.4byte	.LASF37
 2556 02eb 01       		.byte	0x1
 2557 02ec 3609     		.2byte	0x936
 2558 02ee 83000000 		.4byte	0x83
 2559 02f2 01       		.uleb128 0x1
 2560 02f3 50       		.byte	0x50
 2561 02f4 00       		.byte	0
 2562 02f5 11       		.uleb128 0x11
 2563 02f6 67000000 		.4byte	.LASF38
 2564 02fa 01       		.byte	0x1
 2565 02fb 4B09     		.2byte	0x94b
 2566 02fd 83000000 		.4byte	0x83
 2567 0301 00000000 		.4byte	.LFB13
 2568 0305 10000000 		.4byte	.LFE13-.LFB13
 2569 0309 01       		.uleb128 0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 104


 2570 030a 9C       		.byte	0x9c
 2571 030b 1E030000 		.4byte	0x31e
 2572 030f 12       		.uleb128 0x12
 2573 0310 16000000 		.4byte	.LASF39
 2574 0314 01       		.byte	0x1
 2575 0315 4D09     		.2byte	0x94d
 2576 0317 83000000 		.4byte	0x83
 2577 031b 01       		.uleb128 0x1
 2578 031c 50       		.byte	0x50
 2579 031d 00       		.byte	0
 2580 031e 0A       		.uleb128 0xa
 2581 031f 9D000000 		.4byte	.LASF40
 2582 0323 01       		.byte	0x1
 2583 0324 6209     		.2byte	0x962
 2584 0326 00000000 		.4byte	.LFB14
 2585 032a 0C000000 		.4byte	.LFE14-.LFB14
 2586 032e 01       		.uleb128 0x1
 2587 032f 9C       		.byte	0x9c
 2588 0330 43030000 		.4byte	0x343
 2589 0334 10       		.uleb128 0x10
 2590 0335 C2010000 		.4byte	.LASF41
 2591 0339 01       		.byte	0x1
 2592 033a 6209     		.2byte	0x962
 2593 033c 83000000 		.4byte	0x83
 2594 0340 01       		.uleb128 0x1
 2595 0341 50       		.byte	0x50
 2596 0342 00       		.byte	0
 2597 0343 0A       		.uleb128 0xa
 2598 0344 C3040000 		.4byte	.LASF42
 2599 0348 01       		.byte	0x1
 2600 0349 190A     		.2byte	0xa19
 2601 034b 00000000 		.4byte	.LFB21
 2602 034f 14000000 		.4byte	.LFE21-.LFB21
 2603 0353 01       		.uleb128 0x1
 2604 0354 9C       		.byte	0x9c
 2605 0355 6A030000 		.4byte	0x36a
 2606 0359 0F       		.uleb128 0xf
 2607 035a 0A030000 		.4byte	.LASF43
 2608 035e 01       		.byte	0x1
 2609 035f 190A     		.2byte	0xa19
 2610 0361 6B000000 		.4byte	0x6b
 2611 0365 4E010000 		.4byte	.LLST11
 2612 0369 00       		.byte	0
 2613 036a 11       		.uleb128 0x11
 2614 036b E6000000 		.4byte	.LASF44
 2615 036f 01       		.byte	0x1
 2616 0370 2B0A     		.2byte	0xa2b
 2617 0372 6B000000 		.4byte	0x6b
 2618 0376 00000000 		.4byte	.LFB22
 2619 037a 18000000 		.4byte	.LFE22-.LFB22
 2620 037e 01       		.uleb128 0x1
 2621 037f 9C       		.byte	0x9c
 2622 0380 95030000 		.4byte	0x395
 2623 0384 0F       		.uleb128 0xf
 2624 0385 0A030000 		.4byte	.LASF43
 2625 0389 01       		.byte	0x1
 2626 038a 2B0A     		.2byte	0xa2b
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 105


 2627 038c 6B000000 		.4byte	0x6b
 2628 0390 6F010000 		.4byte	.LLST12
 2629 0394 00       		.byte	0
 2630 0395 0A       		.uleb128 0xa
 2631 0396 70010000 		.4byte	.LASF45
 2632 039a 01       		.byte	0x1
 2633 039b 3B0A     		.2byte	0xa3b
 2634 039d 00000000 		.4byte	.LFB23
 2635 03a1 14000000 		.4byte	.LFE23-.LFB23
 2636 03a5 01       		.uleb128 0x1
 2637 03a6 9C       		.byte	0x9c
 2638 03a7 BC030000 		.4byte	0x3bc
 2639 03ab 0F       		.uleb128 0xf
 2640 03ac 0A030000 		.4byte	.LASF43
 2641 03b0 01       		.byte	0x1
 2642 03b1 3B0A     		.2byte	0xa3b
 2643 03b3 6B000000 		.4byte	0x6b
 2644 03b7 90010000 		.4byte	.LLST13
 2645 03bb 00       		.byte	0
 2646 03bc 0A       		.uleb128 0xa
 2647 03bd A5020000 		.4byte	.LASF46
 2648 03c1 01       		.byte	0x1
 2649 03c2 490A     		.2byte	0xa49
 2650 03c4 00000000 		.4byte	.LFB24
 2651 03c8 14000000 		.4byte	.LFE24-.LFB24
 2652 03cc 01       		.uleb128 0x1
 2653 03cd 9C       		.byte	0x9c
 2654 03ce E3030000 		.4byte	0x3e3
 2655 03d2 0F       		.uleb128 0xf
 2656 03d3 0A030000 		.4byte	.LASF43
 2657 03d7 01       		.byte	0x1
 2658 03d8 490A     		.2byte	0xa49
 2659 03da 6B000000 		.4byte	0x6b
 2660 03de B1010000 		.4byte	.LLST14
 2661 03e2 00       		.byte	0
 2662 03e3 0A       		.uleb128 0xa
 2663 03e4 9D030000 		.4byte	.LASF47
 2664 03e8 01       		.byte	0x1
 2665 03e9 580A     		.2byte	0xa58
 2666 03eb 00000000 		.4byte	.LFB25
 2667 03ef 14000000 		.4byte	.LFE25-.LFB25
 2668 03f3 01       		.uleb128 0x1
 2669 03f4 9C       		.byte	0x9c
 2670 03f5 0A040000 		.4byte	0x40a
 2671 03f9 0F       		.uleb128 0xf
 2672 03fa 0A030000 		.4byte	.LASF43
 2673 03fe 01       		.byte	0x1
 2674 03ff 580A     		.2byte	0xa58
 2675 0401 6B000000 		.4byte	0x6b
 2676 0405 D2010000 		.4byte	.LLST15
 2677 0409 00       		.byte	0
 2678 040a 0A       		.uleb128 0xa
 2679 040b A4040000 		.4byte	.LASF48
 2680 040f 01       		.byte	0x1
 2681 0410 670A     		.2byte	0xa67
 2682 0412 00000000 		.4byte	.LFB26
 2683 0416 04000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 106


 2684 041a 01       		.uleb128 0x1
 2685 041b 9C       		.byte	0x9c
 2686 041c 2F040000 		.4byte	0x42f
 2687 0420 10       		.uleb128 0x10
 2688 0421 F5040000 		.4byte	.LASF36
 2689 0425 01       		.byte	0x1
 2690 0426 670A     		.2byte	0xa67
 2691 0428 6B000000 		.4byte	0x6b
 2692 042c 01       		.uleb128 0x1
 2693 042d 50       		.byte	0x50
 2694 042e 00       		.byte	0
 2695 042f 11       		.uleb128 0x11
 2696 0430 46030000 		.4byte	.LASF49
 2697 0434 01       		.byte	0x1
 2698 0435 7B09     		.2byte	0x97b
 2699 0437 C6000000 		.4byte	0xc6
 2700 043b 00000000 		.4byte	.LFB15
 2701 043f 20000000 		.4byte	.LFE15-.LFB15
 2702 0443 01       		.uleb128 0x1
 2703 0444 9C       		.byte	0x9c
 2704 0445 97040000 		.4byte	0x497
 2705 0449 0F       		.uleb128 0xf
 2706 044a 0A030000 		.4byte	.LASF43
 2707 044e 01       		.byte	0x1
 2708 044f 7B09     		.2byte	0x97b
 2709 0451 6B000000 		.4byte	0x6b
 2710 0455 F3010000 		.4byte	.LLST16
 2711 0459 0F       		.uleb128 0xf
 2712 045a BB030000 		.4byte	.LASF50
 2713 045e 01       		.byte	0x1
 2714 045f 7B09     		.2byte	0x97b
 2715 0461 C6000000 		.4byte	0xc6
 2716 0465 14020000 		.4byte	.LLST17
 2717 0469 12       		.uleb128 0x12
 2718 046a 62060000 		.4byte	.LASF51
 2719 046e 01       		.byte	0x1
 2720 046f 7D09     		.2byte	0x97d
 2721 0471 C6000000 		.4byte	0xc6
 2722 0475 01       		.uleb128 0x1
 2723 0476 50       		.byte	0x50
 2724 0477 13       		.uleb128 0x13
 2725 0478 00000000 		.4byte	.LASF52
 2726 047c 01       		.byte	0x1
 2727 047d 7E09     		.2byte	0x97e
 2728 047f 97040000 		.4byte	0x497
 2729 0483 00000020 		.4byte	0x20000000
 2730 0487 14       		.uleb128 0x14
 2731 0488 10000000 		.4byte	.LVL44
 2732 048c 0A040000 		.4byte	0x40a
 2733 0490 15       		.uleb128 0x15
 2734 0491 01       		.uleb128 0x1
 2735 0492 50       		.byte	0x50
 2736 0493 01       		.uleb128 0x1
 2737 0494 30       		.byte	0x30
 2738 0495 00       		.byte	0
 2739 0496 00       		.byte	0
 2740 0497 06       		.uleb128 0x6
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 107


 2741 0498 04       		.byte	0x4
 2742 0499 C6000000 		.4byte	0xc6
 2743 049d 11       		.uleb128 0x11
 2744 049e CF040000 		.4byte	.LASF53
 2745 04a2 01       		.byte	0x1
 2746 04a3 9D09     		.2byte	0x99d
 2747 04a5 C6000000 		.4byte	0xc6
 2748 04a9 00000000 		.4byte	.LFB16
 2749 04ad 1C000000 		.4byte	.LFE16-.LFB16
 2750 04b1 01       		.uleb128 0x1
 2751 04b2 9C       		.byte	0x9c
 2752 04b3 E7040000 		.4byte	0x4e7
 2753 04b7 0F       		.uleb128 0xf
 2754 04b8 0A030000 		.4byte	.LASF43
 2755 04bc 01       		.byte	0x1
 2756 04bd 9D09     		.2byte	0x99d
 2757 04bf 6B000000 		.4byte	0x6b
 2758 04c3 40020000 		.4byte	.LLST18
 2759 04c7 13       		.uleb128 0x13
 2760 04c8 00000000 		.4byte	.LASF52
 2761 04cc 01       		.byte	0x1
 2762 04cd 9F09     		.2byte	0x99f
 2763 04cf 97040000 		.4byte	0x497
 2764 04d3 00000020 		.4byte	0x20000000
 2765 04d7 14       		.uleb128 0x14
 2766 04d8 0E000000 		.4byte	.LVL50
 2767 04dc 0A040000 		.4byte	0x40a
 2768 04e0 15       		.uleb128 0x15
 2769 04e1 01       		.uleb128 0x1
 2770 04e2 50       		.byte	0x50
 2771 04e3 01       		.uleb128 0x1
 2772 04e4 30       		.byte	0x30
 2773 04e5 00       		.byte	0
 2774 04e6 00       		.byte	0
 2775 04e7 11       		.uleb128 0x11
 2776 04e8 FB020000 		.4byte	.LASF54
 2777 04ec 01       		.byte	0x1
 2778 04ed B309     		.2byte	0x9b3
 2779 04ef C6000000 		.4byte	0xc6
 2780 04f3 00000000 		.4byte	.LFB17
 2781 04f7 22000000 		.4byte	.LFE17-.LFB17
 2782 04fb 01       		.uleb128 0x1
 2783 04fc 9C       		.byte	0x9c
 2784 04fd 4F050000 		.4byte	0x54f
 2785 0501 0F       		.uleb128 0xf
 2786 0502 0A030000 		.4byte	.LASF43
 2787 0506 01       		.byte	0x1
 2788 0507 B309     		.2byte	0x9b3
 2789 0509 6B000000 		.4byte	0x6b
 2790 050d 61020000 		.4byte	.LLST19
 2791 0511 0F       		.uleb128 0xf
 2792 0512 BB030000 		.4byte	.LASF50
 2793 0516 01       		.byte	0x1
 2794 0517 B309     		.2byte	0x9b3
 2795 0519 C6000000 		.4byte	0xc6
 2796 051d 82020000 		.4byte	.LLST20
 2797 0521 12       		.uleb128 0x12
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 108


 2798 0522 62060000 		.4byte	.LASF51
 2799 0526 01       		.byte	0x1
 2800 0527 B509     		.2byte	0x9b5
 2801 0529 C6000000 		.4byte	0xc6
 2802 052d 01       		.uleb128 0x1
 2803 052e 50       		.byte	0x50
 2804 052f 13       		.uleb128 0x13
 2805 0530 00000000 		.4byte	.LASF52
 2806 0534 01       		.byte	0x1
 2807 0535 B609     		.2byte	0x9b6
 2808 0537 97040000 		.4byte	0x497
 2809 053b 00000020 		.4byte	0x20000000
 2810 053f 14       		.uleb128 0x14
 2811 0540 10000000 		.4byte	.LVL54
 2812 0544 0A040000 		.4byte	0x40a
 2813 0548 15       		.uleb128 0x15
 2814 0549 01       		.uleb128 0x1
 2815 054a 50       		.byte	0x50
 2816 054b 01       		.uleb128 0x1
 2817 054c 30       		.byte	0x30
 2818 054d 00       		.byte	0
 2819 054e 00       		.byte	0
 2820 054f 11       		.uleb128 0x11
 2821 0550 38040000 		.4byte	.LASF55
 2822 0554 01       		.byte	0x1
 2823 0555 CF09     		.2byte	0x9cf
 2824 0557 C6000000 		.4byte	0xc6
 2825 055b 00000000 		.4byte	.LFB18
 2826 055f 1E000000 		.4byte	.LFE18-.LFB18
 2827 0563 01       		.uleb128 0x1
 2828 0564 9C       		.byte	0x9c
 2829 0565 99050000 		.4byte	0x599
 2830 0569 0F       		.uleb128 0xf
 2831 056a 0A030000 		.4byte	.LASF43
 2832 056e 01       		.byte	0x1
 2833 056f CF09     		.2byte	0x9cf
 2834 0571 6B000000 		.4byte	0x6b
 2835 0575 AE020000 		.4byte	.LLST21
 2836 0579 13       		.uleb128 0x13
 2837 057a 00000000 		.4byte	.LASF52
 2838 057e 01       		.byte	0x1
 2839 057f D109     		.2byte	0x9d1
 2840 0581 97040000 		.4byte	0x497
 2841 0585 00000020 		.4byte	0x20000000
 2842 0589 14       		.uleb128 0x14
 2843 058a 0E000000 		.4byte	.LVL60
 2844 058e 0A040000 		.4byte	0x40a
 2845 0592 15       		.uleb128 0x15
 2846 0593 01       		.uleb128 0x1
 2847 0594 50       		.byte	0x50
 2848 0595 01       		.uleb128 0x1
 2849 0596 30       		.byte	0x30
 2850 0597 00       		.byte	0
 2851 0598 00       		.byte	0
 2852 0599 0A       		.uleb128 0xa
 2853 059a F9030000 		.4byte	.LASF56
 2854 059e 01       		.byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 109


 2855 059f E209     		.2byte	0x9e2
 2856 05a1 00000000 		.4byte	.LFB19
 2857 05a5 4C000000 		.4byte	.LFE19-.LFB19
 2858 05a9 01       		.uleb128 0x1
 2859 05aa 9C       		.byte	0x9c
 2860 05ab 38060000 		.4byte	0x638
 2861 05af 0F       		.uleb128 0xf
 2862 05b0 0A030000 		.4byte	.LASF43
 2863 05b4 01       		.byte	0x1
 2864 05b5 E209     		.2byte	0x9e2
 2865 05b7 6B000000 		.4byte	0x6b
 2866 05bb CF020000 		.4byte	.LLST22
 2867 05bf 0F       		.uleb128 0xf
 2868 05c0 28030000 		.4byte	.LASF57
 2869 05c4 01       		.byte	0x1
 2870 05c5 E209     		.2byte	0x9e2
 2871 05c7 6B000000 		.4byte	0x6b
 2872 05cb F0020000 		.4byte	.LLST23
 2873 05cf 0B       		.uleb128 0xb
 2874 05d0 1F010000 		.4byte	.LASF25
 2875 05d4 01       		.byte	0x1
 2876 05d5 E409     		.2byte	0x9e4
 2877 05d7 6B000000 		.4byte	0x6b
 2878 05db 11030000 		.4byte	.LLST24
 2879 05df 0B       		.uleb128 0xb
 2880 05e0 B5010000 		.4byte	.LASF58
 2881 05e4 01       		.byte	0x1
 2882 05e5 E509     		.2byte	0x9e5
 2883 05e7 83000000 		.4byte	0x83
 2884 05eb 24030000 		.4byte	.LLST25
 2885 05ef 0B       		.uleb128 0xb
 2886 05f0 24020000 		.4byte	.LASF59
 2887 05f4 01       		.byte	0x1
 2888 05f5 E609     		.2byte	0x9e6
 2889 05f7 83000000 		.4byte	0x83
 2890 05fb 37030000 		.4byte	.LLST26
 2891 05ff 16       		.uleb128 0x16
 2892 0600 10000000 		.4byte	.LVL63
 2893 0604 0A040000 		.4byte	0x40a
 2894 0608 12060000 		.4byte	0x612
 2895 060c 15       		.uleb128 0x15
 2896 060d 01       		.uleb128 0x1
 2897 060e 50       		.byte	0x50
 2898 060f 01       		.uleb128 0x1
 2899 0610 30       		.byte	0x30
 2900 0611 00       		.byte	0
 2901 0612 16       		.uleb128 0x16
 2902 0613 1A000000 		.4byte	.LVL64
 2903 0617 0A040000 		.4byte	0x40a
 2904 061b 25060000 		.4byte	0x625
 2905 061f 15       		.uleb128 0x15
 2906 0620 01       		.uleb128 0x1
 2907 0621 50       		.byte	0x50
 2908 0622 01       		.uleb128 0x1
 2909 0623 30       		.byte	0x30
 2910 0624 00       		.byte	0
 2911 0625 0D       		.uleb128 0xd
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 110


 2912 0626 26000000 		.4byte	.LVL66
 2913 062a 950B0000 		.4byte	0xb95
 2914 062e 0D       		.uleb128 0xd
 2915 062f 46000000 		.4byte	.LVL72
 2916 0633 A00B0000 		.4byte	0xba0
 2917 0637 00       		.byte	0
 2918 0638 11       		.uleb128 0x11
 2919 0639 F8010000 		.4byte	.LASF60
 2920 063d 01       		.byte	0x1
 2921 063e 040A     		.2byte	0xa04
 2922 0640 6B000000 		.4byte	0x6b
 2923 0644 00000000 		.4byte	.LFB20
 2924 0648 2C000000 		.4byte	.LFE20-.LFB20
 2925 064c 01       		.uleb128 0x1
 2926 064d 9C       		.byte	0x9c
 2927 064e 82060000 		.4byte	0x682
 2928 0652 0F       		.uleb128 0xf
 2929 0653 0A030000 		.4byte	.LASF43
 2930 0657 01       		.byte	0x1
 2931 0658 040A     		.2byte	0xa04
 2932 065a 6B000000 		.4byte	0x6b
 2933 065e 6B030000 		.4byte	.LLST27
 2934 0662 0B       		.uleb128 0xb
 2935 0663 28030000 		.4byte	.LASF57
 2936 0667 01       		.byte	0x1
 2937 0668 060A     		.2byte	0xa06
 2938 066a 6B000000 		.4byte	0x6b
 2939 066e 8C030000 		.4byte	.LLST28
 2940 0672 14       		.uleb128 0x14
 2941 0673 0E000000 		.4byte	.LVL76
 2942 0677 0A040000 		.4byte	0x40a
 2943 067b 15       		.uleb128 0x15
 2944 067c 01       		.uleb128 0x1
 2945 067d 50       		.byte	0x50
 2946 067e 01       		.uleb128 0x1
 2947 067f 30       		.byte	0x30
 2948 0680 00       		.byte	0
 2949 0681 00       		.byte	0
 2950 0682 17       		.uleb128 0x17
 2951 0683 BD000000 		.4byte	.LASF62
 2952 0687 01       		.byte	0x1
 2953 0688 7F0A     		.2byte	0xa7f
 2954 068a 00000000 		.4byte	.LFB27
 2955 068e 18000000 		.4byte	.LFE27-.LFB27
 2956 0692 01       		.uleb128 0x1
 2957 0693 9C       		.byte	0x9c
 2958 0694 0A       		.uleb128 0xa
 2959 0695 28060000 		.4byte	.LASF63
 2960 0699 01       		.byte	0x1
 2961 069a 930A     		.2byte	0xa93
 2962 069c 00000000 		.4byte	.LFB28
 2963 06a0 30000000 		.4byte	.LFE28-.LFB28
 2964 06a4 01       		.uleb128 0x1
 2965 06a5 9C       		.byte	0x9c
 2966 06a6 CD060000 		.4byte	0x6cd
 2967 06aa 0F       		.uleb128 0xf
 2968 06ab 98020000 		.4byte	.LASF64
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 111


 2969 06af 01       		.byte	0x1
 2970 06b0 930A     		.2byte	0xa93
 2971 06b2 83000000 		.4byte	0x83
 2972 06b6 9F030000 		.4byte	.LLST29
 2973 06ba 0D       		.uleb128 0xd
 2974 06bb 0E000000 		.4byte	.LVL81
 2975 06bf AB0B0000 		.4byte	0xbab
 2976 06c3 0D       		.uleb128 0xd
 2977 06c4 26000000 		.4byte	.LVL83
 2978 06c8 AB0B0000 		.4byte	0xbab
 2979 06cc 00       		.byte	0
 2980 06cd 0C       		.uleb128 0xc
 2981 06ce DF010000 		.4byte	.LASF65
 2982 06d2 01       		.byte	0x1
 2983 06d3 A6       		.byte	0xa6
 2984 06d4 00000000 		.4byte	.LFB3
 2985 06d8 D0000000 		.4byte	.LFE3-.LFB3
 2986 06dc 01       		.uleb128 0x1
 2987 06dd 9C       		.byte	0x9c
 2988 06de 89070000 		.4byte	0x789
 2989 06e2 18       		.uleb128 0x18
 2990 06e3 0E010000 		.4byte	.LASF24
 2991 06e7 01       		.byte	0x1
 2992 06e8 AC       		.byte	0xac
 2993 06e9 83000000 		.4byte	0x83
 2994 06ed BD030000 		.4byte	.LLST30
 2995 06f1 18       		.uleb128 0x18
 2996 06f2 1F010000 		.4byte	.LASF25
 2997 06f6 01       		.byte	0x1
 2998 06f7 AD       		.byte	0xad
 2999 06f8 6B000000 		.4byte	0x6b
 3000 06fc D0030000 		.4byte	.LLST31
 3001 0700 18       		.uleb128 0x18
 3002 0701 DC020000 		.4byte	.LASF66
 3003 0705 01       		.byte	0x1
 3004 0706 AE       		.byte	0xae
 3005 0707 83000000 		.4byte	0x83
 3006 070b E3030000 		.4byte	.LLST32
 3007 070f 18       		.uleb128 0x18
 3008 0710 2E010000 		.4byte	.LASF67
 3009 0714 01       		.byte	0x1
 3010 0715 AF       		.byte	0xaf
 3011 0716 83000000 		.4byte	0x83
 3012 071a 0D040000 		.4byte	.LLST33
 3013 071e 19       		.uleb128 0x19
 3014 071f 1C060000 		.4byte	.LASF68
 3015 0723 01       		.byte	0x1
 3016 0724 B0       		.byte	0xb0
 3017 0725 C1000000 		.4byte	0xc1
 3018 0729 02       		.uleb128 0x2
 3019 072a 91       		.byte	0x91
 3020 072b 6C       		.sleb128 -20
 3021 072c 0D       		.uleb128 0xd
 3022 072d 08000000 		.4byte	.LVL86
 3023 0731 B60B0000 		.4byte	0xbb6
 3024 0735 0D       		.uleb128 0xd
 3025 0736 10000000 		.4byte	.LVL87
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 112


 3026 073a 950B0000 		.4byte	0xb95
 3027 073e 16       		.uleb128 0x16
 3028 073f 62000000 		.4byte	.LVL96
 3029 0743 C10B0000 		.4byte	0xbc1
 3030 0747 52070000 		.4byte	0x752
 3031 074b 15       		.uleb128 0x15
 3032 074c 01       		.uleb128 0x1
 3033 074d 50       		.byte	0x50
 3034 074e 02       		.uleb128 0x2
 3035 074f 08       		.byte	0x8
 3036 0750 30       		.byte	0x30
 3037 0751 00       		.byte	0
 3038 0752 16       		.uleb128 0x16
 3039 0753 7E000000 		.4byte	.LVL99
 3040 0757 94060000 		.4byte	0x694
 3041 075b 65070000 		.4byte	0x765
 3042 075f 15       		.uleb128 0x15
 3043 0760 01       		.uleb128 0x1
 3044 0761 50       		.byte	0x50
 3045 0762 01       		.uleb128 0x1
 3046 0763 31       		.byte	0x31
 3047 0764 00       		.byte	0
 3048 0765 16       		.uleb128 0x16
 3049 0766 92000000 		.4byte	.LVL102
 3050 076a 94060000 		.4byte	0x694
 3051 076e 78070000 		.4byte	0x778
 3052 0772 15       		.uleb128 0x15
 3053 0773 01       		.uleb128 0x1
 3054 0774 50       		.byte	0x50
 3055 0775 01       		.uleb128 0x1
 3056 0776 31       		.byte	0x31
 3057 0777 00       		.byte	0
 3058 0778 14       		.uleb128 0x14
 3059 0779 A8000000 		.4byte	.LVL104
 3060 077d A00B0000 		.4byte	0xba0
 3061 0781 15       		.uleb128 0x15
 3062 0782 01       		.uleb128 0x1
 3063 0783 50       		.byte	0x50
 3064 0784 02       		.uleb128 0x2
 3065 0785 75       		.byte	0x75
 3066 0786 00       		.sleb128 0
 3067 0787 00       		.byte	0
 3068 0788 00       		.byte	0
 3069 0789 0A       		.uleb128 0xa
 3070 078a 31030000 		.4byte	.LASF69
 3071 078e 01       		.byte	0x1
 3072 078f B803     		.2byte	0x3b8
 3073 0791 00000000 		.4byte	.LFB10
 3074 0795 D8000000 		.4byte	.LFE10-.LFB10
 3075 0799 01       		.uleb128 0x1
 3076 079a 9C       		.byte	0x9c
 3077 079b 51080000 		.4byte	0x851
 3078 079f 0F       		.uleb128 0xf
 3079 07a0 0E010000 		.4byte	.LASF24
 3080 07a4 01       		.byte	0x1
 3081 07a5 B803     		.2byte	0x3b8
 3082 07a7 83000000 		.4byte	0x83
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 113


 3083 07ab 2C040000 		.4byte	.LLST34
 3084 07af 0B       		.uleb128 0xb
 3085 07b0 1F010000 		.4byte	.LASF25
 3086 07b4 01       		.byte	0x1
 3087 07b5 BA03     		.2byte	0x3ba
 3088 07b7 6B000000 		.4byte	0x6b
 3089 07bb 7C040000 		.4byte	.LLST35
 3090 07bf 0B       		.uleb128 0xb
 3091 07c0 05060000 		.4byte	.LASF70
 3092 07c4 01       		.byte	0x1
 3093 07c5 BB03     		.2byte	0x3bb
 3094 07c7 6B000000 		.4byte	0x6b
 3095 07cb 90040000 		.4byte	.LLST36
 3096 07cf 0B       		.uleb128 0xb
 3097 07d0 5F010000 		.4byte	.LASF71
 3098 07d4 01       		.byte	0x1
 3099 07d5 BE03     		.2byte	0x3be
 3100 07d7 83000000 		.4byte	0x83
 3101 07db B4040000 		.4byte	.LLST37
 3102 07df 0D       		.uleb128 0xd
 3103 07e0 26000000 		.4byte	.LVL107
 3104 07e4 950B0000 		.4byte	0xb95
 3105 07e8 0D       		.uleb128 0xd
 3106 07e9 2C000000 		.4byte	.LVL109
 3107 07ed 49010000 		.4byte	0x149
 3108 07f1 0D       		.uleb128 0xd
 3109 07f2 34000000 		.4byte	.LVL111
 3110 07f6 03010000 		.4byte	0x103
 3111 07fa 16       		.uleb128 0x16
 3112 07fb 74000000 		.4byte	.LVL118
 3113 07ff AB0B0000 		.4byte	0xbab
 3114 0803 0E080000 		.4byte	0x80e
 3115 0807 15       		.uleb128 0x15
 3116 0808 01       		.uleb128 0x1
 3117 0809 50       		.byte	0x50
 3118 080a 02       		.uleb128 0x2
 3119 080b 08       		.byte	0x8
 3120 080c 32       		.byte	0x32
 3121 080d 00       		.byte	0
 3122 080e 16       		.uleb128 0x16
 3123 080f 94000000 		.4byte	.LVL119
 3124 0813 AB0B0000 		.4byte	0xbab
 3125 0817 22080000 		.4byte	0x822
 3126 081b 15       		.uleb128 0x15
 3127 081c 01       		.uleb128 0x1
 3128 081d 50       		.byte	0x50
 3129 081e 02       		.uleb128 0x2
 3130 081f 08       		.byte	0x8
 3131 0820 32       		.byte	0x32
 3132 0821 00       		.byte	0
 3133 0822 0D       		.uleb128 0xd
 3134 0823 AE000000 		.4byte	.LVL121
 3135 0827 CD060000 		.4byte	0x6cd
 3136 082b 16       		.uleb128 0x16
 3137 082c B4000000 		.4byte	.LVL122
 3138 0830 A00B0000 		.4byte	0xba0
 3139 0834 41080000 		.4byte	0x841
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 114


 3140 0838 15       		.uleb128 0x15
 3141 0839 01       		.uleb128 0x1
 3142 083a 50       		.byte	0x50
 3143 083b 04       		.uleb128 0x4
 3144 083c 91       		.byte	0x91
 3145 083d 64       		.sleb128 -28
 3146 083e 94       		.byte	0x94
 3147 083f 01       		.byte	0x1
 3148 0840 00       		.byte	0
 3149 0841 14       		.uleb128 0x14
 3150 0842 BC000000 		.4byte	.LVL125
 3151 0846 0A040000 		.4byte	0x40a
 3152 084a 15       		.uleb128 0x15
 3153 084b 01       		.uleb128 0x1
 3154 084c 50       		.byte	0x50
 3155 084d 01       		.uleb128 0x1
 3156 084e 30       		.byte	0x30
 3157 084f 00       		.byte	0
 3158 0850 00       		.byte	0
 3159 0851 0A       		.uleb128 0xa
 3160 0852 EB040000 		.4byte	.LASF72
 3161 0856 01       		.byte	0x1
 3162 0857 AA0A     		.2byte	0xaaa
 3163 0859 00000000 		.4byte	.LFB29
 3164 085d 14000000 		.4byte	.LFE29-.LFB29
 3165 0861 01       		.uleb128 0x1
 3166 0862 9C       		.byte	0x9c
 3167 0863 81080000 		.4byte	0x881
 3168 0867 0F       		.uleb128 0xf
 3169 0868 D6060000 		.4byte	.LASF73
 3170 086c 01       		.byte	0x1
 3171 086d AA0A     		.2byte	0xaaa
 3172 086f 77000000 		.4byte	0x77
 3173 0873 F7040000 		.4byte	.LLST38
 3174 0877 0D       		.uleb128 0xd
 3175 0878 0C000000 		.4byte	.LVL128
 3176 087c AB0B0000 		.4byte	0xbab
 3177 0880 00       		.byte	0
 3178 0881 1A       		.uleb128 0x1a
 3179 0882 13010000 		.4byte	.LASF74
 3180 0886 01       		.byte	0x1
 3181 0887 B80A     		.2byte	0xab8
 3182 0889 00000000 		.4byte	.LFB30
 3183 088d 4C000000 		.4byte	.LFE30-.LFB30
 3184 0891 01       		.uleb128 0x1
 3185 0892 9C       		.byte	0x9c
 3186 0893 A8080000 		.4byte	0x8a8
 3187 0897 0F       		.uleb128 0xf
 3188 0898 0E010000 		.4byte	.LASF24
 3189 089c 01       		.byte	0x1
 3190 089d B80A     		.2byte	0xab8
 3191 089f 83000000 		.4byte	0x83
 3192 08a3 18050000 		.4byte	.LLST39
 3193 08a7 00       		.byte	0
 3194 08a8 17       		.uleb128 0x17
 3195 08a9 78060000 		.4byte	.LASF75
 3196 08ad 01       		.byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 115


 3197 08ae 240B     		.2byte	0xb24
 3198 08b0 00000000 		.4byte	.LFB34
 3199 08b4 10000000 		.4byte	.LFE34-.LFB34
 3200 08b8 01       		.uleb128 0x1
 3201 08b9 9C       		.byte	0x9c
 3202 08ba 17       		.uleb128 0x17
 3203 08bb CD000000 		.4byte	.LASF76
 3204 08bf 01       		.byte	0x1
 3205 08c0 340B     		.2byte	0xb34
 3206 08c2 00000000 		.4byte	.LFB35
 3207 08c6 10000000 		.4byte	.LFE35-.LFB35
 3208 08ca 01       		.uleb128 0x1
 3209 08cb 9C       		.byte	0x9c
 3210 08cc 0A       		.uleb128 0xa
 3211 08cd A0050000 		.4byte	.LASF77
 3212 08d1 01       		.byte	0x1
 3213 08d2 130B     		.2byte	0xb13
 3214 08d4 00000000 		.4byte	.LFB33
 3215 08d8 18000000 		.4byte	.LFE33-.LFB33
 3216 08dc 01       		.uleb128 0x1
 3217 08dd 9C       		.byte	0x9c
 3218 08de EC080000 		.4byte	0x8ec
 3219 08e2 0D       		.uleb128 0xd
 3220 08e3 06000000 		.4byte	.LVL133
 3221 08e7 BA080000 		.4byte	0x8ba
 3222 08eb 00       		.byte	0
 3223 08ec 17       		.uleb128 0x17
 3224 08ed 48060000 		.4byte	.LASF78
 3225 08f1 01       		.byte	0x1
 3226 08f2 440B     		.2byte	0xb44
 3227 08f4 00000000 		.4byte	.LFB36
 3228 08f8 10000000 		.4byte	.LFE36-.LFB36
 3229 08fc 01       		.uleb128 0x1
 3230 08fd 9C       		.byte	0x9c
 3231 08fe 0A       		.uleb128 0xa
 3232 08ff EA060000 		.4byte	.LASF79
 3233 0903 01       		.byte	0x1
 3234 0904 550B     		.2byte	0xb55
 3235 0906 00000000 		.4byte	.LFB37
 3236 090a 10000000 		.4byte	.LFE37-.LFB37
 3237 090e 01       		.uleb128 0x1
 3238 090f 9C       		.byte	0x9c
 3239 0910 25090000 		.4byte	0x925
 3240 0914 0F       		.uleb128 0xf
 3241 0915 24020000 		.4byte	.LASF59
 3242 0919 01       		.byte	0x1
 3243 091a 550B     		.2byte	0xb55
 3244 091c 83000000 		.4byte	0x83
 3245 0920 39050000 		.4byte	.LLST40
 3246 0924 00       		.byte	0
 3247 0925 0E       		.uleb128 0xe
 3248 0926 36010000 		.4byte	.LASF81
 3249 092a 01       		.byte	0x1
 3250 092b 650B     		.2byte	0xb65
 3251 092d 83000000 		.4byte	0x83
 3252 0931 00000000 		.4byte	.LFB38
 3253 0935 10000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 116


 3254 0939 01       		.uleb128 0x1
 3255 093a 9C       		.byte	0x9c
 3256 093b 0E       		.uleb128 0xe
 3257 093c D9030000 		.4byte	.LASF82
 3258 0940 01       		.byte	0x1
 3259 0941 750B     		.2byte	0xb75
 3260 0943 83000000 		.4byte	0x83
 3261 0947 00000000 		.4byte	.LFB39
 3262 094b 10000000 		.4byte	.LFE39-.LFB39
 3263 094f 01       		.uleb128 0x1
 3264 0950 9C       		.byte	0x9c
 3265 0951 0A       		.uleb128 0xa
 3266 0952 E3020000 		.4byte	.LASF83
 3267 0956 01       		.byte	0x1
 3268 0957 950B     		.2byte	0xb95
 3269 0959 00000000 		.4byte	.LFB40
 3270 095d 20000000 		.4byte	.LFE40-.LFB40
 3271 0961 01       		.uleb128 0x1
 3272 0962 9C       		.byte	0x9c
 3273 0963 76090000 		.4byte	0x976
 3274 0967 10       		.uleb128 0x10
 3275 0968 2A020000 		.4byte	.LASF84
 3276 096c 01       		.byte	0x1
 3277 096d 950B     		.2byte	0xb95
 3278 096f 83000000 		.4byte	0x83
 3279 0973 01       		.uleb128 0x1
 3280 0974 50       		.byte	0x50
 3281 0975 00       		.byte	0
 3282 0976 0E       		.uleb128 0xe
 3283 0977 30060000 		.4byte	.LASF85
 3284 097b 01       		.byte	0x1
 3285 097c AE0B     		.2byte	0xbae
 3286 097e 83000000 		.4byte	0x83
 3287 0982 00000000 		.4byte	.LFB41
 3288 0986 10000000 		.4byte	.LFE41-.LFB41
 3289 098a 01       		.uleb128 0x1
 3290 098b 9C       		.byte	0x9c
 3291 098c 0E       		.uleb128 0xe
 3292 098d 44020000 		.4byte	.LASF86
 3293 0991 01       		.byte	0x1
 3294 0992 C50B     		.2byte	0xbc5
 3295 0994 83000000 		.4byte	0x83
 3296 0998 00000000 		.4byte	.LFB42
 3297 099c 10000000 		.4byte	.LFE42-.LFB42
 3298 09a0 01       		.uleb128 0x1
 3299 09a1 9C       		.byte	0x9c
 3300 09a2 1B       		.uleb128 0x1b
 3301 09a3 FD060000 		.4byte	.LASF111
 3302 09a7 01       		.byte	0x1
 3303 09a8 1A0C     		.2byte	0xc1a
 3304 09aa 00000000 		.4byte	.LFB46
 3305 09ae 28000000 		.4byte	.LFE46-.LFB46
 3306 09b2 01       		.uleb128 0x1
 3307 09b3 9C       		.byte	0x9c
 3308 09b4 D0090000 		.4byte	0x9d0
 3309 09b8 1C       		.uleb128 0x1c
 3310 09b9 6900     		.ascii	"i\000"
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 117


 3311 09bb 01       		.byte	0x1
 3312 09bc 1C0C     		.2byte	0xc1c
 3313 09be 83000000 		.4byte	0x83
 3314 09c2 5A050000 		.4byte	.LLST41
 3315 09c6 0D       		.uleb128 0xd
 3316 09c7 06000000 		.4byte	.LVL137
 3317 09cb 8C090000 		.4byte	0x98c
 3318 09cf 00       		.byte	0
 3319 09d0 17       		.uleb128 0x17
 3320 09d1 67020000 		.4byte	.LASF87
 3321 09d5 01       		.byte	0x1
 3322 09d6 D20B     		.2byte	0xbd2
 3323 09d8 00000000 		.4byte	.LFB43
 3324 09dc 0C000000 		.4byte	.LFE43-.LFB43
 3325 09e0 01       		.uleb128 0x1
 3326 09e1 9C       		.byte	0x9c
 3327 09e2 1A       		.uleb128 0x1a
 3328 09e3 16020000 		.4byte	.LASF88
 3329 09e7 01       		.byte	0x1
 3330 09e8 F50A     		.2byte	0xaf5
 3331 09ea 00000000 		.4byte	.LFB32
 3332 09ee 44000000 		.4byte	.LFE32-.LFB32
 3333 09f2 01       		.uleb128 0x1
 3334 09f3 9C       		.byte	0x9c
 3335 09f4 480A0000 		.4byte	0xa48
 3336 09f8 1C       		.uleb128 0x1c
 3337 09f9 6900     		.ascii	"i\000"
 3338 09fb 01       		.byte	0x1
 3339 09fc F70A     		.2byte	0xaf7
 3340 09fe 83000000 		.4byte	0x83
 3341 0a02 78050000 		.4byte	.LLST42
 3342 0a06 16       		.uleb128 0x16
 3343 0a07 1C000000 		.4byte	.LVL147
 3344 0a0b 2F040000 		.4byte	0x42f
 3345 0a0f 220A0000 		.4byte	0xa22
 3346 0a13 15       		.uleb128 0x15
 3347 0a14 01       		.uleb128 0x1
 3348 0a15 50       		.byte	0x50
 3349 0a16 01       		.uleb128 0x1
 3350 0a17 3F       		.byte	0x3f
 3351 0a18 15       		.uleb128 0x15
 3352 0a19 01       		.uleb128 0x1
 3353 0a1a 51       		.byte	0x51
 3354 0a1b 05       		.uleb128 0x5
 3355 0a1c 03       		.byte	0x3
 3356 0a1d 00000000 		.4byte	CySysTickServiceCallbacks
 3357 0a21 00       		.byte	0
 3358 0a22 16       		.uleb128 0x16
 3359 0a23 22000000 		.4byte	.LVL148
 3360 0a27 51090000 		.4byte	0x951
 3361 0a2b 350A0000 		.4byte	0xa35
 3362 0a2f 15       		.uleb128 0x15
 3363 0a30 01       		.uleb128 0x1
 3364 0a31 50       		.byte	0x50
 3365 0a32 01       		.uleb128 0x1
 3366 0a33 31       		.byte	0x31
 3367 0a34 00       		.byte	0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 118


 3368 0a35 0D       		.uleb128 0xd
 3369 0a36 32000000 		.4byte	.LVL150
 3370 0a3a FE080000 		.4byte	0x8fe
 3371 0a3e 0D       		.uleb128 0xd
 3372 0a3f 36000000 		.4byte	.LVL151
 3373 0a43 D0090000 		.4byte	0x9d0
 3374 0a47 00       		.byte	0
 3375 0a48 0A       		.uleb128 0xa
 3376 0a49 78030000 		.4byte	.LASF89
 3377 0a4d 01       		.byte	0x1
 3378 0a4e D80A     		.2byte	0xad8
 3379 0a50 00000000 		.4byte	.LFB31
 3380 0a54 20000000 		.4byte	.LFE31-.LFB31
 3381 0a58 01       		.uleb128 0x1
 3382 0a59 9C       		.byte	0x9c
 3383 0a5a 710A0000 		.4byte	0xa71
 3384 0a5e 0D       		.uleb128 0xd
 3385 0a5f 0E000000 		.4byte	.LVL152
 3386 0a63 E2090000 		.4byte	0x9e2
 3387 0a67 0D       		.uleb128 0xd
 3388 0a68 18000000 		.4byte	.LVL153
 3389 0a6c CC080000 		.4byte	0x8cc
 3390 0a70 00       		.byte	0
 3391 0a71 11       		.uleb128 0x11
 3392 0a72 DD050000 		.4byte	.LASF90
 3393 0a76 01       		.byte	0x1
 3394 0a77 F50B     		.2byte	0xbf5
 3395 0a79 E7000000 		.4byte	0xe7
 3396 0a7d 00000000 		.4byte	.LFB44
 3397 0a81 10000000 		.4byte	.LFE44-.LFB44
 3398 0a85 01       		.uleb128 0x1
 3399 0a86 9C       		.byte	0x9c
 3400 0a87 B80A0000 		.4byte	0xab8
 3401 0a8b 0F       		.uleb128 0xf
 3402 0a8c 0A030000 		.4byte	.LASF43
 3403 0a90 01       		.byte	0x1
 3404 0a91 F50B     		.2byte	0xbf5
 3405 0a93 83000000 		.4byte	0x83
 3406 0a97 97050000 		.4byte	.LLST43
 3407 0a9b 10       		.uleb128 0x10
 3408 0a9c D0030000 		.4byte	.LASF91
 3409 0aa0 01       		.byte	0x1
 3410 0aa1 F50B     		.2byte	0xbf5
 3411 0aa3 E7000000 		.4byte	0xe7
 3412 0aa7 01       		.uleb128 0x1
 3413 0aa8 51       		.byte	0x51
 3414 0aa9 12       		.uleb128 0x12
 3415 0aaa 60000000 		.4byte	.LASF92
 3416 0aae 01       		.byte	0x1
 3417 0aaf F70B     		.2byte	0xbf7
 3418 0ab1 E7000000 		.4byte	0xe7
 3419 0ab5 01       		.uleb128 0x1
 3420 0ab6 50       		.byte	0x50
 3421 0ab7 00       		.byte	0
 3422 0ab8 11       		.uleb128 0x11
 3423 0ab9 7D010000 		.4byte	.LASF93
 3424 0abd 01       		.byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 119


 3425 0abe 0D0C     		.2byte	0xc0d
 3426 0ac0 E7000000 		.4byte	0xe7
 3427 0ac4 00000000 		.4byte	.LFB45
 3428 0ac8 0C000000 		.4byte	.LFE45-.LFB45
 3429 0acc 01       		.uleb128 0x1
 3430 0acd 9C       		.byte	0x9c
 3431 0ace E30A0000 		.4byte	0xae3
 3432 0ad2 0F       		.uleb128 0xf
 3433 0ad3 0A030000 		.4byte	.LASF43
 3434 0ad7 01       		.byte	0x1
 3435 0ad8 0D0C     		.2byte	0xc0d
 3436 0ada 83000000 		.4byte	0x83
 3437 0ade B8050000 		.4byte	.LLST44
 3438 0ae2 00       		.byte	0
 3439 0ae3 0A       		.uleb128 0xa
 3440 0ae4 36020000 		.4byte	.LASF94
 3441 0ae8 01       		.byte	0x1
 3442 0ae9 3A0C     		.2byte	0xc3a
 3443 0aeb 00000000 		.4byte	.LFB47
 3444 0aef 70000000 		.4byte	.LFE47-.LFB47
 3445 0af3 01       		.uleb128 0x1
 3446 0af4 9C       		.byte	0x9c
 3447 0af5 080B0000 		.4byte	0xb08
 3448 0af9 10       		.uleb128 0x10
 3449 0afa 13060000 		.4byte	.LASF95
 3450 0afe 01       		.byte	0x1
 3451 0aff 3A0C     		.2byte	0xc3a
 3452 0b01 080B0000 		.4byte	0xb08
 3453 0b05 01       		.uleb128 0x1
 3454 0b06 50       		.byte	0x50
 3455 0b07 00       		.byte	0
 3456 0b08 06       		.uleb128 0x6
 3457 0b09 04       		.byte	0x4
 3458 0b0a 83000000 		.4byte	0x83
 3459 0b0e 1D       		.uleb128 0x1d
 3460 0b0f E7000000 		.4byte	0xe7
 3461 0b13 1E0B0000 		.4byte	0xb1e
 3462 0b17 1E       		.uleb128 0x1e
 3463 0b18 E0000000 		.4byte	0xe0
 3464 0b1c 04       		.byte	0x4
 3465 0b1d 00       		.byte	0
 3466 0b1e 19       		.uleb128 0x19
 3467 0b1f F2050000 		.4byte	.LASF96
 3468 0b23 01       		.byte	0x1
 3469 0b24 22       		.byte	0x22
 3470 0b25 0E0B0000 		.4byte	0xb0e
 3471 0b29 05       		.uleb128 0x5
 3472 0b2a 03       		.byte	0x3
 3473 0b2b 00000000 		.4byte	CySysTickCallbacks
 3474 0b2f 1F       		.uleb128 0x1f
 3475 0b30 EB030000 		.4byte	.LASF97
 3476 0b34 01       		.byte	0x1
 3477 0b35 1B       		.byte	0x1b
 3478 0b36 83000000 		.4byte	0x83
 3479 0b3a 05       		.uleb128 0x5
 3480 0b3b 03       		.byte	0x3
 3481 0b3c 00000000 		.4byte	cydelayFreqHz
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 120


 3482 0b40 1F       		.uleb128 0x1f
 3483 0b41 98010000 		.4byte	.LASF98
 3484 0b45 01       		.byte	0x1
 3485 0b46 1C       		.byte	0x1c
 3486 0b47 83000000 		.4byte	0x83
 3487 0b4b 05       		.uleb128 0x5
 3488 0b4c 03       		.byte	0x3
 3489 0b4d 00000000 		.4byte	cydelayFreqKhz
 3490 0b51 1F       		.uleb128 0x1f
 3491 0b52 69060000 		.4byte	.LASF99
 3492 0b56 01       		.byte	0x1
 3493 0b57 1D       		.byte	0x1d
 3494 0b58 6B000000 		.4byte	0x6b
 3495 0b5c 05       		.uleb128 0x5
 3496 0b5d 03       		.byte	0x3
 3497 0b5e 00000000 		.4byte	cydelayFreqMhz
 3498 0b62 1F       		.uleb128 0x1f
 3499 0b63 09020000 		.4byte	.LASF100
 3500 0b67 01       		.byte	0x1
 3501 0b68 1E       		.byte	0x1e
 3502 0b69 83000000 		.4byte	0x83
 3503 0b6d 05       		.uleb128 0x5
 3504 0b6e 03       		.byte	0x3
 3505 0b6f 00000000 		.4byte	cydelay32kMs
 3506 0b73 1F       		.uleb128 0x1f
 3507 0b74 8C000000 		.4byte	.LASF101
 3508 0b78 01       		.byte	0x1
 3509 0b79 36       		.byte	0x36
 3510 0b7a 83000000 		.4byte	0x83
 3511 0b7e 05       		.uleb128 0x5
 3512 0b7f 03       		.byte	0x3
 3513 0b80 00000000 		.4byte	CySysTickInitVar
 3514 0b84 1F       		.uleb128 0x1f
 3515 0b85 38000000 		.4byte	.LASF102
 3516 0b89 01       		.byte	0x1
 3517 0b8a 51       		.byte	0x51
 3518 0b8b 83000000 		.4byte	0x83
 3519 0b8f 05       		.uleb128 0x5
 3520 0b90 03       		.byte	0x3
 3521 0b91 00000000 		.4byte	CySysClkPumpConfig
 3522 0b95 20       		.uleb128 0x20
 3523 0b96 11030000 		.4byte	.LASF103
 3524 0b9a 11030000 		.4byte	.LASF103
 3525 0b9e 03       		.byte	0x3
 3526 0b9f E5       		.byte	0xe5
 3527 0ba0 20       		.uleb128 0x20
 3528 0ba1 10040000 		.4byte	.LASF104
 3529 0ba5 10040000 		.4byte	.LASF104
 3530 0ba9 03       		.byte	0x3
 3531 0baa E6       		.byte	0xe6
 3532 0bab 20       		.uleb128 0x20
 3533 0bac 91040000 		.4byte	.LASF105
 3534 0bb0 91040000 		.4byte	.LASF105
 3535 0bb4 03       		.byte	0x3
 3536 0bb5 DC       		.byte	0xdc
 3537 0bb6 20       		.uleb128 0x20
 3538 0bb7 AA000000 		.4byte	.LASF106
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 121


 3539 0bbb AA000000 		.4byte	.LASF106
 3540 0bbf 04       		.byte	0x4
 3541 0bc0 54       		.byte	0x54
 3542 0bc1 20       		.uleb128 0x20
 3543 0bc2 9F060000 		.4byte	.LASF107
 3544 0bc6 9F060000 		.4byte	.LASF107
 3545 0bca 05       		.byte	0x5
 3546 0bcb 52       		.byte	0x52
 3547 0bcc 00       		.byte	0
 3548              		.section	.debug_abbrev,"",%progbits
 3549              	.Ldebug_abbrev0:
 3550 0000 01       		.uleb128 0x1
 3551 0001 11       		.uleb128 0x11
 3552 0002 01       		.byte	0x1
 3553 0003 25       		.uleb128 0x25
 3554 0004 0E       		.uleb128 0xe
 3555 0005 13       		.uleb128 0x13
 3556 0006 0B       		.uleb128 0xb
 3557 0007 03       		.uleb128 0x3
 3558 0008 0E       		.uleb128 0xe
 3559 0009 1B       		.uleb128 0x1b
 3560 000a 0E       		.uleb128 0xe
 3561 000b 55       		.uleb128 0x55
 3562 000c 17       		.uleb128 0x17
 3563 000d 11       		.uleb128 0x11
 3564 000e 01       		.uleb128 0x1
 3565 000f 10       		.uleb128 0x10
 3566 0010 17       		.uleb128 0x17
 3567 0011 00       		.byte	0
 3568 0012 00       		.byte	0
 3569 0013 02       		.uleb128 0x2
 3570 0014 24       		.uleb128 0x24
 3571 0015 00       		.byte	0
 3572 0016 0B       		.uleb128 0xb
 3573 0017 0B       		.uleb128 0xb
 3574 0018 3E       		.uleb128 0x3e
 3575 0019 0B       		.uleb128 0xb
 3576 001a 03       		.uleb128 0x3
 3577 001b 0E       		.uleb128 0xe
 3578 001c 00       		.byte	0
 3579 001d 00       		.byte	0
 3580 001e 03       		.uleb128 0x3
 3581 001f 24       		.uleb128 0x24
 3582 0020 00       		.byte	0
 3583 0021 0B       		.uleb128 0xb
 3584 0022 0B       		.uleb128 0xb
 3585 0023 3E       		.uleb128 0x3e
 3586 0024 0B       		.uleb128 0xb
 3587 0025 03       		.uleb128 0x3
 3588 0026 08       		.uleb128 0x8
 3589 0027 00       		.byte	0
 3590 0028 00       		.byte	0
 3591 0029 04       		.uleb128 0x4
 3592 002a 16       		.uleb128 0x16
 3593 002b 00       		.byte	0
 3594 002c 03       		.uleb128 0x3
 3595 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 122


 3596 002e 3A       		.uleb128 0x3a
 3597 002f 0B       		.uleb128 0xb
 3598 0030 3B       		.uleb128 0x3b
 3599 0031 05       		.uleb128 0x5
 3600 0032 49       		.uleb128 0x49
 3601 0033 13       		.uleb128 0x13
 3602 0034 00       		.byte	0
 3603 0035 00       		.byte	0
 3604 0036 05       		.uleb128 0x5
 3605 0037 35       		.uleb128 0x35
 3606 0038 00       		.byte	0
 3607 0039 49       		.uleb128 0x49
 3608 003a 13       		.uleb128 0x13
 3609 003b 00       		.byte	0
 3610 003c 00       		.byte	0
 3611 003d 06       		.uleb128 0x6
 3612 003e 0F       		.uleb128 0xf
 3613 003f 00       		.byte	0
 3614 0040 0B       		.uleb128 0xb
 3615 0041 0B       		.uleb128 0xb
 3616 0042 49       		.uleb128 0x49
 3617 0043 13       		.uleb128 0x13
 3618 0044 00       		.byte	0
 3619 0045 00       		.byte	0
 3620 0046 07       		.uleb128 0x7
 3621 0047 15       		.uleb128 0x15
 3622 0048 00       		.byte	0
 3623 0049 27       		.uleb128 0x27
 3624 004a 19       		.uleb128 0x19
 3625 004b 00       		.byte	0
 3626 004c 00       		.byte	0
 3627 004d 08       		.uleb128 0x8
 3628 004e 16       		.uleb128 0x16
 3629 004f 00       		.byte	0
 3630 0050 03       		.uleb128 0x3
 3631 0051 0E       		.uleb128 0xe
 3632 0052 3A       		.uleb128 0x3a
 3633 0053 0B       		.uleb128 0xb
 3634 0054 3B       		.uleb128 0x3b
 3635 0055 0B       		.uleb128 0xb
 3636 0056 49       		.uleb128 0x49
 3637 0057 13       		.uleb128 0x13
 3638 0058 00       		.byte	0
 3639 0059 00       		.byte	0
 3640 005a 09       		.uleb128 0x9
 3641 005b 2E       		.uleb128 0x2e
 3642 005c 00       		.byte	0
 3643 005d 3F       		.uleb128 0x3f
 3644 005e 19       		.uleb128 0x19
 3645 005f 03       		.uleb128 0x3
 3646 0060 0E       		.uleb128 0xe
 3647 0061 3A       		.uleb128 0x3a
 3648 0062 0B       		.uleb128 0xb
 3649 0063 3B       		.uleb128 0x3b
 3650 0064 0B       		.uleb128 0xb
 3651 0065 27       		.uleb128 0x27
 3652 0066 19       		.uleb128 0x19
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 123


 3653 0067 11       		.uleb128 0x11
 3654 0068 01       		.uleb128 0x1
 3655 0069 12       		.uleb128 0x12
 3656 006a 06       		.uleb128 0x6
 3657 006b 40       		.uleb128 0x40
 3658 006c 18       		.uleb128 0x18
 3659 006d 9742     		.uleb128 0x2117
 3660 006f 19       		.uleb128 0x19
 3661 0070 00       		.byte	0
 3662 0071 00       		.byte	0
 3663 0072 0A       		.uleb128 0xa
 3664 0073 2E       		.uleb128 0x2e
 3665 0074 01       		.byte	0x1
 3666 0075 3F       		.uleb128 0x3f
 3667 0076 19       		.uleb128 0x19
 3668 0077 03       		.uleb128 0x3
 3669 0078 0E       		.uleb128 0xe
 3670 0079 3A       		.uleb128 0x3a
 3671 007a 0B       		.uleb128 0xb
 3672 007b 3B       		.uleb128 0x3b
 3673 007c 05       		.uleb128 0x5
 3674 007d 27       		.uleb128 0x27
 3675 007e 19       		.uleb128 0x19
 3676 007f 11       		.uleb128 0x11
 3677 0080 01       		.uleb128 0x1
 3678 0081 12       		.uleb128 0x12
 3679 0082 06       		.uleb128 0x6
 3680 0083 40       		.uleb128 0x40
 3681 0084 18       		.uleb128 0x18
 3682 0085 9742     		.uleb128 0x2117
 3683 0087 19       		.uleb128 0x19
 3684 0088 01       		.uleb128 0x1
 3685 0089 13       		.uleb128 0x13
 3686 008a 00       		.byte	0
 3687 008b 00       		.byte	0
 3688 008c 0B       		.uleb128 0xb
 3689 008d 34       		.uleb128 0x34
 3690 008e 00       		.byte	0
 3691 008f 03       		.uleb128 0x3
 3692 0090 0E       		.uleb128 0xe
 3693 0091 3A       		.uleb128 0x3a
 3694 0092 0B       		.uleb128 0xb
 3695 0093 3B       		.uleb128 0x3b
 3696 0094 05       		.uleb128 0x5
 3697 0095 49       		.uleb128 0x49
 3698 0096 13       		.uleb128 0x13
 3699 0097 02       		.uleb128 0x2
 3700 0098 17       		.uleb128 0x17
 3701 0099 00       		.byte	0
 3702 009a 00       		.byte	0
 3703 009b 0C       		.uleb128 0xc
 3704 009c 2E       		.uleb128 0x2e
 3705 009d 01       		.byte	0x1
 3706 009e 3F       		.uleb128 0x3f
 3707 009f 19       		.uleb128 0x19
 3708 00a0 03       		.uleb128 0x3
 3709 00a1 0E       		.uleb128 0xe
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 124


 3710 00a2 3A       		.uleb128 0x3a
 3711 00a3 0B       		.uleb128 0xb
 3712 00a4 3B       		.uleb128 0x3b
 3713 00a5 0B       		.uleb128 0xb
 3714 00a6 27       		.uleb128 0x27
 3715 00a7 19       		.uleb128 0x19
 3716 00a8 11       		.uleb128 0x11
 3717 00a9 01       		.uleb128 0x1
 3718 00aa 12       		.uleb128 0x12
 3719 00ab 06       		.uleb128 0x6
 3720 00ac 40       		.uleb128 0x40
 3721 00ad 18       		.uleb128 0x18
 3722 00ae 9742     		.uleb128 0x2117
 3723 00b0 19       		.uleb128 0x19
 3724 00b1 01       		.uleb128 0x1
 3725 00b2 13       		.uleb128 0x13
 3726 00b3 00       		.byte	0
 3727 00b4 00       		.byte	0
 3728 00b5 0D       		.uleb128 0xd
 3729 00b6 898201   		.uleb128 0x4109
 3730 00b9 00       		.byte	0
 3731 00ba 11       		.uleb128 0x11
 3732 00bb 01       		.uleb128 0x1
 3733 00bc 31       		.uleb128 0x31
 3734 00bd 13       		.uleb128 0x13
 3735 00be 00       		.byte	0
 3736 00bf 00       		.byte	0
 3737 00c0 0E       		.uleb128 0xe
 3738 00c1 2E       		.uleb128 0x2e
 3739 00c2 00       		.byte	0
 3740 00c3 3F       		.uleb128 0x3f
 3741 00c4 19       		.uleb128 0x19
 3742 00c5 03       		.uleb128 0x3
 3743 00c6 0E       		.uleb128 0xe
 3744 00c7 3A       		.uleb128 0x3a
 3745 00c8 0B       		.uleb128 0xb
 3746 00c9 3B       		.uleb128 0x3b
 3747 00ca 05       		.uleb128 0x5
 3748 00cb 27       		.uleb128 0x27
 3749 00cc 19       		.uleb128 0x19
 3750 00cd 49       		.uleb128 0x49
 3751 00ce 13       		.uleb128 0x13
 3752 00cf 11       		.uleb128 0x11
 3753 00d0 01       		.uleb128 0x1
 3754 00d1 12       		.uleb128 0x12
 3755 00d2 06       		.uleb128 0x6
 3756 00d3 40       		.uleb128 0x40
 3757 00d4 18       		.uleb128 0x18
 3758 00d5 9742     		.uleb128 0x2117
 3759 00d7 19       		.uleb128 0x19
 3760 00d8 00       		.byte	0
 3761 00d9 00       		.byte	0
 3762 00da 0F       		.uleb128 0xf
 3763 00db 05       		.uleb128 0x5
 3764 00dc 00       		.byte	0
 3765 00dd 03       		.uleb128 0x3
 3766 00de 0E       		.uleb128 0xe
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 125


 3767 00df 3A       		.uleb128 0x3a
 3768 00e0 0B       		.uleb128 0xb
 3769 00e1 3B       		.uleb128 0x3b
 3770 00e2 05       		.uleb128 0x5
 3771 00e3 49       		.uleb128 0x49
 3772 00e4 13       		.uleb128 0x13
 3773 00e5 02       		.uleb128 0x2
 3774 00e6 17       		.uleb128 0x17
 3775 00e7 00       		.byte	0
 3776 00e8 00       		.byte	0
 3777 00e9 10       		.uleb128 0x10
 3778 00ea 05       		.uleb128 0x5
 3779 00eb 00       		.byte	0
 3780 00ec 03       		.uleb128 0x3
 3781 00ed 0E       		.uleb128 0xe
 3782 00ee 3A       		.uleb128 0x3a
 3783 00ef 0B       		.uleb128 0xb
 3784 00f0 3B       		.uleb128 0x3b
 3785 00f1 05       		.uleb128 0x5
 3786 00f2 49       		.uleb128 0x49
 3787 00f3 13       		.uleb128 0x13
 3788 00f4 02       		.uleb128 0x2
 3789 00f5 18       		.uleb128 0x18
 3790 00f6 00       		.byte	0
 3791 00f7 00       		.byte	0
 3792 00f8 11       		.uleb128 0x11
 3793 00f9 2E       		.uleb128 0x2e
 3794 00fa 01       		.byte	0x1
 3795 00fb 3F       		.uleb128 0x3f
 3796 00fc 19       		.uleb128 0x19
 3797 00fd 03       		.uleb128 0x3
 3798 00fe 0E       		.uleb128 0xe
 3799 00ff 3A       		.uleb128 0x3a
 3800 0100 0B       		.uleb128 0xb
 3801 0101 3B       		.uleb128 0x3b
 3802 0102 05       		.uleb128 0x5
 3803 0103 27       		.uleb128 0x27
 3804 0104 19       		.uleb128 0x19
 3805 0105 49       		.uleb128 0x49
 3806 0106 13       		.uleb128 0x13
 3807 0107 11       		.uleb128 0x11
 3808 0108 01       		.uleb128 0x1
 3809 0109 12       		.uleb128 0x12
 3810 010a 06       		.uleb128 0x6
 3811 010b 40       		.uleb128 0x40
 3812 010c 18       		.uleb128 0x18
 3813 010d 9742     		.uleb128 0x2117
 3814 010f 19       		.uleb128 0x19
 3815 0110 01       		.uleb128 0x1
 3816 0111 13       		.uleb128 0x13
 3817 0112 00       		.byte	0
 3818 0113 00       		.byte	0
 3819 0114 12       		.uleb128 0x12
 3820 0115 34       		.uleb128 0x34
 3821 0116 00       		.byte	0
 3822 0117 03       		.uleb128 0x3
 3823 0118 0E       		.uleb128 0xe
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 126


 3824 0119 3A       		.uleb128 0x3a
 3825 011a 0B       		.uleb128 0xb
 3826 011b 3B       		.uleb128 0x3b
 3827 011c 05       		.uleb128 0x5
 3828 011d 49       		.uleb128 0x49
 3829 011e 13       		.uleb128 0x13
 3830 011f 02       		.uleb128 0x2
 3831 0120 18       		.uleb128 0x18
 3832 0121 00       		.byte	0
 3833 0122 00       		.byte	0
 3834 0123 13       		.uleb128 0x13
 3835 0124 34       		.uleb128 0x34
 3836 0125 00       		.byte	0
 3837 0126 03       		.uleb128 0x3
 3838 0127 0E       		.uleb128 0xe
 3839 0128 3A       		.uleb128 0x3a
 3840 0129 0B       		.uleb128 0xb
 3841 012a 3B       		.uleb128 0x3b
 3842 012b 05       		.uleb128 0x5
 3843 012c 49       		.uleb128 0x49
 3844 012d 13       		.uleb128 0x13
 3845 012e 1C       		.uleb128 0x1c
 3846 012f 06       		.uleb128 0x6
 3847 0130 00       		.byte	0
 3848 0131 00       		.byte	0
 3849 0132 14       		.uleb128 0x14
 3850 0133 898201   		.uleb128 0x4109
 3851 0136 01       		.byte	0x1
 3852 0137 11       		.uleb128 0x11
 3853 0138 01       		.uleb128 0x1
 3854 0139 31       		.uleb128 0x31
 3855 013a 13       		.uleb128 0x13
 3856 013b 00       		.byte	0
 3857 013c 00       		.byte	0
 3858 013d 15       		.uleb128 0x15
 3859 013e 8A8201   		.uleb128 0x410a
 3860 0141 00       		.byte	0
 3861 0142 02       		.uleb128 0x2
 3862 0143 18       		.uleb128 0x18
 3863 0144 9142     		.uleb128 0x2111
 3864 0146 18       		.uleb128 0x18
 3865 0147 00       		.byte	0
 3866 0148 00       		.byte	0
 3867 0149 16       		.uleb128 0x16
 3868 014a 898201   		.uleb128 0x4109
 3869 014d 01       		.byte	0x1
 3870 014e 11       		.uleb128 0x11
 3871 014f 01       		.uleb128 0x1
 3872 0150 31       		.uleb128 0x31
 3873 0151 13       		.uleb128 0x13
 3874 0152 01       		.uleb128 0x1
 3875 0153 13       		.uleb128 0x13
 3876 0154 00       		.byte	0
 3877 0155 00       		.byte	0
 3878 0156 17       		.uleb128 0x17
 3879 0157 2E       		.uleb128 0x2e
 3880 0158 00       		.byte	0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 127


 3881 0159 3F       		.uleb128 0x3f
 3882 015a 19       		.uleb128 0x19
 3883 015b 03       		.uleb128 0x3
 3884 015c 0E       		.uleb128 0xe
 3885 015d 3A       		.uleb128 0x3a
 3886 015e 0B       		.uleb128 0xb
 3887 015f 3B       		.uleb128 0x3b
 3888 0160 05       		.uleb128 0x5
 3889 0161 27       		.uleb128 0x27
 3890 0162 19       		.uleb128 0x19
 3891 0163 11       		.uleb128 0x11
 3892 0164 01       		.uleb128 0x1
 3893 0165 12       		.uleb128 0x12
 3894 0166 06       		.uleb128 0x6
 3895 0167 40       		.uleb128 0x40
 3896 0168 18       		.uleb128 0x18
 3897 0169 9742     		.uleb128 0x2117
 3898 016b 19       		.uleb128 0x19
 3899 016c 00       		.byte	0
 3900 016d 00       		.byte	0
 3901 016e 18       		.uleb128 0x18
 3902 016f 34       		.uleb128 0x34
 3903 0170 00       		.byte	0
 3904 0171 03       		.uleb128 0x3
 3905 0172 0E       		.uleb128 0xe
 3906 0173 3A       		.uleb128 0x3a
 3907 0174 0B       		.uleb128 0xb
 3908 0175 3B       		.uleb128 0x3b
 3909 0176 0B       		.uleb128 0xb
 3910 0177 49       		.uleb128 0x49
 3911 0178 13       		.uleb128 0x13
 3912 0179 02       		.uleb128 0x2
 3913 017a 17       		.uleb128 0x17
 3914 017b 00       		.byte	0
 3915 017c 00       		.byte	0
 3916 017d 19       		.uleb128 0x19
 3917 017e 34       		.uleb128 0x34
 3918 017f 00       		.byte	0
 3919 0180 03       		.uleb128 0x3
 3920 0181 0E       		.uleb128 0xe
 3921 0182 3A       		.uleb128 0x3a
 3922 0183 0B       		.uleb128 0xb
 3923 0184 3B       		.uleb128 0x3b
 3924 0185 0B       		.uleb128 0xb
 3925 0186 49       		.uleb128 0x49
 3926 0187 13       		.uleb128 0x13
 3927 0188 02       		.uleb128 0x2
 3928 0189 18       		.uleb128 0x18
 3929 018a 00       		.byte	0
 3930 018b 00       		.byte	0
 3931 018c 1A       		.uleb128 0x1a
 3932 018d 2E       		.uleb128 0x2e
 3933 018e 01       		.byte	0x1
 3934 018f 3F       		.uleb128 0x3f
 3935 0190 19       		.uleb128 0x19
 3936 0191 03       		.uleb128 0x3
 3937 0192 0E       		.uleb128 0xe
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 128


 3938 0193 3A       		.uleb128 0x3a
 3939 0194 0B       		.uleb128 0xb
 3940 0195 3B       		.uleb128 0x3b
 3941 0196 05       		.uleb128 0x5
 3942 0197 27       		.uleb128 0x27
 3943 0198 19       		.uleb128 0x19
 3944 0199 11       		.uleb128 0x11
 3945 019a 01       		.uleb128 0x1
 3946 019b 12       		.uleb128 0x12
 3947 019c 06       		.uleb128 0x6
 3948 019d 40       		.uleb128 0x40
 3949 019e 18       		.uleb128 0x18
 3950 019f 9642     		.uleb128 0x2116
 3951 01a1 19       		.uleb128 0x19
 3952 01a2 01       		.uleb128 0x1
 3953 01a3 13       		.uleb128 0x13
 3954 01a4 00       		.byte	0
 3955 01a5 00       		.byte	0
 3956 01a6 1B       		.uleb128 0x1b
 3957 01a7 2E       		.uleb128 0x2e
 3958 01a8 01       		.byte	0x1
 3959 01a9 03       		.uleb128 0x3
 3960 01aa 0E       		.uleb128 0xe
 3961 01ab 3A       		.uleb128 0x3a
 3962 01ac 0B       		.uleb128 0xb
 3963 01ad 3B       		.uleb128 0x3b
 3964 01ae 05       		.uleb128 0x5
 3965 01af 27       		.uleb128 0x27
 3966 01b0 19       		.uleb128 0x19
 3967 01b1 11       		.uleb128 0x11
 3968 01b2 01       		.uleb128 0x1
 3969 01b3 12       		.uleb128 0x12
 3970 01b4 06       		.uleb128 0x6
 3971 01b5 40       		.uleb128 0x40
 3972 01b6 18       		.uleb128 0x18
 3973 01b7 9642     		.uleb128 0x2116
 3974 01b9 19       		.uleb128 0x19
 3975 01ba 01       		.uleb128 0x1
 3976 01bb 13       		.uleb128 0x13
 3977 01bc 00       		.byte	0
 3978 01bd 00       		.byte	0
 3979 01be 1C       		.uleb128 0x1c
 3980 01bf 34       		.uleb128 0x34
 3981 01c0 00       		.byte	0
 3982 01c1 03       		.uleb128 0x3
 3983 01c2 08       		.uleb128 0x8
 3984 01c3 3A       		.uleb128 0x3a
 3985 01c4 0B       		.uleb128 0xb
 3986 01c5 3B       		.uleb128 0x3b
 3987 01c6 05       		.uleb128 0x5
 3988 01c7 49       		.uleb128 0x49
 3989 01c8 13       		.uleb128 0x13
 3990 01c9 02       		.uleb128 0x2
 3991 01ca 17       		.uleb128 0x17
 3992 01cb 00       		.byte	0
 3993 01cc 00       		.byte	0
 3994 01cd 1D       		.uleb128 0x1d
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 129


 3995 01ce 01       		.uleb128 0x1
 3996 01cf 01       		.byte	0x1
 3997 01d0 49       		.uleb128 0x49
 3998 01d1 13       		.uleb128 0x13
 3999 01d2 01       		.uleb128 0x1
 4000 01d3 13       		.uleb128 0x13
 4001 01d4 00       		.byte	0
 4002 01d5 00       		.byte	0
 4003 01d6 1E       		.uleb128 0x1e
 4004 01d7 21       		.uleb128 0x21
 4005 01d8 00       		.byte	0
 4006 01d9 49       		.uleb128 0x49
 4007 01da 13       		.uleb128 0x13
 4008 01db 2F       		.uleb128 0x2f
 4009 01dc 0B       		.uleb128 0xb
 4010 01dd 00       		.byte	0
 4011 01de 00       		.byte	0
 4012 01df 1F       		.uleb128 0x1f
 4013 01e0 34       		.uleb128 0x34
 4014 01e1 00       		.byte	0
 4015 01e2 03       		.uleb128 0x3
 4016 01e3 0E       		.uleb128 0xe
 4017 01e4 3A       		.uleb128 0x3a
 4018 01e5 0B       		.uleb128 0xb
 4019 01e6 3B       		.uleb128 0x3b
 4020 01e7 0B       		.uleb128 0xb
 4021 01e8 49       		.uleb128 0x49
 4022 01e9 13       		.uleb128 0x13
 4023 01ea 3F       		.uleb128 0x3f
 4024 01eb 19       		.uleb128 0x19
 4025 01ec 02       		.uleb128 0x2
 4026 01ed 18       		.uleb128 0x18
 4027 01ee 00       		.byte	0
 4028 01ef 00       		.byte	0
 4029 01f0 20       		.uleb128 0x20
 4030 01f1 2E       		.uleb128 0x2e
 4031 01f2 00       		.byte	0
 4032 01f3 3F       		.uleb128 0x3f
 4033 01f4 19       		.uleb128 0x19
 4034 01f5 3C       		.uleb128 0x3c
 4035 01f6 19       		.uleb128 0x19
 4036 01f7 6E       		.uleb128 0x6e
 4037 01f8 0E       		.uleb128 0xe
 4038 01f9 03       		.uleb128 0x3
 4039 01fa 0E       		.uleb128 0xe
 4040 01fb 3A       		.uleb128 0x3a
 4041 01fc 0B       		.uleb128 0xb
 4042 01fd 3B       		.uleb128 0x3b
 4043 01fe 0B       		.uleb128 0xb
 4044 01ff 00       		.byte	0
 4045 0200 00       		.byte	0
 4046 0201 00       		.byte	0
 4047              		.section	.debug_loc,"",%progbits
 4048              	.Ldebug_loc0:
 4049              	.LLST0:
 4050 0000 18000000 		.4byte	.LVL0
 4051 0004 28000000 		.4byte	.LVL1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 130


 4052 0008 0100     		.2byte	0x1
 4053 000a 53       		.byte	0x53
 4054 000b 28000000 		.4byte	.LVL1
 4055 000f 2A000000 		.4byte	.LVL2
 4056 0013 0700     		.2byte	0x7
 4057 0015 73       		.byte	0x73
 4058 0016 B39C8080 		.sleb128 -268431821
 4058      7F
 4059 001b 9F       		.byte	0x9f
 4060 001c 00000000 		.4byte	0
 4061 0020 00000000 		.4byte	0
 4062              	.LLST1:
 4063 0024 00000000 		.4byte	.LVL4
 4064 0028 07000000 		.4byte	.LVL5-1
 4065 002c 0100     		.2byte	0x1
 4066 002e 50       		.byte	0x50
 4067 002f 07000000 		.4byte	.LVL5-1
 4068 0033 12000000 		.4byte	.LVL7
 4069 0037 0100     		.2byte	0x1
 4070 0039 54       		.byte	0x54
 4071 003a 12000000 		.4byte	.LVL7
 4072 003e 20000000 		.4byte	.LFE6
 4073 0042 0400     		.2byte	0x4
 4074 0044 F3       		.byte	0xf3
 4075 0045 01       		.uleb128 0x1
 4076 0046 50       		.byte	0x50
 4077 0047 9F       		.byte	0x9f
 4078 0048 00000000 		.4byte	0
 4079 004c 00000000 		.4byte	0
 4080              	.LLST2:
 4081 0050 08000000 		.4byte	.LVL5
 4082 0054 19000000 		.4byte	.LVL9-1
 4083 0058 0100     		.2byte	0x1
 4084 005a 50       		.byte	0x50
 4085 005b 00000000 		.4byte	0
 4086 005f 00000000 		.4byte	0
 4087              	.LLST3:
 4088 0063 10000000 		.4byte	.LVL6
 4089 0067 14000000 		.4byte	.LVL8
 4090 006b 0100     		.2byte	0x1
 4091 006d 53       		.byte	0x53
 4092 006e 14000000 		.4byte	.LVL8
 4093 0072 1A000000 		.4byte	.LVL10
 4094 0076 0100     		.2byte	0x1
 4095 0078 54       		.byte	0x54
 4096 0079 00000000 		.4byte	0
 4097 007d 00000000 		.4byte	0
 4098              	.LLST4:
 4099 0081 06000000 		.4byte	.LVL12
 4100 0085 11000000 		.4byte	.LVL14-1
 4101 0089 0100     		.2byte	0x1
 4102 008b 50       		.byte	0x50
 4103 008c 00000000 		.4byte	0
 4104 0090 00000000 		.4byte	0
 4105              	.LLST5:
 4106 0094 0E000000 		.4byte	.LVL13
 4107 0098 14000000 		.4byte	.LVL15
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 131


 4108 009c 0100     		.2byte	0x1
 4109 009e 54       		.byte	0x54
 4110 009f 14000000 		.4byte	.LVL15
 4111 00a3 1C000000 		.4byte	.LFE8
 4112 00a7 0100     		.2byte	0x1
 4113 00a9 50       		.byte	0x50
 4114 00aa 00000000 		.4byte	0
 4115 00ae 00000000 		.4byte	0
 4116              	.LLST6:
 4117 00b2 00000000 		.4byte	.LVL16
 4118 00b6 07000000 		.4byte	.LVL17-1
 4119 00ba 0100     		.2byte	0x1
 4120 00bc 50       		.byte	0x50
 4121 00bd 07000000 		.4byte	.LVL17-1
 4122 00c1 0A000000 		.4byte	.LVL18
 4123 00c5 0100     		.2byte	0x1
 4124 00c7 54       		.byte	0x54
 4125 00c8 0A000000 		.4byte	.LVL18
 4126 00cc 24000000 		.4byte	.LFE9
 4127 00d0 0400     		.2byte	0x4
 4128 00d2 F3       		.byte	0xf3
 4129 00d3 01       		.uleb128 0x1
 4130 00d4 50       		.byte	0x50
 4131 00d5 9F       		.byte	0x9f
 4132 00d6 00000000 		.4byte	0
 4133 00da 00000000 		.4byte	0
 4134              	.LLST7:
 4135 00de 08000000 		.4byte	.LVL17
 4136 00e2 1D000000 		.4byte	.LVL19-1
 4137 00e6 0100     		.2byte	0x1
 4138 00e8 50       		.byte	0x50
 4139 00e9 00000000 		.4byte	0
 4140 00ed 00000000 		.4byte	0
 4141              	.LLST8:
 4142 00f1 00000000 		.4byte	.LVL20
 4143 00f5 07000000 		.4byte	.LVL21-1
 4144 00f9 0100     		.2byte	0x1
 4145 00fb 50       		.byte	0x50
 4146 00fc 07000000 		.4byte	.LVL21-1
 4147 0100 14000000 		.4byte	.LVL22
 4148 0104 0100     		.2byte	0x1
 4149 0106 54       		.byte	0x54
 4150 0107 14000000 		.4byte	.LVL22
 4151 010b 24000000 		.4byte	.LFE11
 4152 010f 0400     		.2byte	0x4
 4153 0111 F3       		.byte	0xf3
 4154 0112 01       		.uleb128 0x1
 4155 0113 50       		.byte	0x50
 4156 0114 9F       		.byte	0x9f
 4157 0115 00000000 		.4byte	0
 4158 0119 00000000 		.4byte	0
 4159              	.LLST9:
 4160 011d 08000000 		.4byte	.LVL21
 4161 0121 1D000000 		.4byte	.LVL23-1
 4162 0125 0100     		.2byte	0x1
 4163 0127 50       		.byte	0x50
 4164 0128 00000000 		.4byte	0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 132


 4165 012c 00000000 		.4byte	0
 4166              	.LLST10:
 4167 0130 00000000 		.4byte	.LVL24
 4168 0134 04000000 		.4byte	.LVL25
 4169 0138 0100     		.2byte	0x1
 4170 013a 50       		.byte	0x50
 4171 013b 04000000 		.4byte	.LVL25
 4172 013f 14000000 		.4byte	.LFE12
 4173 0143 0100     		.2byte	0x1
 4174 0145 52       		.byte	0x52
 4175 0146 00000000 		.4byte	0
 4176 014a 00000000 		.4byte	0
 4177              	.LLST11:
 4178 014e 00000000 		.4byte	.LVL30
 4179 0152 04000000 		.4byte	.LVL31
 4180 0156 0100     		.2byte	0x1
 4181 0158 50       		.byte	0x50
 4182 0159 04000000 		.4byte	.LVL31
 4183 015d 14000000 		.4byte	.LFE21
 4184 0161 0400     		.2byte	0x4
 4185 0163 F3       		.byte	0xf3
 4186 0164 01       		.uleb128 0x1
 4187 0165 50       		.byte	0x50
 4188 0166 9F       		.byte	0x9f
 4189 0167 00000000 		.4byte	0
 4190 016b 00000000 		.4byte	0
 4191              	.LLST12:
 4192 016f 00000000 		.4byte	.LVL32
 4193 0173 08000000 		.4byte	.LVL33
 4194 0177 0100     		.2byte	0x1
 4195 0179 50       		.byte	0x50
 4196 017a 08000000 		.4byte	.LVL33
 4197 017e 18000000 		.4byte	.LFE22
 4198 0182 0400     		.2byte	0x4
 4199 0184 F3       		.byte	0xf3
 4200 0185 01       		.uleb128 0x1
 4201 0186 50       		.byte	0x50
 4202 0187 9F       		.byte	0x9f
 4203 0188 00000000 		.4byte	0
 4204 018c 00000000 		.4byte	0
 4205              	.LLST13:
 4206 0190 00000000 		.4byte	.LVL34
 4207 0194 04000000 		.4byte	.LVL35
 4208 0198 0100     		.2byte	0x1
 4209 019a 50       		.byte	0x50
 4210 019b 04000000 		.4byte	.LVL35
 4211 019f 14000000 		.4byte	.LFE23
 4212 01a3 0400     		.2byte	0x4
 4213 01a5 F3       		.byte	0xf3
 4214 01a6 01       		.uleb128 0x1
 4215 01a7 50       		.byte	0x50
 4216 01a8 9F       		.byte	0x9f
 4217 01a9 00000000 		.4byte	0
 4218 01ad 00000000 		.4byte	0
 4219              	.LLST14:
 4220 01b1 00000000 		.4byte	.LVL36
 4221 01b5 04000000 		.4byte	.LVL37
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 133


 4222 01b9 0100     		.2byte	0x1
 4223 01bb 50       		.byte	0x50
 4224 01bc 04000000 		.4byte	.LVL37
 4225 01c0 14000000 		.4byte	.LFE24
 4226 01c4 0400     		.2byte	0x4
 4227 01c6 F3       		.byte	0xf3
 4228 01c7 01       		.uleb128 0x1
 4229 01c8 50       		.byte	0x50
 4230 01c9 9F       		.byte	0x9f
 4231 01ca 00000000 		.4byte	0
 4232 01ce 00000000 		.4byte	0
 4233              	.LLST15:
 4234 01d2 00000000 		.4byte	.LVL38
 4235 01d6 04000000 		.4byte	.LVL39
 4236 01da 0100     		.2byte	0x1
 4237 01dc 50       		.byte	0x50
 4238 01dd 04000000 		.4byte	.LVL39
 4239 01e1 14000000 		.4byte	.LFE25
 4240 01e5 0400     		.2byte	0x4
 4241 01e7 F3       		.byte	0xf3
 4242 01e8 01       		.uleb128 0x1
 4243 01e9 50       		.byte	0x50
 4244 01ea 9F       		.byte	0x9f
 4245 01eb 00000000 		.4byte	0
 4246 01ef 00000000 		.4byte	0
 4247              	.LLST16:
 4248 01f3 00000000 		.4byte	.LVL41
 4249 01f7 0C000000 		.4byte	.LVL43
 4250 01fb 0100     		.2byte	0x1
 4251 01fd 50       		.byte	0x50
 4252 01fe 0C000000 		.4byte	.LVL43
 4253 0202 20000000 		.4byte	.LFE15
 4254 0206 0400     		.2byte	0x4
 4255 0208 F3       		.byte	0xf3
 4256 0209 01       		.uleb128 0x1
 4257 020a 50       		.byte	0x50
 4258 020b 9F       		.byte	0x9f
 4259 020c 00000000 		.4byte	0
 4260 0210 00000000 		.4byte	0
 4261              	.LLST17:
 4262 0214 00000000 		.4byte	.LVL41
 4263 0218 0F000000 		.4byte	.LVL44-1
 4264 021c 0100     		.2byte	0x1
 4265 021e 51       		.byte	0x51
 4266 021f 0F000000 		.4byte	.LVL44-1
 4267 0223 1E000000 		.4byte	.LVL46
 4268 0227 0100     		.2byte	0x1
 4269 0229 55       		.byte	0x55
 4270 022a 1E000000 		.4byte	.LVL46
 4271 022e 20000000 		.4byte	.LFE15
 4272 0232 0400     		.2byte	0x4
 4273 0234 F3       		.byte	0xf3
 4274 0235 01       		.uleb128 0x1
 4275 0236 51       		.byte	0x51
 4276 0237 9F       		.byte	0x9f
 4277 0238 00000000 		.4byte	0
 4278 023c 00000000 		.4byte	0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 134


 4279              	.LLST18:
 4280 0240 00000000 		.4byte	.LVL47
 4281 0244 0A000000 		.4byte	.LVL49
 4282 0248 0100     		.2byte	0x1
 4283 024a 50       		.byte	0x50
 4284 024b 0A000000 		.4byte	.LVL49
 4285 024f 1C000000 		.4byte	.LFE16
 4286 0253 0400     		.2byte	0x4
 4287 0255 F3       		.byte	0xf3
 4288 0256 01       		.uleb128 0x1
 4289 0257 50       		.byte	0x50
 4290 0258 9F       		.byte	0x9f
 4291 0259 00000000 		.4byte	0
 4292 025d 00000000 		.4byte	0
 4293              	.LLST19:
 4294 0261 00000000 		.4byte	.LVL51
 4295 0265 0C000000 		.4byte	.LVL53
 4296 0269 0100     		.2byte	0x1
 4297 026b 50       		.byte	0x50
 4298 026c 0C000000 		.4byte	.LVL53
 4299 0270 22000000 		.4byte	.LFE17
 4300 0274 0400     		.2byte	0x4
 4301 0276 F3       		.byte	0xf3
 4302 0277 01       		.uleb128 0x1
 4303 0278 50       		.byte	0x50
 4304 0279 9F       		.byte	0x9f
 4305 027a 00000000 		.4byte	0
 4306 027e 00000000 		.4byte	0
 4307              	.LLST20:
 4308 0282 00000000 		.4byte	.LVL51
 4309 0286 0F000000 		.4byte	.LVL54-1
 4310 028a 0100     		.2byte	0x1
 4311 028c 51       		.byte	0x51
 4312 028d 0F000000 		.4byte	.LVL54-1
 4313 0291 20000000 		.4byte	.LVL56
 4314 0295 0100     		.2byte	0x1
 4315 0297 55       		.byte	0x55
 4316 0298 20000000 		.4byte	.LVL56
 4317 029c 22000000 		.4byte	.LFE17
 4318 02a0 0400     		.2byte	0x4
 4319 02a2 F3       		.byte	0xf3
 4320 02a3 01       		.uleb128 0x1
 4321 02a4 51       		.byte	0x51
 4322 02a5 9F       		.byte	0x9f
 4323 02a6 00000000 		.4byte	0
 4324 02aa 00000000 		.4byte	0
 4325              	.LLST21:
 4326 02ae 00000000 		.4byte	.LVL57
 4327 02b2 0A000000 		.4byte	.LVL59
 4328 02b6 0100     		.2byte	0x1
 4329 02b8 50       		.byte	0x50
 4330 02b9 0A000000 		.4byte	.LVL59
 4331 02bd 1E000000 		.4byte	.LFE18
 4332 02c1 0400     		.2byte	0x4
 4333 02c3 F3       		.byte	0xf3
 4334 02c4 01       		.uleb128 0x1
 4335 02c5 50       		.byte	0x50
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 135


 4336 02c6 9F       		.byte	0x9f
 4337 02c7 00000000 		.4byte	0
 4338 02cb 00000000 		.4byte	0
 4339              	.LLST22:
 4340 02cf 00000000 		.4byte	.LVL61
 4341 02d3 0C000000 		.4byte	.LVL62
 4342 02d7 0100     		.2byte	0x1
 4343 02d9 50       		.byte	0x50
 4344 02da 0C000000 		.4byte	.LVL62
 4345 02de 4C000000 		.4byte	.LFE19
 4346 02e2 0400     		.2byte	0x4
 4347 02e4 F3       		.byte	0xf3
 4348 02e5 01       		.uleb128 0x1
 4349 02e6 50       		.byte	0x50
 4350 02e7 9F       		.byte	0x9f
 4351 02e8 00000000 		.4byte	0
 4352 02ec 00000000 		.4byte	0
 4353              	.LLST23:
 4354 02f0 00000000 		.4byte	.LVL61
 4355 02f4 0F000000 		.4byte	.LVL63-1
 4356 02f8 0100     		.2byte	0x1
 4357 02fa 51       		.byte	0x51
 4358 02fb 0F000000 		.4byte	.LVL63-1
 4359 02ff 4C000000 		.4byte	.LFE19
 4360 0303 0400     		.2byte	0x4
 4361 0305 F3       		.byte	0xf3
 4362 0306 01       		.uleb128 0x1
 4363 0307 51       		.byte	0x51
 4364 0308 9F       		.byte	0x9f
 4365 0309 00000000 		.4byte	0
 4366 030d 00000000 		.4byte	0
 4367              	.LLST24:
 4368 0311 26000000 		.4byte	.LVL66
 4369 0315 45000000 		.4byte	.LVL72-1
 4370 0319 0100     		.2byte	0x1
 4371 031b 50       		.byte	0x50
 4372 031c 00000000 		.4byte	0
 4373 0320 00000000 		.4byte	0
 4374              	.LLST25:
 4375 0324 22000000 		.4byte	.LVL65
 4376 0328 46000000 		.4byte	.LVL73
 4377 032c 0100     		.2byte	0x1
 4378 032e 55       		.byte	0x55
 4379 032f 00000000 		.4byte	0
 4380 0333 00000000 		.4byte	0
 4381              	.LLST26:
 4382 0337 32000000 		.4byte	.LVL67
 4383 033b 38000000 		.4byte	.LVL68
 4384 033f 0100     		.2byte	0x1
 4385 0341 51       		.byte	0x51
 4386 0342 3A000000 		.4byte	.LVL69
 4387 0346 3C000000 		.4byte	.LVL70
 4388 034a 0100     		.2byte	0x1
 4389 034c 51       		.byte	0x51
 4390 034d 3C000000 		.4byte	.LVL70
 4391 0351 40000000 		.4byte	.LVL71
 4392 0355 0100     		.2byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 136


 4393 0357 53       		.byte	0x53
 4394 0358 40000000 		.4byte	.LVL71
 4395 035c 45000000 		.4byte	.LVL72-1
 4396 0360 0100     		.2byte	0x1
 4397 0362 51       		.byte	0x51
 4398 0363 00000000 		.4byte	0
 4399 0367 00000000 		.4byte	0
 4400              	.LLST27:
 4401 036b 00000000 		.4byte	.LVL74
 4402 036f 0A000000 		.4byte	.LVL75
 4403 0373 0100     		.2byte	0x1
 4404 0375 50       		.byte	0x50
 4405 0376 0A000000 		.4byte	.LVL75
 4406 037a 2C000000 		.4byte	.LFE20
 4407 037e 0400     		.2byte	0x4
 4408 0380 F3       		.byte	0xf3
 4409 0381 01       		.uleb128 0x1
 4410 0382 50       		.byte	0x50
 4411 0383 9F       		.byte	0x9f
 4412 0384 00000000 		.4byte	0
 4413 0388 00000000 		.4byte	0
 4414              	.LLST28:
 4415 038c 24000000 		.4byte	.LVL77
 4416 0390 26000000 		.4byte	.LVL78
 4417 0394 0100     		.2byte	0x1
 4418 0396 50       		.byte	0x50
 4419 0397 00000000 		.4byte	0
 4420 039b 00000000 		.4byte	0
 4421              	.LLST29:
 4422 039f 00000000 		.4byte	.LVL79
 4423 03a3 06000000 		.4byte	.LVL80
 4424 03a7 0100     		.2byte	0x1
 4425 03a9 50       		.byte	0x50
 4426 03aa 06000000 		.4byte	.LVL80
 4427 03ae 26000000 		.4byte	.LVL84
 4428 03b2 0100     		.2byte	0x1
 4429 03b4 54       		.byte	0x54
 4430 03b5 00000000 		.4byte	0
 4431 03b9 00000000 		.4byte	0
 4432              	.LLST30:
 4433 03bd 2A000000 		.4byte	.LVL89
 4434 03c1 3C000000 		.4byte	.LVL91
 4435 03c5 0100     		.2byte	0x1
 4436 03c7 52       		.byte	0x52
 4437 03c8 00000000 		.4byte	0
 4438 03cc 00000000 		.4byte	0
 4439              	.LLST31:
 4440 03d0 12000000 		.4byte	.LVL88
 4441 03d4 A8000000 		.4byte	.LVL104
 4442 03d8 0100     		.2byte	0x1
 4443 03da 55       		.byte	0x55
 4444 03db 00000000 		.4byte	0
 4445 03df 00000000 		.4byte	0
 4446              	.LLST32:
 4447 03e3 38000000 		.4byte	.LVL90
 4448 03e7 58000000 		.4byte	.LVL94
 4449 03eb 0100     		.2byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 137


 4450 03ed 53       		.byte	0x53
 4451 03ee 58000000 		.4byte	.LVL94
 4452 03f2 5C000000 		.4byte	.LVL95
 4453 03f6 0200     		.2byte	0x2
 4454 03f8 74       		.byte	0x74
 4455 03f9 00       		.sleb128 0
 4456 03fa 74000000 		.4byte	.LVL97
 4457 03fe 98000000 		.4byte	.LVL103
 4458 0402 0100     		.2byte	0x1
 4459 0404 56       		.byte	0x56
 4460 0405 00000000 		.4byte	0
 4461 0409 00000000 		.4byte	0
 4462              	.LLST33:
 4463 040d 04000000 		.4byte	.LVL85
 4464 0411 78000000 		.4byte	.LVL98
 4465 0415 0200     		.2byte	0x2
 4466 0417 30       		.byte	0x30
 4467 0418 9F       		.byte	0x9f
 4468 0419 78000000 		.4byte	.LVL98
 4469 041d A8000000 		.4byte	.LVL104
 4470 0421 0100     		.2byte	0x1
 4471 0423 54       		.byte	0x54
 4472 0424 00000000 		.4byte	0
 4473 0428 00000000 		.4byte	0
 4474              	.LLST34:
 4475 042c 00000000 		.4byte	.LVL105
 4476 0430 25000000 		.4byte	.LVL107-1
 4477 0434 0100     		.2byte	0x1
 4478 0436 50       		.byte	0x50
 4479 0437 25000000 		.4byte	.LVL107-1
 4480 043b A0000000 		.4byte	.LVL120
 4481 043f 0100     		.2byte	0x1
 4482 0441 54       		.byte	0x54
 4483 0442 A0000000 		.4byte	.LVL120
 4484 0446 B6000000 		.4byte	.LVL123
 4485 044a 0400     		.2byte	0x4
 4486 044c F3       		.byte	0xf3
 4487 044d 01       		.uleb128 0x1
 4488 044e 50       		.byte	0x50
 4489 044f 9F       		.byte	0x9f
 4490 0450 B6000000 		.4byte	.LVL123
 4491 0454 B8000000 		.4byte	.LVL124
 4492 0458 0100     		.2byte	0x1
 4493 045a 50       		.byte	0x50
 4494 045b B8000000 		.4byte	.LVL124
 4495 045f BC000000 		.4byte	.LVL125
 4496 0463 0100     		.2byte	0x1
 4497 0465 54       		.byte	0x54
 4498 0466 BC000000 		.4byte	.LVL125
 4499 046a D8000000 		.4byte	.LFE10
 4500 046e 0400     		.2byte	0x4
 4501 0470 F3       		.byte	0xf3
 4502 0471 01       		.uleb128 0x1
 4503 0472 50       		.byte	0x50
 4504 0473 9F       		.byte	0x9f
 4505 0474 00000000 		.4byte	0
 4506 0478 00000000 		.4byte	0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 138


 4507              	.LLST35:
 4508 047c 28000000 		.4byte	.LVL108
 4509 0480 44000000 		.4byte	.LVL114
 4510 0484 0200     		.2byte	0x2
 4511 0486 91       		.byte	0x91
 4512 0487 64       		.sleb128 -28
 4513 0488 00000000 		.4byte	0
 4514 048c 00000000 		.4byte	0
 4515              	.LLST36:
 4516 0490 4C000000 		.4byte	.LVL115
 4517 0494 54000000 		.4byte	.LVL116
 4518 0498 0100     		.2byte	0x1
 4519 049a 53       		.byte	0x53
 4520 049b 54000000 		.4byte	.LVL116
 4521 049f 58000000 		.4byte	.LVL117
 4522 04a3 0700     		.2byte	0x7
 4523 04a5 0C       		.byte	0xc
 4524 04a6 0C0F0340 		.4byte	0x40030f0c
 4525 04aa 06       		.byte	0x6
 4526 04ab 9F       		.byte	0x9f
 4527 04ac 00000000 		.4byte	0
 4528 04b0 00000000 		.4byte	0
 4529              	.LLST37:
 4530 04b4 06000000 		.4byte	.LVL106
 4531 04b8 30000000 		.4byte	.LVL110
 4532 04bc 0200     		.2byte	0x2
 4533 04be 30       		.byte	0x30
 4534 04bf 9F       		.byte	0x9f
 4535 04c0 30000000 		.4byte	.LVL110
 4536 04c4 38000000 		.4byte	.LVL112
 4537 04c8 0200     		.2byte	0x2
 4538 04ca 31       		.byte	0x31
 4539 04cb 9F       		.byte	0x9f
 4540 04cc 38000000 		.4byte	.LVL112
 4541 04d0 3A000000 		.4byte	.LVL113
 4542 04d4 0200     		.2byte	0x2
 4543 04d6 30       		.byte	0x30
 4544 04d7 9F       		.byte	0x9f
 4545 04d8 3A000000 		.4byte	.LVL113
 4546 04dc B6000000 		.4byte	.LVL123
 4547 04e0 0100     		.2byte	0x1
 4548 04e2 56       		.byte	0x56
 4549 04e3 B6000000 		.4byte	.LVL123
 4550 04e7 BC000000 		.4byte	.LVL125
 4551 04eb 0200     		.2byte	0x2
 4552 04ed 30       		.byte	0x30
 4553 04ee 9F       		.byte	0x9f
 4554 04ef 00000000 		.4byte	0
 4555 04f3 00000000 		.4byte	0
 4556              	.LLST38:
 4557 04f7 00000000 		.4byte	.LVL126
 4558 04fb 08000000 		.4byte	.LVL127
 4559 04ff 0100     		.2byte	0x1
 4560 0501 50       		.byte	0x50
 4561 0502 08000000 		.4byte	.LVL127
 4562 0506 14000000 		.4byte	.LFE29
 4563 050a 0400     		.2byte	0x4
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 139


 4564 050c F3       		.byte	0xf3
 4565 050d 01       		.uleb128 0x1
 4566 050e 50       		.byte	0x50
 4567 050f 9F       		.byte	0x9f
 4568 0510 00000000 		.4byte	0
 4569 0514 00000000 		.4byte	0
 4570              	.LLST39:
 4571 0518 00000000 		.4byte	.LVL129
 4572 051c 1A000000 		.4byte	.LVL130
 4573 0520 0100     		.2byte	0x1
 4574 0522 50       		.byte	0x50
 4575 0523 1A000000 		.4byte	.LVL130
 4576 0527 4C000000 		.4byte	.LFE30
 4577 052b 0400     		.2byte	0x4
 4578 052d F3       		.byte	0xf3
 4579 052e 01       		.uleb128 0x1
 4580 052f 50       		.byte	0x50
 4581 0530 9F       		.byte	0x9f
 4582 0531 00000000 		.4byte	0
 4583 0535 00000000 		.4byte	0
 4584              	.LLST40:
 4585 0539 00000000 		.4byte	.LVL134
 4586 053d 02000000 		.4byte	.LVL135
 4587 0541 0100     		.2byte	0x1
 4588 0543 50       		.byte	0x50
 4589 0544 02000000 		.4byte	.LVL135
 4590 0548 10000000 		.4byte	.LFE37
 4591 054c 0400     		.2byte	0x4
 4592 054e F3       		.byte	0xf3
 4593 054f 01       		.uleb128 0x1
 4594 0550 50       		.byte	0x50
 4595 0551 9F       		.byte	0x9f
 4596 0552 00000000 		.4byte	0
 4597 0556 00000000 		.4byte	0
 4598              	.LLST41:
 4599 055a 0C000000 		.4byte	.LVL138
 4600 055e 1C000000 		.4byte	.LVL141
 4601 0562 0100     		.2byte	0x1
 4602 0564 54       		.byte	0x54
 4603 0565 1E000000 		.4byte	.LVL142
 4604 0569 22000000 		.4byte	.LVL143
 4605 056d 0100     		.2byte	0x1
 4606 056f 54       		.byte	0x54
 4607 0570 00000000 		.4byte	0
 4608 0574 00000000 		.4byte	0
 4609              	.LLST42:
 4610 0578 02000000 		.4byte	.LVL144
 4611 057c 06000000 		.4byte	.LVL145
 4612 0580 0200     		.2byte	0x2
 4613 0582 30       		.byte	0x30
 4614 0583 9F       		.byte	0x9f
 4615 0584 06000000 		.4byte	.LVL145
 4616 0588 1B000000 		.4byte	.LVL147-1
 4617 058c 0100     		.2byte	0x1
 4618 058e 53       		.byte	0x53
 4619 058f 00000000 		.4byte	0
 4620 0593 00000000 		.4byte	0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 140


 4621              	.LLST43:
 4622 0597 00000000 		.4byte	.LVL154
 4623 059b 06000000 		.4byte	.LVL155
 4624 059f 0100     		.2byte	0x1
 4625 05a1 50       		.byte	0x50
 4626 05a2 06000000 		.4byte	.LVL155
 4627 05a6 10000000 		.4byte	.LFE44
 4628 05aa 0400     		.2byte	0x4
 4629 05ac F3       		.byte	0xf3
 4630 05ad 01       		.uleb128 0x1
 4631 05ae 50       		.byte	0x50
 4632 05af 9F       		.byte	0x9f
 4633 05b0 00000000 		.4byte	0
 4634 05b4 00000000 		.4byte	0
 4635              	.LLST44:
 4636 05b8 00000000 		.4byte	.LVL156
 4637 05bc 02000000 		.4byte	.LVL157
 4638 05c0 0100     		.2byte	0x1
 4639 05c2 50       		.byte	0x50
 4640 05c3 02000000 		.4byte	.LVL157
 4641 05c7 0C000000 		.4byte	.LFE45
 4642 05cb 0400     		.2byte	0x4
 4643 05cd F3       		.byte	0xf3
 4644 05ce 01       		.uleb128 0x1
 4645 05cf 50       		.byte	0x50
 4646 05d0 9F       		.byte	0x9f
 4647 05d1 00000000 		.4byte	0
 4648 05d5 00000000 		.4byte	0
 4649              		.section	.debug_aranges,"",%progbits
 4650 0000 8C010000 		.4byte	0x18c
 4651 0004 0200     		.2byte	0x2
 4652 0006 00000000 		.4byte	.Ldebug_info0
 4653 000a 04       		.byte	0x4
 4654 000b 00       		.byte	0
 4655 000c 0000     		.2byte	0
 4656 000e 0000     		.2byte	0
 4657 0010 00000000 		.4byte	.LFB1
 4658 0014 14000000 		.4byte	.LFE1-.LFB1
 4659 0018 00000000 		.4byte	.LFB4
 4660 001c 4C000000 		.4byte	.LFE4-.LFB4
 4661 0020 00000000 		.4byte	.LFB2
 4662 0024 18000000 		.4byte	.LFE2-.LFB2
 4663 0028 00000000 		.4byte	.LFB5
 4664 002c 14000000 		.4byte	.LFE5-.LFB5
 4665 0030 00000000 		.4byte	.LFB6
 4666 0034 20000000 		.4byte	.LFE6-.LFB6
 4667 0038 00000000 		.4byte	.LFB7
 4668 003c 34000000 		.4byte	.LFE7-.LFB7
 4669 0040 00000000 		.4byte	.LFB8
 4670 0044 1C000000 		.4byte	.LFE8-.LFB8
 4671 0048 00000000 		.4byte	.LFB9
 4672 004c 24000000 		.4byte	.LFE9-.LFB9
 4673 0050 00000000 		.4byte	.LFB11
 4674 0054 24000000 		.4byte	.LFE11-.LFB11
 4675 0058 00000000 		.4byte	.LFB12
 4676 005c 14000000 		.4byte	.LFE12-.LFB12
 4677 0060 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 141


 4678 0064 10000000 		.4byte	.LFE13-.LFB13
 4679 0068 00000000 		.4byte	.LFB14
 4680 006c 0C000000 		.4byte	.LFE14-.LFB14
 4681 0070 00000000 		.4byte	.LFB21
 4682 0074 14000000 		.4byte	.LFE21-.LFB21
 4683 0078 00000000 		.4byte	.LFB22
 4684 007c 18000000 		.4byte	.LFE22-.LFB22
 4685 0080 00000000 		.4byte	.LFB23
 4686 0084 14000000 		.4byte	.LFE23-.LFB23
 4687 0088 00000000 		.4byte	.LFB24
 4688 008c 14000000 		.4byte	.LFE24-.LFB24
 4689 0090 00000000 		.4byte	.LFB25
 4690 0094 14000000 		.4byte	.LFE25-.LFB25
 4691 0098 00000000 		.4byte	.LFB26
 4692 009c 04000000 		.4byte	.LFE26-.LFB26
 4693 00a0 00000000 		.4byte	.LFB15
 4694 00a4 20000000 		.4byte	.LFE15-.LFB15
 4695 00a8 00000000 		.4byte	.LFB16
 4696 00ac 1C000000 		.4byte	.LFE16-.LFB16
 4697 00b0 00000000 		.4byte	.LFB17
 4698 00b4 22000000 		.4byte	.LFE17-.LFB17
 4699 00b8 00000000 		.4byte	.LFB18
 4700 00bc 1E000000 		.4byte	.LFE18-.LFB18
 4701 00c0 00000000 		.4byte	.LFB19
 4702 00c4 4C000000 		.4byte	.LFE19-.LFB19
 4703 00c8 00000000 		.4byte	.LFB20
 4704 00cc 2C000000 		.4byte	.LFE20-.LFB20
 4705 00d0 00000000 		.4byte	.LFB27
 4706 00d4 18000000 		.4byte	.LFE27-.LFB27
 4707 00d8 00000000 		.4byte	.LFB28
 4708 00dc 30000000 		.4byte	.LFE28-.LFB28
 4709 00e0 00000000 		.4byte	.LFB3
 4710 00e4 D0000000 		.4byte	.LFE3-.LFB3
 4711 00e8 00000000 		.4byte	.LFB10
 4712 00ec D8000000 		.4byte	.LFE10-.LFB10
 4713 00f0 00000000 		.4byte	.LFB29
 4714 00f4 14000000 		.4byte	.LFE29-.LFB29
 4715 00f8 00000000 		.4byte	.LFB30
 4716 00fc 4C000000 		.4byte	.LFE30-.LFB30
 4717 0100 00000000 		.4byte	.LFB34
 4718 0104 10000000 		.4byte	.LFE34-.LFB34
 4719 0108 00000000 		.4byte	.LFB35
 4720 010c 10000000 		.4byte	.LFE35-.LFB35
 4721 0110 00000000 		.4byte	.LFB33
 4722 0114 18000000 		.4byte	.LFE33-.LFB33
 4723 0118 00000000 		.4byte	.LFB36
 4724 011c 10000000 		.4byte	.LFE36-.LFB36
 4725 0120 00000000 		.4byte	.LFB37
 4726 0124 10000000 		.4byte	.LFE37-.LFB37
 4727 0128 00000000 		.4byte	.LFB38
 4728 012c 10000000 		.4byte	.LFE38-.LFB38
 4729 0130 00000000 		.4byte	.LFB39
 4730 0134 10000000 		.4byte	.LFE39-.LFB39
 4731 0138 00000000 		.4byte	.LFB40
 4732 013c 20000000 		.4byte	.LFE40-.LFB40
 4733 0140 00000000 		.4byte	.LFB41
 4734 0144 10000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 142


 4735 0148 00000000 		.4byte	.LFB42
 4736 014c 10000000 		.4byte	.LFE42-.LFB42
 4737 0150 00000000 		.4byte	.LFB46
 4738 0154 28000000 		.4byte	.LFE46-.LFB46
 4739 0158 00000000 		.4byte	.LFB43
 4740 015c 0C000000 		.4byte	.LFE43-.LFB43
 4741 0160 00000000 		.4byte	.LFB32
 4742 0164 44000000 		.4byte	.LFE32-.LFB32
 4743 0168 00000000 		.4byte	.LFB31
 4744 016c 20000000 		.4byte	.LFE31-.LFB31
 4745 0170 00000000 		.4byte	.LFB44
 4746 0174 10000000 		.4byte	.LFE44-.LFB44
 4747 0178 00000000 		.4byte	.LFB45
 4748 017c 0C000000 		.4byte	.LFE45-.LFB45
 4749 0180 00000000 		.4byte	.LFB47
 4750 0184 70000000 		.4byte	.LFE47-.LFB47
 4751 0188 00000000 		.4byte	0
 4752 018c 00000000 		.4byte	0
 4753              		.section	.debug_ranges,"",%progbits
 4754              	.Ldebug_ranges0:
 4755 0000 00000000 		.4byte	.LFB1
 4756 0004 14000000 		.4byte	.LFE1
 4757 0008 00000000 		.4byte	.LFB4
 4758 000c 4C000000 		.4byte	.LFE4
 4759 0010 00000000 		.4byte	.LFB2
 4760 0014 18000000 		.4byte	.LFE2
 4761 0018 00000000 		.4byte	.LFB5
 4762 001c 14000000 		.4byte	.LFE5
 4763 0020 00000000 		.4byte	.LFB6
 4764 0024 20000000 		.4byte	.LFE6
 4765 0028 00000000 		.4byte	.LFB7
 4766 002c 34000000 		.4byte	.LFE7
 4767 0030 00000000 		.4byte	.LFB8
 4768 0034 1C000000 		.4byte	.LFE8
 4769 0038 00000000 		.4byte	.LFB9
 4770 003c 24000000 		.4byte	.LFE9
 4771 0040 00000000 		.4byte	.LFB11
 4772 0044 24000000 		.4byte	.LFE11
 4773 0048 00000000 		.4byte	.LFB12
 4774 004c 14000000 		.4byte	.LFE12
 4775 0050 00000000 		.4byte	.LFB13
 4776 0054 10000000 		.4byte	.LFE13
 4777 0058 00000000 		.4byte	.LFB14
 4778 005c 0C000000 		.4byte	.LFE14
 4779 0060 00000000 		.4byte	.LFB21
 4780 0064 14000000 		.4byte	.LFE21
 4781 0068 00000000 		.4byte	.LFB22
 4782 006c 18000000 		.4byte	.LFE22
 4783 0070 00000000 		.4byte	.LFB23
 4784 0074 14000000 		.4byte	.LFE23
 4785 0078 00000000 		.4byte	.LFB24
 4786 007c 14000000 		.4byte	.LFE24
 4787 0080 00000000 		.4byte	.LFB25
 4788 0084 14000000 		.4byte	.LFE25
 4789 0088 00000000 		.4byte	.LFB26
 4790 008c 04000000 		.4byte	.LFE26
 4791 0090 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 143


 4792 0094 20000000 		.4byte	.LFE15
 4793 0098 00000000 		.4byte	.LFB16
 4794 009c 1C000000 		.4byte	.LFE16
 4795 00a0 00000000 		.4byte	.LFB17
 4796 00a4 22000000 		.4byte	.LFE17
 4797 00a8 00000000 		.4byte	.LFB18
 4798 00ac 1E000000 		.4byte	.LFE18
 4799 00b0 00000000 		.4byte	.LFB19
 4800 00b4 4C000000 		.4byte	.LFE19
 4801 00b8 00000000 		.4byte	.LFB20
 4802 00bc 2C000000 		.4byte	.LFE20
 4803 00c0 00000000 		.4byte	.LFB27
 4804 00c4 18000000 		.4byte	.LFE27
 4805 00c8 00000000 		.4byte	.LFB28
 4806 00cc 30000000 		.4byte	.LFE28
 4807 00d0 00000000 		.4byte	.LFB3
 4808 00d4 D0000000 		.4byte	.LFE3
 4809 00d8 00000000 		.4byte	.LFB10
 4810 00dc D8000000 		.4byte	.LFE10
 4811 00e0 00000000 		.4byte	.LFB29
 4812 00e4 14000000 		.4byte	.LFE29
 4813 00e8 00000000 		.4byte	.LFB30
 4814 00ec 4C000000 		.4byte	.LFE30
 4815 00f0 00000000 		.4byte	.LFB34
 4816 00f4 10000000 		.4byte	.LFE34
 4817 00f8 00000000 		.4byte	.LFB35
 4818 00fc 10000000 		.4byte	.LFE35
 4819 0100 00000000 		.4byte	.LFB33
 4820 0104 18000000 		.4byte	.LFE33
 4821 0108 00000000 		.4byte	.LFB36
 4822 010c 10000000 		.4byte	.LFE36
 4823 0110 00000000 		.4byte	.LFB37
 4824 0114 10000000 		.4byte	.LFE37
 4825 0118 00000000 		.4byte	.LFB38
 4826 011c 10000000 		.4byte	.LFE38
 4827 0120 00000000 		.4byte	.LFB39
 4828 0124 10000000 		.4byte	.LFE39
 4829 0128 00000000 		.4byte	.LFB40
 4830 012c 20000000 		.4byte	.LFE40
 4831 0130 00000000 		.4byte	.LFB41
 4832 0134 10000000 		.4byte	.LFE41
 4833 0138 00000000 		.4byte	.LFB42
 4834 013c 10000000 		.4byte	.LFE42
 4835 0140 00000000 		.4byte	.LFB46
 4836 0144 28000000 		.4byte	.LFE46
 4837 0148 00000000 		.4byte	.LFB43
 4838 014c 0C000000 		.4byte	.LFE43
 4839 0150 00000000 		.4byte	.LFB32
 4840 0154 44000000 		.4byte	.LFE32
 4841 0158 00000000 		.4byte	.LFB31
 4842 015c 20000000 		.4byte	.LFE31
 4843 0160 00000000 		.4byte	.LFB44
 4844 0164 10000000 		.4byte	.LFE44
 4845 0168 00000000 		.4byte	.LFB45
 4846 016c 0C000000 		.4byte	.LFE45
 4847 0170 00000000 		.4byte	.LFB47
 4848 0174 70000000 		.4byte	.LFE47
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 144


 4849 0178 00000000 		.4byte	0
 4850 017c 00000000 		.4byte	0
 4851              		.section	.debug_line,"",%progbits
 4852              	.Ldebug_line0:
 4853 0000 D8040000 		.section	.debug_str,"MS",%progbits,1
 4853      02006700 
 4853      00000201 
 4853      FB0E0D00 
 4853      01010101 
 4854              	.LASF52:
 4855 0000 72616D56 		.ascii	"ramVectorTable\000"
 4855      6563746F 
 4855      72546162 
 4855      6C6500
 4856              	.LASF10:
 4857 000f 75696E74 		.ascii	"uint16\000"
 4857      313600
 4858              	.LASF39:
 4859 0016 696E7453 		.ascii	"intState\000"
 4859      74617465 
 4859      00
 4860              	.LASF23:
 4861 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4861      73436C6B 
 4861      57726974 
 4861      65486663 
 4861      6C6B4469 
 4862              	.LASF102:
 4863 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4863      73436C6B 
 4863      50756D70 
 4863      436F6E66 
 4863      696700
 4864              	.LASF27:
 4865 004b 43795379 		.ascii	"CySysEnablePumpClock\000"
 4865      73456E61 
 4865      626C6550 
 4865      756D7043 
 4865      6C6F636B 
 4866              	.LASF92:
 4867 0060 72657456 		.ascii	"retVal\000"
 4867      616C00
 4868              	.LASF38:
 4869 0067 43794469 		.ascii	"CyDisableInts\000"
 4869      7361626C 
 4869      65496E74 
 4869      7300
 4870              	.LASF7:
 4871 0075 6C6F6E67 		.ascii	"long long unsigned int\000"
 4871      206C6F6E 
 4871      6720756E 
 4871      7369676E 
 4871      65642069 
 4872              	.LASF101:
 4873 008c 43795379 		.ascii	"CySysTickInitVar\000"
 4873      73546963 
 4873      6B496E69 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 145


 4873      74566172 
 4873      00
 4874              	.LASF40:
 4875 009d 4379456E 		.ascii	"CyEnableInts\000"
 4875      61626C65 
 4875      496E7473 
 4875      00
 4876              	.LASF106:
 4877 00aa 43795379 		.ascii	"CySysClkWcoEnabled\000"
 4877      73436C6B 
 4877      57636F45 
 4877      6E61626C 
 4877      656400
 4878              	.LASF62:
 4879 00bd 4379536F 		.ascii	"CySoftwareReset\000"
 4879      66747761 
 4879      72655265 
 4879      73657400 
 4880              	.LASF76:
 4881 00cd 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4881      73546963 
 4881      6B456E61 
 4881      626C6549 
 4881      6E746572 
 4882              	.LASF44:
 4883 00e6 4379496E 		.ascii	"CyIntGetState\000"
 4883      74476574 
 4883      53746174 
 4883      6500
 4884              	.LASF6:
 4885 00f4 6C6F6E67 		.ascii	"long long int\000"
 4885      206C6F6E 
 4885      6720696E 
 4885      7400
 4886              	.LASF0:
 4887 0102 7369676E 		.ascii	"signed char\000"
 4887      65642063 
 4887      68617200 
 4888              	.LASF24:
 4889 010e 66726571 		.ascii	"freq\000"
 4889      00
 4890              	.LASF74:
 4891 0113 43794465 		.ascii	"CyDelayFreq\000"
 4891      6C617946 
 4891      72657100 
 4892              	.LASF25:
 4893 011f 696E7465 		.ascii	"interruptState\000"
 4893      72727570 
 4893      74537461 
 4893      746500
 4894              	.LASF67:
 4895 012e 6C664C69 		.ascii	"lfLimit\000"
 4895      6D697400 
 4896              	.LASF81:
 4897 0136 43795379 		.ascii	"CySysTickGetReload\000"
 4897      73546963 
 4897      6B476574 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 146


 4897      52656C6F 
 4897      616400
 4898              	.LASF80:
 4899 0149 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 4899      73436C6B 
 4899      496D6F47 
 4899      65745763 
 4899      6F4C6F63 
 4900              	.LASF71:
 4901 015f 77636F4C 		.ascii	"wcoLock\000"
 4901      6F636B00 
 4902              	.LASF4:
 4903 0167 6C6F6E67 		.ascii	"long int\000"
 4903      20696E74 
 4903      00
 4904              	.LASF45:
 4905 0170 4379496E 		.ascii	"CyIntDisable\000"
 4905      74446973 
 4905      61626C65 
 4905      00
 4906              	.LASF93:
 4907 017d 43795379 		.ascii	"CySysTickGetCallback\000"
 4907      73546963 
 4907      6B476574 
 4907      43616C6C 
 4907      6261636B 
 4908              	.LASF9:
 4909 0192 75696E74 		.ascii	"uint8\000"
 4909      3800
 4910              	.LASF98:
 4911 0198 63796465 		.ascii	"cydelayFreqKhz\000"
 4911      6C617946 
 4911      7265714B 
 4911      687A00
 4912              	.LASF29:
 4913 01a7 656E6162 		.ascii	"enable\000"
 4913      6C6500
 4914              	.LASF13:
 4915 01ae 646F7562 		.ascii	"double\000"
 4915      6C6500
 4916              	.LASF58:
 4917 01b5 73686966 		.ascii	"shift\000"
 4917      7400
 4918              	.LASF11:
 4919 01bb 75696E74 		.ascii	"uint32\000"
 4919      333200
 4920              	.LASF41:
 4921 01c2 6D61736B 		.ascii	"mask\000"
 4921      00
 4922              	.LASF34:
 4923 01c7 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4923      73436C6B 
 4923      47657453 
 4923      7973636C 
 4923      6B536F75 
 4924              	.LASF65:
 4925 01df 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 147


 4925      73436C6B 
 4925      496D6F45 
 4925      6E61626C 
 4925      6557636F 
 4926              	.LASF60:
 4927 01f8 4379496E 		.ascii	"CyIntGetPriority\000"
 4927      74476574 
 4927      5072696F 
 4927      72697479 
 4927      00
 4928              	.LASF100:
 4929 0209 63796465 		.ascii	"cydelay32kMs\000"
 4929      6C617933 
 4929      326B4D73 
 4929      00
 4930              	.LASF88:
 4931 0216 43795379 		.ascii	"CySysTickInit\000"
 4931      73546963 
 4931      6B496E69 
 4931      7400
 4932              	.LASF59:
 4933 0224 76616C75 		.ascii	"value\000"
 4933      6500
 4934              	.LASF84:
 4935 022a 636C6F63 		.ascii	"clockSource\000"
 4935      6B536F75 
 4935      72636500 
 4936              	.LASF94:
 4937 0236 43794765 		.ascii	"CyGetUniqueId\000"
 4937      74556E69 
 4937      71756549 
 4937      6400
 4938              	.LASF86:
 4939 0244 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4939      73546963 
 4939      6B476574 
 4939      436F756E 
 4939      74466C61 
 4940              	.LASF8:
 4941 025a 756E7369 		.ascii	"unsigned int\000"
 4941      676E6564 
 4941      20696E74 
 4941      00
 4942              	.LASF87:
 4943 0267 43795379 		.ascii	"CySysTickClear\000"
 4943      73546963 
 4943      6B436C65 
 4943      617200
 4944              	.LASF5:
 4945 0276 6C6F6E67 		.ascii	"long unsigned int\000"
 4945      20756E73 
 4945      69676E65 
 4945      6420696E 
 4945      7400
 4946              	.LASF22:
 4947 0288 43795379 		.ascii	"CySysClkImoStop\000"
 4947      73436C6B 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 148


 4947      496D6F53 
 4947      746F7000 
 4948              	.LASF64:
 4949 0298 6D696C6C 		.ascii	"milliseconds\000"
 4949      69736563 
 4949      6F6E6473 
 4949      00
 4950              	.LASF46:
 4951 02a5 4379496E 		.ascii	"CyIntSetPending\000"
 4951      74536574 
 4951      50656E64 
 4951      696E6700 
 4952              	.LASF35:
 4953 02b5 43795379 		.ascii	"CySysGetResetReason\000"
 4953      73476574 
 4953      52657365 
 4953      74526561 
 4953      736F6E00 
 4954              	.LASF3:
 4955 02c9 73686F72 		.ascii	"short unsigned int\000"
 4955      7420756E 
 4955      7369676E 
 4955      65642069 
 4955      6E7400
 4956              	.LASF66:
 4957 02dc 72656754 		.ascii	"regTmp\000"
 4957      6D7000
 4958              	.LASF83:
 4959 02e3 43795379 		.ascii	"CySysTickSetClockSource\000"
 4959      73546963 
 4959      6B536574 
 4959      436C6F63 
 4959      6B536F75 
 4960              	.LASF54:
 4961 02fb 4379496E 		.ascii	"CyIntSetVector\000"
 4961      74536574 
 4961      56656374 
 4961      6F7200
 4962              	.LASF43:
 4963 030a 6E756D62 		.ascii	"number\000"
 4963      657200
 4964              	.LASF103:
 4965 0311 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4965      74657243 
 4965      72697469 
 4965      63616C53 
 4965      65637469 
 4966              	.LASF57:
 4967 0328 7072696F 		.ascii	"priority\000"
 4967      72697479 
 4967      00
 4968              	.LASF69:
 4969 0331 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4969      73436C6B 
 4969      57726974 
 4969      65496D6F 
 4969      46726571 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 149


 4970              	.LASF49:
 4971 0346 4379496E 		.ascii	"CyIntSetSysVector\000"
 4971      74536574 
 4971      53797356 
 4971      6563746F 
 4971      7200
 4972              	.LASF21:
 4973 0358 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 4973      73436C6B 
 4973      496D6F44 
 4973      69736162 
 4973      6C655763 
 4974              	.LASF16:
 4975 0372 72656733 		.ascii	"reg32\000"
 4975      3200
 4976              	.LASF89:
 4977 0378 43795379 		.ascii	"CySysTickStart\000"
 4977      73546963 
 4977      6B537461 
 4977      727400
 4978              	.LASF37:
 4979 0387 72657475 		.ascii	"returnStatus\000"
 4979      726E5374 
 4979      61747573 
 4979      00
 4980              	.LASF19:
 4981 0394 73697A65 		.ascii	"sizetype\000"
 4981      74797065 
 4981      00
 4982              	.LASF47:
 4983 039d 4379496E 		.ascii	"CyIntClearPending\000"
 4983      74436C65 
 4983      61725065 
 4983      6E64696E 
 4983      6700
 4984              	.LASF18:
 4985 03af 6C6F6E67 		.ascii	"long double\000"
 4985      20646F75 
 4985      626C6500 
 4986              	.LASF50:
 4987 03bb 61646472 		.ascii	"address\000"
 4987      65737300 
 4988              	.LASF30:
 4989 03c3 73797363 		.ascii	"sysclkSource\000"
 4989      6C6B536F 
 4989      75726365 
 4989      00
 4990              	.LASF91:
 4991 03d0 66756E63 		.ascii	"function\000"
 4991      74696F6E 
 4991      00
 4992              	.LASF82:
 4993 03d9 43795379 		.ascii	"CySysTickGetValue\000"
 4993      73546963 
 4993      6B476574 
 4993      56616C75 
 4993      6500
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 150


 4994              	.LASF97:
 4995 03eb 63796465 		.ascii	"cydelayFreqHz\000"
 4995      6C617946 
 4995      72657148 
 4995      7A00
 4996              	.LASF56:
 4997 03f9 4379496E 		.ascii	"CyIntSetPriority\000"
 4997      74536574 
 4997      5072696F 
 4997      72697479 
 4997      00
 4998              	.LASF12:
 4999 040a 666C6F61 		.ascii	"float\000"
 4999      7400
 5000              	.LASF104:
 5001 0410 43794578 		.ascii	"CyExitCriticalSection\000"
 5001      69744372 
 5001      69746963 
 5001      616C5365 
 5001      6374696F 
 5002              	.LASF20:
 5003 0426 63795379 		.ascii	"cySysTickCallback\000"
 5003      73546963 
 5003      6B43616C 
 5003      6C626163 
 5003      6B00
 5004              	.LASF55:
 5005 0438 4379496E 		.ascii	"CyIntGetVector\000"
 5005      74476574 
 5005      56656374 
 5005      6F7200
 5006              	.LASF110:
 5007 0447 433A5C55 		.ascii	"C:\\Users\\d3bug\\Documents\\Creator\\nRF24_Example"
 5007      73657273 
 5007      5C643362 
 5007      75675C44 
 5007      6F63756D 
 5008 0475 5F50726F 		.ascii	"_Projects\\00_Basic_Rx.cydsn\000"
 5008      6A656374 
 5008      735C3030 
 5008      5F426173 
 5008      69635F52 
 5009              	.LASF105:
 5010 0491 43794465 		.ascii	"CyDelayCycles\000"
 5010      6C617943 
 5010      79636C65 
 5010      7300
 5011              	.LASF15:
 5012 049f 72656738 		.ascii	"reg8\000"
 5012      00
 5013              	.LASF48:
 5014 04a4 43794861 		.ascii	"CyHalt\000"
 5014      6C7400
 5015              	.LASF1:
 5016 04ab 756E7369 		.ascii	"unsigned char\000"
 5016      676E6564 
 5016      20636861 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 151


 5016      7200
 5017              	.LASF2:
 5018 04b9 73686F72 		.ascii	"short int\000"
 5018      7420696E 
 5018      7400
 5019              	.LASF42:
 5020 04c3 4379496E 		.ascii	"CyIntEnable\000"
 5020      74456E61 
 5020      626C6500 
 5021              	.LASF53:
 5022 04cf 4379496E 		.ascii	"CyIntGetSysVector\000"
 5022      74476574 
 5022      53797356 
 5022      6563746F 
 5022      7200
 5023              	.LASF28:
 5024 04e1 636C6B53 		.ascii	"clkSelect\000"
 5024      656C6563 
 5024      7400
 5025              	.LASF72:
 5026 04eb 43794465 		.ascii	"CyDelayUs\000"
 5026      6C617955 
 5026      7300
 5027              	.LASF36:
 5028 04f5 72656173 		.ascii	"reason\000"
 5028      6F6E00
 5029              	.LASF108:
 5030 04fc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5030      43313120 
 5030      352E342E 
 5030      31203230 
 5030      31363036 
 5031 052f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5031      20726576 
 5031      6973696F 
 5031      6E203233 
 5031      37373135 
 5032 0562 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5032      67202D66 
 5032      66756E63 
 5032      74696F6E 
 5032      2D736563 
 5033              	.LASF14:
 5034 058e 63686172 		.ascii	"char\000"
 5034      00
 5035              	.LASF17:
 5036 0593 63796973 		.ascii	"cyisraddress\000"
 5036      72616464 
 5036      72657373 
 5036      00
 5037              	.LASF77:
 5038 05a0 43795379 		.ascii	"CySysTickEnable\000"
 5038      73546963 
 5038      6B456E61 
 5038      626C6500 
 5039              	.LASF33:
 5040 05b0 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 152


 5040      73436C6B 
 5040      57726974 
 5040      65486663 
 5040      6C6B4469 
 5041              	.LASF31:
 5042 05c6 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5042      73436C6B 
 5042      57726974 
 5042      65537973 
 5042      636C6B44 
 5043              	.LASF90:
 5044 05dd 43795379 		.ascii	"CySysTickSetCallback\000"
 5044      73546963 
 5044      6B536574 
 5044      43616C6C 
 5044      6261636B 
 5045              	.LASF96:
 5046 05f2 43795379 		.ascii	"CySysTickCallbacks\000"
 5046      73546963 
 5046      6B43616C 
 5046      6C626163 
 5046      6B7300
 5047              	.LASF70:
 5048 0605 696D6F54 		.ascii	"imoTrim1Value\000"
 5048      72696D31 
 5048      56616C75 
 5048      6500
 5049              	.LASF95:
 5050 0613 756E6971 		.ascii	"uniqueId\000"
 5050      75654964 
 5050      00
 5051              	.LASF68:
 5052 061c 666C6173 		.ascii	"flashCtlReg\000"
 5052      6843746C 
 5052      52656700 
 5053              	.LASF63:
 5054 0628 43794465 		.ascii	"CyDelay\000"
 5054      6C617900 
 5055              	.LASF85:
 5056 0630 43795379 		.ascii	"CySysTickGetClockSource\000"
 5056      73546963 
 5056      6B476574 
 5056      436C6F63 
 5056      6B536F75 
 5057              	.LASF78:
 5058 0648 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5058      73546963 
 5058      6B446973 
 5058      61626C65 
 5058      496E7465 
 5059              	.LASF51:
 5060 0662 6F6C6449 		.ascii	"oldIsr\000"
 5060      737200
 5061              	.LASF99:
 5062 0669 63796465 		.ascii	"cydelayFreqMhz\000"
 5062      6C617946 
 5062      7265714D 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccVAN9Xq.s 			page 153


 5062      687A00
 5063              	.LASF75:
 5064 0678 43795379 		.ascii	"CySysTickStop\000"
 5064      73546963 
 5064      6B53746F 
 5064      7000
 5065              	.LASF32:
 5066 0686 64697669 		.ascii	"divider\000"
 5066      64657200 
 5067              	.LASF61:
 5068 068e 43795379 		.ascii	"CySysClkImoStart\000"
 5068      73436C6B 
 5068      496D6F53 
 5068      74617274 
 5068      00
 5069              	.LASF107:
 5070 069f 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5070      73466C61 
 5070      73685365 
 5070      74576169 
 5070      74437963 
 5071              	.LASF109:
 5072 06b7 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5072      72617465 
 5072      645F536F 
 5072      75726365 
 5072      5C50536F 
 5073              	.LASF73:
 5074 06d6 6D696372 		.ascii	"microseconds\000"
 5074      6F736563 
 5074      6F6E6473 
 5074      00
 5075              	.LASF26:
 5076 06e3 746D7052 		.ascii	"tmpReg\000"
 5076      656700
 5077              	.LASF79:
 5078 06ea 43795379 		.ascii	"CySysTickSetReload\000"
 5078      73546963 
 5078      6B536574 
 5078      52656C6F 
 5078      616400
 5079              	.LASF111:
 5080 06fd 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5080      73546963 
 5080      6B536572 
 5080      76696365 
 5080      43616C6C 
 5081              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
