ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 124 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 30000340 		.word	1073938480
  47              		.cfi_endproc
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 4


  48              	.LFE1:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoDisableWcoLock
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoDisableWcoLock, %function
  56              	CySysClkImoDisableWcoLock:
  57              	.LFB4:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 5


 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 6


 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 7


 286:Generated_Source\PSoC4/CyLib.c ****     {
  58              		.loc 1 286 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  63              		.loc 1 287 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1168     		ldr	r1, [r2]
  66 0004 024B     		ldr	r3, .L5+4
  67 0006 0B40     		ands	r3, r1
  68 0008 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/CyLib.c ****     }
  69              		.loc 1 288 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 00000740 		.word	1074200576
  76 0010 FFFFFFBF 		.word	-1073741825
  77              		.cfi_endproc
  78              	.LFE4:
  79              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  80              		.section	.text.CySysClkImoStop,"ax",%progbits
  81              		.align	2
  82              		.global	CySysClkImoStop
  83              		.code	16
  84              		.thumb_func
  85              		.type	CySysClkImoStop, %function
  86              	CySysClkImoStop:
  87              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  88              		.loc 1 140 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  96              		.loc 1 142 0
  97 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  98              	.LVL0:
 149:Generated_Source\PSoC4/CyLib.c **** }
  99              		.loc 1 149 0
 100 0006 034A     		ldr	r2, .L8
 101 0008 1368     		ldr	r3, [r2]
 102 000a 5B00     		lsls	r3, r3, #1
 103 000c 5B08     		lsrs	r3, r3, #1
 104 000e 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 105              		.loc 1 150 0
 106              		@ sp needed
 107 0010 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 8


 108              	.L9:
 109 0012 C046     		.align	2
 110              	.L8:
 111 0014 30000340 		.word	1073938480
 112              		.cfi_endproc
 113              	.LFE2:
 114              		.size	CySysClkImoStop, .-CySysClkImoStop
 115              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 116              		.align	2
 117              		.global	CySysClkImoGetWcoLock
 118              		.code	16
 119              		.thumb_func
 120              		.type	CySysClkImoGetWcoLock, %function
 121              	CySysClkImoGetWcoLock:
 122              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 123              		.loc 1 305 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 128              		.loc 1 306 0
 129 0000 034B     		ldr	r3, .L12
 130 0002 1868     		ldr	r0, [r3]
 131 0004 8023     		movs	r3, #128
 132 0006 DB05     		lsls	r3, r3, #23
 133 0008 1840     		ands	r0, r3
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 134              		.loc 1 307 0
 135 000a 00D0     		beq	.L11
 136 000c 0120     		movs	r0, #1
 137              	.L11:
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 138              		.loc 1 309 0
 139              		@ sp needed
 140 000e 7047     		bx	lr
 141              	.L13:
 142              		.align	2
 143              	.L12:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 9


 144 0010 00000740 		.word	1074200576
 145              		.cfi_endproc
 146              	.LFE5:
 147              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 148              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 149              		.align	2
 150              		.global	CySysClkWriteHfclkDirect
 151              		.code	16
 152              		.thumb_func
 153              		.type	CySysClkWriteHfclkDirect, %function
 154              	CySysClkWriteHfclkDirect:
 155              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 10


 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 11


 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 156              		.loc 1 430 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              	.LVL1:
 161 0000 10B5     		push	{r4, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 4, -8
 164              		.cfi_offset 14, -4
 165 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 166              		.loc 1 434 0
 167 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 168              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 169              		.loc 1 437 0
 170 0008 044A     		ldr	r2, .L15
 171 000a 1368     		ldr	r3, [r2]
 172 000c 0321     		movs	r1, #3
 173 000e 8B43     		bics	r3, r1
 174              	.LVL3:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 175              		.loc 1 448 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 12


 176 0010 0C40     		ands	r4, r1
 177              	.LVL4:
 178 0012 1C43     		orrs	r4, r3
 179              	.LVL5:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 180              		.loc 1 451 0
 181 0014 1460     		str	r4, [r2]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 182              		.loc 1 453 0
 183 0016 FFF7FEFF 		bl	CyExitCriticalSection
 184              	.LVL6:
 454:Generated_Source\PSoC4/CyLib.c **** }
 185              		.loc 1 454 0
 186              		@ sp needed
 187              	.LVL7:
 188 001a 10BD     		pop	{r4, pc}
 189              	.L16:
 190              		.align	2
 191              	.L15:
 192 001c 28000340 		.word	1073938472
 193              		.cfi_endproc
 194              	.LFE6:
 195              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 196              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 197              		.align	2
 198              		.global	CySysEnablePumpClock
 199              		.code	16
 200              		.thumb_func
 201              		.type	CySysEnablePumpClock, %function
 202              	CySysEnablePumpClock:
 203              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 204              		.loc 1 474 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 13


 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              	.LVL8:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 210              		.loc 1 487 0
 211 0000 C307     		lsls	r3, r0, #31
 212 0002 07D5     		bpl	.L18
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 213              		.loc 1 489 0
 214 0004 094A     		ldr	r2, .L20
 215 0006 1168     		ldr	r1, [r2]
 216 0008 094B     		ldr	r3, .L20+4
 217 000a 1B68     		ldr	r3, [r3]
 218 000c 1B01     		lsls	r3, r3, #4
 219 000e 0B43     		orrs	r3, r1
 220 0010 1360     		str	r3, [r2]
 221 0012 0AE0     		b	.L17
 222              	.L18:
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 223              		.loc 1 493 0
 224 0014 054A     		ldr	r2, .L20
 225 0016 1368     		ldr	r3, [r2]
 226 0018 1B09     		lsrs	r3, r3, #4
 227 001a 0321     		movs	r1, #3
 228 001c 0B40     		ands	r3, r1
 229 001e 0449     		ldr	r1, .L20+4
 230 0020 0B60     		str	r3, [r1]
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 231              		.loc 1 495 0
 232 0022 1368     		ldr	r3, [r2]
 233 0024 3021     		movs	r1, #48
 234 0026 8B43     		bics	r3, r1
 235 0028 1360     		str	r3, [r2]
 236              	.L17:
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 237              		.loc 1 498 0
 238              		@ sp needed
 239 002a 7047     		bx	lr
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 14


 240              	.L21:
 241              		.align	2
 242              	.L20:
 243 002c 28000340 		.word	1073938472
 244 0030 00000000 		.word	.LANCHOR0
 245              		.cfi_endproc
 246              	.LFE7:
 247              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 248              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 249              		.align	2
 250              		.global	CySysClkGetSysclkSource
 251              		.code	16
 252              		.thumb_func
 253              		.type	CySysClkGetSysclkSource, %function
 254              	CySysClkGetSysclkSource:
 255              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 256              		.loc 1 511 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 10B5     		push	{r4, lr}
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 4, -8
 263              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 264              		.loc 1 515 0
 265 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 266              	.LVL9:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 267              		.loc 1 525 0
 268 0006 044B     		ldr	r3, .L23
 269 0008 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 15


 270 000a 0324     		movs	r4, #3
 271 000c 1C40     		ands	r4, r3
 272              	.LVL10:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 273              		.loc 1 528 0
 274 000e FFF7FEFF 		bl	CyExitCriticalSection
 275              	.LVL11:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 276              		.loc 1 531 0
 277 0012 2000     		movs	r0, r4
 278              		@ sp needed
 279              	.LVL12:
 280 0014 10BD     		pop	{r4, pc}
 281              	.L24:
 282 0016 C046     		.align	2
 283              	.L23:
 284 0018 28000340 		.word	1073938472
 285              		.cfi_endproc
 286              	.LFE8:
 287              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 288              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 289              		.align	2
 290              		.global	CySysClkWriteSysclkDiv
 291              		.code	16
 292              		.thumb_func
 293              		.type	CySysClkWriteSysclkDiv, %function
 294              	CySysClkWriteSysclkDiv:
 295              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 16


 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 296              		.loc 1 566 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              	.LVL13:
 301 0000 10B5     		push	{r4, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 4, -8
 304              		.cfi_offset 14, -4
 305 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 306              		.loc 1 569 0
 307 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 308              	.LVL14:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 309              		.loc 1 571 0
 310 0008 A401     		lsls	r4, r4, #6
 311              	.LVL15:
 312 000a FF23     		movs	r3, #255
 313 000c 2340     		ands	r3, r4
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 314              		.loc 1 573 0
 315 000e 0449     		ldr	r1, .L26
 316 0010 0A68     		ldr	r2, [r1]
 317 0012 C024     		movs	r4, #192
 318 0014 A243     		bics	r2, r4
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 319              		.loc 1 572 0
 320 0016 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 321              		.loc 1 571 0
 322 0018 0B60     		str	r3, [r1]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 323              		.loc 1 576 0
 324 001a FFF7FEFF 		bl	CyExitCriticalSection
 325              	.LVL16:
 577:Generated_Source\PSoC4/CyLib.c **** }
 326              		.loc 1 577 0
 327              		@ sp needed
 328 001e 10BD     		pop	{r4, pc}
 329              	.L27:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 17


 330              		.align	2
 331              	.L26:
 332 0020 28000340 		.word	1073938472
 333              		.cfi_endproc
 334              	.LFE9:
 335              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 336              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 337              		.align	2
 338              		.global	CySysClkWriteHfclkDiv
 339              		.code	16
 340              		.thumb_func
 341              		.type	CySysClkWriteHfclkDiv, %function
 342              	CySysClkWriteHfclkDiv:
 343              	.LFB11:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 18


 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 19


 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 20


 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 21


 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 22


 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 23


 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 24


 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 344              		.loc 1 982 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              	.LVL17:
 349 0000 70B5     		push	{r4, r5, r6, lr}
 350              		.cfi_def_cfa_offset 16
 351              		.cfi_offset 4, -16
 352              		.cfi_offset 5, -12
 353              		.cfi_offset 6, -8
 354              		.cfi_offset 14, -4
 355 0002 0400     		movs	r4, r0
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 356              		.loc 1 985 0
 357 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 358              	.LVL18:
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 359              		.loc 1 987 0
 360 0008 0549     		ldr	r1, .L29
 361 000a 0A68     		ldr	r2, [r1]
 362 000c 0C25     		movs	r5, #12
 363 000e AA43     		bics	r2, r5
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 364              		.loc 1 989 0
 365 0010 A300     		lsls	r3, r4, #2
 366 0012 2C00     		movs	r4, r5
 367              	.LVL19:
 368 0014 1C40     		ands	r4, r3
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 369              		.loc 1 988 0
 370 0016 1443     		orrs	r4, r2
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 371              		.loc 1 987 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 25


 372 0018 0C60     		str	r4, [r1]
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 373              		.loc 1 991 0
 374 001a FFF7FEFF 		bl	CyExitCriticalSection
 375              	.LVL20:
 992:Generated_Source\PSoC4/CyLib.c ****     }
 376              		.loc 1 992 0
 377              		@ sp needed
 378 001e 70BD     		pop	{r4, r5, r6, pc}
 379              	.L30:
 380              		.align	2
 381              	.L29:
 382 0020 28000340 		.word	1073938472
 383              		.cfi_endproc
 384              	.LFE11:
 385              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 386              		.section	.text.CySysGetResetReason,"ax",%progbits
 387              		.align	2
 388              		.global	CySysGetResetReason
 389              		.code	16
 390              		.thumb_func
 391              		.type	CySysGetResetReason, %function
 392              	CySysGetResetReason:
 393              	.LFB12:
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 26


1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 27


1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 28


1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 29


1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 30


1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 31


1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 32


1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 33


1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 34


1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 35


1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 36


1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 37


1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 38


1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 39


1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 40


1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 41


1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 42


1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 43


1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 44


2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 45


2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 46


2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 394              		.loc 1 2209 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399              	.LVL21:
 400 0000 0200     		movs	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 401              		.loc 1 2212 0
 402 0002 1920     		movs	r0, #25
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 47


 403              	.LVL22:
 404 0004 0240     		ands	r2, r0
 405              	.LVL23:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 406              		.loc 1 2213 0
 407 0006 0249     		ldr	r1, .L32
 408 0008 0B68     		ldr	r3, [r1]
 409 000a 1840     		ands	r0, r3
 410              	.LVL24:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 411              		.loc 1 2215 0
 412 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 413              		.loc 1 2218 0
 414              		@ sp needed
 415 000e 7047     		bx	lr
 416              	.L33:
 417              		.align	2
 418              	.L32:
 419 0010 54000340 		.word	1073938516
 420              		.cfi_endproc
 421              	.LFE12:
 422              		.size	CySysGetResetReason, .-CySysGetResetReason
 423              		.section	.text.CyDisableInts,"ax",%progbits
 424              		.align	2
 425              		.global	CyDisableInts
 426              		.code	16
 427              		.thumb_func
 428              		.type	CyDisableInts, %function
 429              	CyDisableInts:
 430              	.LFB13:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 431              		.loc 1 2232 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 48


 436              		.loc 1 2236 0
 437 0000 024B     		ldr	r3, .L35
 438 0002 1868     		ldr	r0, [r3]
 439              	.LVL25:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 440              		.loc 1 2239 0
 441 0004 0122     		movs	r2, #1
 442 0006 5242     		rsbs	r2, r2, #0
 443 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 444              		.loc 1 2242 0
 445              		@ sp needed
 446 000a 7047     		bx	lr
 447              	.L36:
 448              		.align	2
 449              	.L35:
 450 000c 80E100E0 		.word	-536813184
 451              		.cfi_endproc
 452              	.LFE13:
 453              		.size	CyDisableInts, .-CyDisableInts
 454              		.section	.text.CyEnableInts,"ax",%progbits
 455              		.align	2
 456              		.global	CyEnableInts
 457              		.code	16
 458              		.thumb_func
 459              		.type	CyEnableInts, %function
 460              	CyEnableInts:
 461              	.LFB14:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 462              		.loc 1 2255 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467              	.LVL26:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 468              		.loc 1 2256 0
 469 0000 014B     		ldr	r3, .L38
 470 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 471              		.loc 1 2257 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 49


 472              		@ sp needed
 473 0004 7047     		bx	lr
 474              	.L39:
 475 0006 C046     		.align	2
 476              	.L38:
 477 0008 00E100E0 		.word	-536813312
 478              		.cfi_endproc
 479              	.LFE14:
 480              		.size	CyEnableInts, .-CyEnableInts
 481              		.section	.text.CyIntEnable,"ax",%progbits
 482              		.align	2
 483              		.global	CyIntEnable
 484              		.code	16
 485              		.thumb_func
 486              		.type	CyIntEnable, %function
 487              	CyIntEnable:
 488              	.LFB21:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 50


2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 51


2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 52


2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 489              		.loc 1 2438 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              	.LVL27:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 495              		.loc 1 2439 0
 496 0000 1F23     		movs	r3, #31
 497 0002 1840     		ands	r0, r3
 498              	.LVL28:
 499 0004 1E3B     		subs	r3, r3, #30
 500 0006 8340     		lsls	r3, r3, r0
 501 0008 014A     		ldr	r2, .L41
 502 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** }
 503              		.loc 1 2440 0
 504              		@ sp needed
 505 000c 7047     		bx	lr
 506              	.L42:
 507 000e C046     		.align	2
 508              	.L41:
 509 0010 00E100E0 		.word	-536813312
 510              		.cfi_endproc
 511              	.LFE21:
 512              		.size	CyIntEnable, .-CyIntEnable
 513              		.section	.text.CyIntGetState,"ax",%progbits
 514              		.align	2
 515              		.global	CyIntGetState
 516              		.code	16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 53


 517              		.thumb_func
 518              		.type	CyIntGetState, %function
 519              	CyIntGetState:
 520              	.LFB22:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 521              		.loc 1 2456 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526              	.LVL29:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 527              		.loc 1 2458 0
 528 0000 044B     		ldr	r3, .L44
 529 0002 1B68     		ldr	r3, [r3]
 530 0004 1F22     		movs	r2, #31
 531 0006 1040     		ands	r0, r2
 532              	.LVL30:
 533 0008 C340     		lsrs	r3, r3, r0
 534 000a 1800     		movs	r0, r3
 535 000c 0123     		movs	r3, #1
 536 000e 1840     		ands	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 537              		.loc 1 2459 0
 538              		@ sp needed
 539 0010 7047     		bx	lr
 540              	.L45:
 541 0012 C046     		.align	2
 542              	.L44:
 543 0014 00E100E0 		.word	-536813312
 544              		.cfi_endproc
 545              	.LFE22:
 546              		.size	CyIntGetState, .-CyIntGetState
 547              		.section	.text.CyIntDisable,"ax",%progbits
 548              		.align	2
 549              		.global	CyIntDisable
 550              		.code	16
 551              		.thumb_func
 552              		.type	CyIntDisable, %function
 553              	CyIntDisable:
 554              	.LFB23:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 54


2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 555              		.loc 1 2472 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560              	.LVL31:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 561              		.loc 1 2473 0
 562 0000 1F23     		movs	r3, #31
 563 0002 1840     		ands	r0, r3
 564              	.LVL32:
 565 0004 1E3B     		subs	r3, r3, #30
 566 0006 8340     		lsls	r3, r3, r0
 567 0008 014A     		ldr	r2, .L47
 568 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** }
 569              		.loc 1 2474 0
 570              		@ sp needed
 571 000c 7047     		bx	lr
 572              	.L48:
 573 000e C046     		.align	2
 574              	.L47:
 575 0010 80E100E0 		.word	-536813184
 576              		.cfi_endproc
 577              	.LFE23:
 578              		.size	CyIntDisable, .-CyIntDisable
 579              		.section	.text.CyIntSetPending,"ax",%progbits
 580              		.align	2
 581              		.global	CyIntSetPending
 582              		.code	16
 583              		.thumb_func
 584              		.type	CyIntSetPending, %function
 585              	CyIntSetPending:
 586              	.LFB24:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 55


2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 587              		.loc 1 2486 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592              	.LVL33:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 593              		.loc 1 2487 0
 594 0000 1F23     		movs	r3, #31
 595 0002 1840     		ands	r0, r3
 596              	.LVL34:
 597 0004 1E3B     		subs	r3, r3, #30
 598 0006 8340     		lsls	r3, r3, r0
 599 0008 014A     		ldr	r2, .L50
 600 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** }
 601              		.loc 1 2488 0
 602              		@ sp needed
 603 000c 7047     		bx	lr
 604              	.L51:
 605 000e C046     		.align	2
 606              	.L50:
 607 0010 00E200E0 		.word	-536813056
 608              		.cfi_endproc
 609              	.LFE24:
 610              		.size	CyIntSetPending, .-CyIntSetPending
 611              		.section	.text.CyIntClearPending,"ax",%progbits
 612              		.align	2
 613              		.global	CyIntClearPending
 614              		.code	16
 615              		.thumb_func
 616              		.type	CyIntClearPending, %function
 617              	CyIntClearPending:
 618              	.LFB25:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 619              		.loc 1 2501 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624              	.LVL35:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 625              		.loc 1 2502 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 56


 626 0000 1F23     		movs	r3, #31
 627 0002 1840     		ands	r0, r3
 628              	.LVL36:
 629 0004 1E3B     		subs	r3, r3, #30
 630 0006 8340     		lsls	r3, r3, r0
 631 0008 014A     		ldr	r2, .L53
 632 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** }
 633              		.loc 1 2503 0
 634              		@ sp needed
 635 000c 7047     		bx	lr
 636              	.L54:
 637 000e C046     		.align	2
 638              	.L53:
 639 0010 80E200E0 		.word	-536812928
 640              		.cfi_endproc
 641              	.LFE25:
 642              		.size	CyIntClearPending, .-CyIntClearPending
 643              		.section	.text.CyHalt,"ax",%progbits
 644              		.align	2
 645              		.global	CyHalt
 646              		.code	16
 647              		.thumb_func
 648              		.type	CyHalt, %function
 649              	CyHalt:
 650              	.LFB26:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 651              		.loc 1 2516 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656              	.LVL37:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 657              		.loc 1 2525 0
 658              		.syntax divided
 659              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 57


 660 0000 01BE     		    bkpt    1
 661              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 662              		.loc 1 2529 0
 663              		.thumb
 664              		.syntax unified
 665              		@ sp needed
 666 0002 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE26:
 669              		.size	CyHalt, .-CyHalt
 670              		.section	.text.CyIntSetSysVector,"ax",%progbits
 671              		.align	2
 672              		.global	CyIntSetSysVector
 673              		.code	16
 674              		.thumb_func
 675              		.type	CyIntSetSysVector, %function
 676              	CyIntSetSysVector:
 677              	.LFB15:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 678              		.loc 1 2280 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              	.LVL38:
 683 0000 70B5     		push	{r4, r5, r6, lr}
 684              		.cfi_def_cfa_offset 16
 685              		.cfi_offset 4, -16
 686              		.cfi_offset 5, -12
 687              		.cfi_offset 6, -8
 688              		.cfi_offset 14, -4
 689 0002 0400     		movs	r4, r0
 690 0004 0D00     		movs	r5, r1
 691              	.LVL39:
2284:Generated_Source\PSoC4/CyLib.c **** 
 692              		.loc 1 2284 0
 693 0006 0F28     		cmp	r0, #15
 694 0008 02D9     		bls	.L57
2284:Generated_Source\PSoC4/CyLib.c **** 
 695              		.loc 1 2284 0 is_stmt 0 discriminator 1
 696 000a 0020     		movs	r0, #0
 697              	.LVL40:
 698 000c FFF7FEFF 		bl	CyHalt
 699              	.LVL41:
 700              	.L57:
2287:Generated_Source\PSoC4/CyLib.c **** 
 701              		.loc 1 2287 0 is_stmt 1
 702 0010 A400     		lsls	r4, r4, #2
 703 0012 8023     		movs	r3, #128
 704 0014 9B05     		lsls	r3, r3, #22
 705 0016 9C46     		mov	ip, r3
 706 0018 6444     		add	r4, r4, ip
 707 001a 2068     		ldr	r0, [r4]
 708              	.LVL42:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 58


2290:Generated_Source\PSoC4/CyLib.c **** 
 709              		.loc 1 2290 0
 710 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 711              		.loc 1 2293 0
 712              		@ sp needed
 713              	.LVL43:
 714 001e 70BD     		pop	{r4, r5, r6, pc}
 715              		.cfi_endproc
 716              	.LFE15:
 717              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 718              		.section	.text.CyIntGetSysVector,"ax",%progbits
 719              		.align	2
 720              		.global	CyIntGetSysVector
 721              		.code	16
 722              		.thumb_func
 723              		.type	CyIntGetSysVector, %function
 724              	CyIntGetSysVector:
 725              	.LFB16:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 726              		.loc 1 2314 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              	.LVL44:
 731 0000 10B5     		push	{r4, lr}
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 4, -8
 734              		.cfi_offset 14, -4
 735 0002 0400     		movs	r4, r0
 736              	.LVL45:
2317:Generated_Source\PSoC4/CyLib.c **** 
 737              		.loc 1 2317 0
 738 0004 0F28     		cmp	r0, #15
 739 0006 02D9     		bls	.L59
2317:Generated_Source\PSoC4/CyLib.c **** 
 740              		.loc 1 2317 0 is_stmt 0 discriminator 1
 741 0008 0020     		movs	r0, #0
 742              	.LVL46:
 743 000a FFF7FEFF 		bl	CyHalt
 744              	.LVL47:
 745              	.L59:
2319:Generated_Source\PSoC4/CyLib.c **** }
 746              		.loc 1 2319 0 is_stmt 1
 747 000e A400     		lsls	r4, r4, #2
 748 0010 8023     		movs	r3, #128
 749 0012 9B05     		lsls	r3, r3, #22
 750 0014 9C46     		mov	ip, r3
 751 0016 6444     		add	r4, r4, ip
 752 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 753              		.loc 1 2320 0
 754              		@ sp needed
 755 001a 10BD     		pop	{r4, pc}
 756              		.cfi_endproc
 757              	.LFE16:
 758              		.size	CyIntGetSysVector, .-CyIntGetSysVector
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 59


 759              		.section	.text.CyIntSetVector,"ax",%progbits
 760              		.align	2
 761              		.global	CyIntSetVector
 762              		.code	16
 763              		.thumb_func
 764              		.type	CyIntSetVector, %function
 765              	CyIntSetVector:
 766              	.LFB17:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 767              		.loc 1 2336 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              	.LVL48:
 772 0000 70B5     		push	{r4, r5, r6, lr}
 773              		.cfi_def_cfa_offset 16
 774              		.cfi_offset 4, -16
 775              		.cfi_offset 5, -12
 776              		.cfi_offset 6, -8
 777              		.cfi_offset 14, -4
 778 0002 0400     		movs	r4, r0
 779 0004 0D00     		movs	r5, r1
 780              	.LVL49:
2340:Generated_Source\PSoC4/CyLib.c **** 
 781              		.loc 1 2340 0
 782 0006 0F28     		cmp	r0, #15
 783 0008 02D9     		bls	.L61
2340:Generated_Source\PSoC4/CyLib.c **** 
 784              		.loc 1 2340 0 is_stmt 0 discriminator 1
 785 000a 0020     		movs	r0, #0
 786              	.LVL50:
 787 000c FFF7FEFF 		bl	CyHalt
 788              	.LVL51:
 789              	.L61:
2343:Generated_Source\PSoC4/CyLib.c **** 
 790              		.loc 1 2343 0 is_stmt 1
 791 0010 1034     		adds	r4, r4, #16
 792 0012 A400     		lsls	r4, r4, #2
 793 0014 8023     		movs	r3, #128
 794 0016 9B05     		lsls	r3, r3, #22
 795 0018 9C46     		mov	ip, r3
 796 001a 6444     		add	r4, r4, ip
 797 001c 2068     		ldr	r0, [r4]
 798              	.LVL52:
2346:Generated_Source\PSoC4/CyLib.c **** 
 799              		.loc 1 2346 0
 800 001e 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 801              		.loc 1 2349 0
 802              		@ sp needed
 803              	.LVL53:
 804 0020 70BD     		pop	{r4, r5, r6, pc}
 805              		.cfi_endproc
 806              	.LFE17:
 807              		.size	CyIntSetVector, .-CyIntSetVector
 808 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 809              		.align	2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 60


 810              		.global	CyIntGetVector
 811              		.code	16
 812              		.thumb_func
 813              		.type	CyIntGetVector, %function
 814              	CyIntGetVector:
 815              	.LFB18:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 816              		.loc 1 2364 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              	.LVL54:
 821 0000 10B5     		push	{r4, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 4, -8
 824              		.cfi_offset 14, -4
 825 0002 0400     		movs	r4, r0
 826              	.LVL55:
2367:Generated_Source\PSoC4/CyLib.c **** 
 827              		.loc 1 2367 0
 828 0004 0F28     		cmp	r0, #15
 829 0006 02D9     		bls	.L63
2367:Generated_Source\PSoC4/CyLib.c **** 
 830              		.loc 1 2367 0 is_stmt 0 discriminator 1
 831 0008 0020     		movs	r0, #0
 832              	.LVL56:
 833 000a FFF7FEFF 		bl	CyHalt
 834              	.LVL57:
 835              	.L63:
2369:Generated_Source\PSoC4/CyLib.c **** }
 836              		.loc 1 2369 0 is_stmt 1
 837 000e 1034     		adds	r4, r4, #16
 838 0010 A400     		lsls	r4, r4, #2
 839 0012 8023     		movs	r3, #128
 840 0014 9B05     		lsls	r3, r3, #22
 841 0016 9C46     		mov	ip, r3
 842 0018 6444     		add	r4, r4, ip
 843 001a 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 844              		.loc 1 2370 0
 845              		@ sp needed
 846 001c 10BD     		pop	{r4, pc}
 847              		.cfi_endproc
 848              	.LFE18:
 849              		.size	CyIntGetVector, .-CyIntGetVector
 850 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 851              		.align	2
 852              		.global	CyIntSetPriority
 853              		.code	16
 854              		.thumb_func
 855              		.type	CyIntSetPriority, %function
 856              	CyIntSetPriority:
 857              	.LFB19:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 858              		.loc 1 2383 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 61


 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              	.LVL58:
 863 0000 70B5     		push	{r4, r5, r6, lr}
 864              		.cfi_def_cfa_offset 16
 865              		.cfi_offset 4, -16
 866              		.cfi_offset 5, -12
 867              		.cfi_offset 6, -8
 868              		.cfi_offset 14, -4
 869 0002 0400     		movs	r4, r0
 870 0004 0E00     		movs	r6, r1
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 871              		.loc 1 2388 0
 872 0006 0329     		cmp	r1, #3
 873 0008 02D9     		bls	.L65
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 874              		.loc 1 2388 0 is_stmt 0 discriminator 1
 875 000a 0020     		movs	r0, #0
 876              	.LVL59:
 877 000c FFF7FEFF 		bl	CyHalt
 878              	.LVL60:
 879              	.L65:
2389:Generated_Source\PSoC4/CyLib.c **** 
 880              		.loc 1 2389 0 is_stmt 1
 881 0010 0F2C     		cmp	r4, #15
 882 0012 02D9     		bls	.L66
2389:Generated_Source\PSoC4/CyLib.c **** 
 883              		.loc 1 2389 0 is_stmt 0 discriminator 1
 884 0014 0020     		movs	r0, #0
 885 0016 FFF7FEFF 		bl	CyHalt
 886              	.LVL61:
 887              	.L66:
2391:Generated_Source\PSoC4/CyLib.c **** 
 888              		.loc 1 2391 0 is_stmt 1
 889 001a 0325     		movs	r5, #3
 890 001c 2540     		ands	r5, r4
 891 001e ED00     		lsls	r5, r5, #3
 892 0020 0635     		adds	r5, r5, #6
 893              	.LVL62:
2393:Generated_Source\PSoC4/CyLib.c **** 
 894              		.loc 1 2393 0
 895 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 896              	.LVL63:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 897              		.loc 1 2395 0
 898 0026 A408     		lsrs	r4, r4, #2
 899 0028 A400     		lsls	r4, r4, #2
 900 002a 074B     		ldr	r3, .L67
 901 002c 9C46     		mov	ip, r3
 902 002e 6444     		add	r4, r4, ip
 903 0030 2168     		ldr	r1, [r4]
 904              	.LVL64:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 905              		.loc 1 2396 0
 906 0032 0323     		movs	r3, #3
 907 0034 AB40     		lsls	r3, r3, r5
 908 0036 9943     		bics	r1, r3
 909              	.LVL65:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 62


 910 0038 0B00     		movs	r3, r1
 911              	.LVL66:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 912              		.loc 1 2397 0
 913 003a 3100     		movs	r1, r6
 914              	.LVL67:
 915 003c A940     		lsls	r1, r1, r5
 916 003e 1943     		orrs	r1, r3
 917              	.LVL68:
2398:Generated_Source\PSoC4/CyLib.c **** 
 918              		.loc 1 2398 0
 919 0040 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 920              		.loc 1 2400 0
 921 0042 FFF7FEFF 		bl	CyExitCriticalSection
 922              	.LVL69:
2401:Generated_Source\PSoC4/CyLib.c **** 
 923              		.loc 1 2401 0
 924              		@ sp needed
 925              	.LVL70:
 926 0046 70BD     		pop	{r4, r5, r6, pc}
 927              	.L68:
 928              		.align	2
 929              	.L67:
 930 0048 00E400E0 		.word	-536812544
 931              		.cfi_endproc
 932              	.LFE19:
 933              		.size	CyIntSetPriority, .-CyIntSetPriority
 934              		.section	.text.CyIntGetPriority,"ax",%progbits
 935              		.align	2
 936              		.global	CyIntGetPriority
 937              		.code	16
 938              		.thumb_func
 939              		.type	CyIntGetPriority, %function
 940              	CyIntGetPriority:
 941              	.LFB20:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 942              		.loc 1 2417 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              	.LVL71:
 947 0000 10B5     		push	{r4, lr}
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 4, -8
 950              		.cfi_offset 14, -4
 951 0002 0400     		movs	r4, r0
2420:Generated_Source\PSoC4/CyLib.c **** 
 952              		.loc 1 2420 0
 953 0004 0F28     		cmp	r0, #15
 954 0006 02D9     		bls	.L70
2420:Generated_Source\PSoC4/CyLib.c **** 
 955              		.loc 1 2420 0 is_stmt 0 discriminator 1
 956 0008 0020     		movs	r0, #0
 957              	.LVL72:
 958 000a FFF7FEFF 		bl	CyHalt
 959              	.LVL73:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 63


 960              	.L70:
2422:Generated_Source\PSoC4/CyLib.c **** 
 961              		.loc 1 2422 0 is_stmt 1
 962 000e A308     		lsrs	r3, r4, #2
 963 0010 9B00     		lsls	r3, r3, #2
 964 0012 054A     		ldr	r2, .L71
 965 0014 9446     		mov	ip, r2
 966 0016 6344     		add	r3, r3, ip
 967 0018 1868     		ldr	r0, [r3]
 968 001a 0323     		movs	r3, #3
 969 001c 1C40     		ands	r4, r3
 970 001e E400     		lsls	r4, r4, #3
 971 0020 0634     		adds	r4, r4, #6
 972 0022 E040     		lsrs	r0, r0, r4
 973              	.LVL74:
2424:Generated_Source\PSoC4/CyLib.c **** }
 974              		.loc 1 2424 0
 975 0024 1840     		ands	r0, r3
 976              	.LVL75:
2425:Generated_Source\PSoC4/CyLib.c **** 
 977              		.loc 1 2425 0
 978              		@ sp needed
 979 0026 10BD     		pop	{r4, pc}
 980              	.L72:
 981              		.align	2
 982              	.L71:
 983 0028 00E400E0 		.word	-536812544
 984              		.cfi_endproc
 985              	.LFE20:
 986              		.size	CyIntGetPriority, .-CyIntGetPriority
 987              		.section	.text.CySoftwareReset,"ax",%progbits
 988              		.align	2
 989              		.global	CySoftwareReset
 990              		.code	16
 991              		.thumb_func
 992              		.type	CySoftwareReset, %function
 993              	CySoftwareReset:
 994              	.LFB27:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 995              		.loc 1 2540 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 64


2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1000              		.loc 1 2545 0
 1001 0000 034A     		ldr	r2, .L74
 1002 0002 1368     		ldr	r3, [r2]
 1003 0004 1B04     		lsls	r3, r3, #16
 1004 0006 1B0C     		lsrs	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1005              		.loc 1 2546 0
 1006 0008 0249     		ldr	r1, .L74+4
 1007 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1008              		.loc 1 2545 0
 1009 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1010              		.loc 1 2547 0
 1011              		@ sp needed
 1012 000e 7047     		bx	lr
 1013              	.L75:
 1014              		.align	2
 1015              	.L74:
 1016 0010 0CED00E0 		.word	-536810228
 1017 0014 0400FA05 		.word	100270084
 1018              		.cfi_endproc
 1019              	.LFE27:
 1020              		.size	CySoftwareReset, .-CySoftwareReset
 1021              		.section	.text.CyDelay,"ax",%progbits
 1022              		.align	2
 1023              		.global	CyDelay
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CyDelay, %function
 1027              	CyDelay:
 1028              	.LFB28:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1029              		.loc 1 2560 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              	.LVL76:
 1034 0000 10B5     		push	{r4, lr}
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 4, -8
 1037              		.cfi_offset 14, -4
 1038 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 65


2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1039              		.loc 1 2561 0
 1040 0004 06E0     		b	.L77
 1041              	.LVL77:
 1042              	.L78:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1043              		.loc 1 2566 0
 1044 0006 084B     		ldr	r3, .L79
 1045 0008 5868     		ldr	r0, [r3, #4]
 1046 000a FFF7FEFF 		bl	CyDelayCycles
 1047              	.LVL78:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1048              		.loc 1 2567 0
 1049 000e 074B     		ldr	r3, .L79+4
 1050 0010 9C46     		mov	ip, r3
 1051 0012 6444     		add	r4, r4, ip
 1052              	.LVL79:
 1053              	.L77:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1054              		.loc 1 2561 0
 1055 0014 8023     		movs	r3, #128
 1056 0016 1B02     		lsls	r3, r3, #8
 1057 0018 9C42     		cmp	r4, r3
 1058 001a F4D8     		bhi	.L78
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1059              		.loc 1 2570 0
 1060 001c 024B     		ldr	r3, .L79
 1061 001e 9868     		ldr	r0, [r3, #8]
 1062 0020 6043     		muls	r0, r4
 1063 0022 FFF7FEFF 		bl	CyDelayCycles
 1064              	.LVL80:
2571:Generated_Source\PSoC4/CyLib.c **** }
 1065              		.loc 1 2571 0
 1066              		@ sp needed
 1067              	.LVL81:
 1068 0026 10BD     		pop	{r4, pc}
 1069              	.L80:
 1070              		.align	2
 1071              	.L79:
 1072 0028 00000000 		.word	.LANCHOR0
 1073 002c 0080FFFF 		.word	-32768
 1074              		.cfi_endproc
 1075              	.LFE28:
 1076              		.size	CyDelay, .-CyDelay
 1077              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1078              		.align	2
 1079              		.global	CySysClkImoEnableWcoLock
 1080              		.code	16
 1081              		.thumb_func
 1082              		.type	CySysClkImoEnableWcoLock, %function
 1083              	CySysClkImoEnableWcoLock:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 66


 1084              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1085              		.loc 1 176 0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 8
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089 0000 30B5     		push	{r4, r5, lr}
 1090              		.cfi_def_cfa_offset 12
 1091              		.cfi_offset 4, -12
 1092              		.cfi_offset 5, -8
 1093              		.cfi_offset 14, -4
 1094 0002 83B0     		sub	sp, sp, #12
 1095              		.cfi_def_cfa_offset 24
 1096              	.LVL82:
 187:Generated_Source\PSoC4/CyLib.c ****         {
 1097              		.loc 1 187 0
 1098 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1099              	.LVL83:
 1100 0008 0028     		cmp	r0, #0
 1101 000a 49D0     		beq	.L81
 189:Generated_Source\PSoC4/CyLib.c **** 
 1102              		.loc 1 189 0
 1103 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1104              	.LVL84:
 1105 0010 0400     		movs	r4, r0
 1106              	.LVL85:
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1107              		.loc 1 212 0
 1108 0012 244B     		ldr	r3, .L86
 1109 0014 1968     		ldr	r1, [r3]
 1110 0016 8900     		lsls	r1, r1, #2
 1111 0018 1C23     		movs	r3, #28
 1112 001a 1940     		ands	r1, r3
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1113              		.loc 1 213 0
 1114 001c 1831     		adds	r1, r1, #24
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1115              		.loc 1 214 0
 1116 001e 224B     		ldr	r3, .L86+4
 1117 0020 1B68     		ldr	r3, [r3]
 1118 0022 9B08     		lsrs	r3, r3, #2
 1119 0024 0322     		movs	r2, #3
 1120 0026 1340     		ands	r3, r2
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1121              		.loc 1 212 0
 1122 0028 D940     		lsrs	r1, r1, r3
 1123              	.LVL86:
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1124              		.loc 1 232 0
 1125 002a 204B     		ldr	r3, .L86+8
 1126 002c 1A68     		ldr	r2, [r3]
 1127 002e 204B     		ldr	r3, .L86+12
 1128 0030 1340     		ands	r3, r2
 1129              	.LVL87:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1130              		.loc 1 238 0
 1131 0032 204A     		ldr	r2, .L86+16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 67


 1132 0034 4A43     		muls	r2, r1
 1133 0036 8020     		movs	r0, #128
 1134 0038 C001     		lsls	r0, r0, #7
 1135 003a 8446     		mov	ip, r0
 1136 003c 6244     		add	r2, r2, ip
 1137 003e D20B     		lsrs	r2, r2, #15
 1138 0040 013A     		subs	r2, r2, #1
 1139 0042 5205     		lsls	r2, r2, #21
 1140 0044 520D     		lsrs	r2, r2, #21
 1141 0046 1343     		orrs	r3, r2
 1142              	.LVL88:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1143              		.loc 1 241 0
 1144 0048 A022     		movs	r2, #160
 1145 004a 5203     		lsls	r2, r2, #13
 1146 004c 1A43     		orrs	r2, r3
 1147 004e 1000     		movs	r0, r2
 1148              	.LVL89:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1149              		.loc 1 244 0
 1150 0050 1929     		cmp	r1, #25
 1151 0052 02D8     		bhi	.L83
 246:Generated_Source\PSoC4/CyLib.c ****             }
 1152              		.loc 1 246 0
 1153 0054 184A     		ldr	r2, .L86+20
 1154 0056 1343     		orrs	r3, r2
 1155              	.LVL90:
 1156 0058 0CE0     		b	.L84
 1157              	.LVL91:
 1158              	.L83:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1159              		.loc 1 250 0
 1160 005a 184B     		ldr	r3, .L86+24
 1161 005c CB18     		adds	r3, r1, r3
 1162 005e 1B78     		ldrb	r3, [r3]
 251:Generated_Source\PSoC4/CyLib.c **** 
 1163              		.loc 1 251 0
 1164 0060 1A39     		subs	r1, r1, #26
 1165              	.LVL92:
 1166 0062 174A     		ldr	r2, .L86+28
 1167 0064 525C     		ldrb	r2, [r2, r1]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1168              		.loc 1 250 0
 1169 0066 9A18     		adds	r2, r3, r2
 1170              	.LVL93:
 253:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 1171              		.loc 1 253 0
 1172 0068 FF2A     		cmp	r2, #255
 1173 006a 00D9     		bls	.L85
 1174 006c FF22     		movs	r2, #255
 1175              	.L85:
 1176              	.LVL94:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1177              		.loc 1 256 0
 1178 006e 9205     		lsls	r2, r2, #22
 1179              	.LVL95:
 1180 0070 0300     		movs	r3, r0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 68


 1181 0072 1343     		orrs	r3, r2
 1182              	.LVL96:
 1183              	.L84:
 259:Generated_Source\PSoC4/CyLib.c **** 
 1184              		.loc 1 259 0
 1185 0074 0D4A     		ldr	r2, .L86+8
 1186 0076 1360     		str	r3, [r2]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1187              		.loc 1 261 0
 1188 0078 124D     		ldr	r5, .L86+32
 1189 007a 2B68     		ldr	r3, [r5]
 1190              	.LVL97:
 1191 007c 0193     		str	r3, [sp, #4]
 1192              	.LVL98:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1193              		.loc 1 262 0
 1194 007e 3020     		movs	r0, #48
 1195 0080 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1196              	.LVL99:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1197              		.loc 1 263 0
 1198 0084 104A     		ldr	r2, .L86+36
 1199 0086 1368     		ldr	r3, [r2]
 1200 0088 8021     		movs	r1, #128
 1201 008a C905     		lsls	r1, r1, #23
 1202 008c 0B43     		orrs	r3, r1
 1203 008e 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1204              		.loc 1 264 0
 1205 0090 1420     		movs	r0, #20
 1206 0092 FFF7FEFF 		bl	CyDelay
 1207              	.LVL100:
 265:Generated_Source\PSoC4/CyLib.c **** 
 1208              		.loc 1 265 0
 1209 0096 019B     		ldr	r3, [sp, #4]
 1210 0098 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1211              		.loc 1 267 0
 1212 009a 2000     		movs	r0, r4
 1213 009c FFF7FEFF 		bl	CyExitCriticalSection
 1214              	.LVL101:
 1215              	.L81:
 269:Generated_Source\PSoC4/CyLib.c **** 
 1216              		.loc 1 269 0
 1217 00a0 03B0     		add	sp, sp, #12
 1218              		@ sp needed
 1219 00a2 30BD     		pop	{r4, r5, pc}
 1220              	.L87:
 1221              		.align	2
 1222              	.L86:
 1223 00a4 080F0340 		.word	1073942280
 1224 00a8 28000340 		.word	1073938472
 1225 00ac 08000740 		.word	1074200584
 1226 00b0 00F800C0 		.word	-1073678336
 1227 00b4 40420F00 		.word	1000000
 1228 00b8 0000D43F 		.word	1070858240
 1229 00bc CDF1FF0F 		.word	268431821
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 69


 1230 00c0 00000000 		.word	.LANCHOR1
 1231 00c4 30001040 		.word	1074790448
 1232 00c8 00000740 		.word	1074200576
 1233              		.cfi_endproc
 1234              	.LFE3:
 1235              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1236              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1237              		.align	2
 1238              		.global	CySysClkWriteImoFreq
 1239              		.code	16
 1240              		.thumb_func
 1241              		.type	CySysClkWriteImoFreq, %function
 1242              	CySysClkWriteImoFreq:
 1243              	.LFB10:
 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1244              		.loc 1 829 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 8
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248              	.LVL102:
 1249 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1250              		.cfi_def_cfa_offset 20
 1251              		.cfi_offset 4, -20
 1252              		.cfi_offset 5, -16
 1253              		.cfi_offset 6, -12
 1254              		.cfi_offset 7, -8
 1255              		.cfi_offset 14, -4
 1256 0002 83B0     		sub	sp, sp, #12
 1257              		.cfi_def_cfa_offset 32
 1258 0004 0400     		movs	r4, r0
 1259              	.LVL103:
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1260              		.loc 1 846 0
 1261 0006 1828     		cmp	r0, #24
 1262 0008 0BD0     		beq	.L89
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1263              		.loc 1 846 0 is_stmt 0 discriminator 1
 1264 000a 1C28     		cmp	r0, #28
 1265 000c 09D0     		beq	.L89
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1266              		.loc 1 846 0 discriminator 2
 1267 000e 2028     		cmp	r0, #32
 1268 0010 07D0     		beq	.L89
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1269              		.loc 1 846 0 discriminator 3
 1270 0012 2428     		cmp	r0, #36
 1271 0014 05D0     		beq	.L89
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1272              		.loc 1 847 0 is_stmt 1
 1273 0016 2828     		cmp	r0, #40
 1274 0018 03D0     		beq	.L89
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1275              		.loc 1 847 0 is_stmt 0 discriminator 1
 1276 001a 2C28     		cmp	r0, #44
 1277 001c 01D0     		beq	.L89
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1278              		.loc 1 847 0 discriminator 2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 70


 1279 001e 3028     		cmp	r0, #48
 1280 0020 49D1     		bne	.L90
 1281              	.L89:
 851:Generated_Source\PSoC4/CyLib.c **** 
 1282              		.loc 1 851 0 is_stmt 1
 1283 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1284              	.LVL104:
 1285 0026 0190     		str	r0, [sp, #4]
 1286              	.LVL105:
 854:Generated_Source\PSoC4/CyLib.c ****                 {
 1287              		.loc 1 854 0
 1288 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1289              	.LVL106:
 1290 002c 0028     		cmp	r0, #0
 1291 002e 03D0     		beq	.L95
 1292              	.LVL107:
 857:Generated_Source\PSoC4/CyLib.c ****                 }
 1293              		.loc 1 857 0
 1294 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1295              	.LVL108:
 856:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1296              		.loc 1 856 0
 1297 0034 0126     		movs	r6, #1
 1298 0036 00E0     		b	.L91
 1299              	.LVL109:
 1300              	.L95:
 834:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1301              		.loc 1 834 0
 1302 0038 0026     		movs	r6, #0
 1303              	.LVL110:
 1304              	.L91:
 882:Generated_Source\PSoC4/CyLib.c **** 
 1305              		.loc 1 882 0
 1306 003a 214A     		ldr	r2, .L96
 1307 003c 1368     		ldr	r3, [r2]
 1308 003e 0721     		movs	r1, #7
 1309 0040 8B43     		bics	r3, r1
 1310 0042 1360     		str	r3, [r2]
 1311              	.LVL111:
 900:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1312              		.loc 1 900 0
 1313 0044 1F4B     		ldr	r3, .L96+4
 1314 0046 E318     		adds	r3, r4, r3
 1315 0048 1B78     		ldrb	r3, [r3]
 1316 004a DBB2     		uxtb	r3, r3
 1317              	.LVL112:
 902:Generated_Source\PSoC4/CyLib.c **** 
 1318              		.loc 1 902 0
 1319 004c 1E4A     		ldr	r2, .L96+8
 1320 004e 1360     		str	r3, [r2]
 905:Generated_Source\PSoC4/CyLib.c **** 
 1321              		.loc 1 905 0
 1322 0050 1E4A     		ldr	r2, .L96+12
 1323 0052 1368     		ldr	r3, [r2]
 1324              	.LVL113:
 1325 0054 8B43     		bics	r3, r1
 1326 0056 1360     		str	r3, [r2]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 71


 1327              	.LVL114:
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1328              		.loc 1 908 0
 1329 0058 1D48     		ldr	r0, .L96+16
 1330 005a 0368     		ldr	r3, [r0]
 1331 005c 7F22     		movs	r2, #127
 1332 005e 9343     		bics	r3, r2
 1333 0060 1900     		movs	r1, r3
 909:Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 909 0
 1335 0062 1C4B     		ldr	r3, .L96+20
 1336 0064 E318     		adds	r3, r4, r3
 1337 0066 1B78     		ldrb	r3, [r3]
 1338 0068 1340     		ands	r3, r2
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1339              		.loc 1 908 0
 1340 006a 0B43     		orrs	r3, r1
 1341 006c 0360     		str	r3, [r0]
 911:Generated_Source\PSoC4/CyLib.c **** 
 1342              		.loc 1 911 0
 1343 006e 3220     		movs	r0, #50
 1344 0070 FFF7FEFF 		bl	CyDelayCycles
 1345              	.LVL115:
 913:Generated_Source\PSoC4/CyLib.c ****             {
 1346              		.loc 1 913 0
 1347 0074 182C     		cmp	r4, #24
 1348 0076 16D9     		bls	.L92
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1349              		.loc 1 916 0
 1350 0078 114F     		ldr	r7, .L96
 1351 007a 3B68     		ldr	r3, [r7]
 1352 007c 0725     		movs	r5, #7
 1353 007e AB43     		bics	r3, r5
 1354 0080 1A00     		movs	r2, r3
 917:Generated_Source\PSoC4/CyLib.c **** 
 1355              		.loc 1 917 0
 1356 0082 2300     		movs	r3, r4
 1357 0084 1C3B     		subs	r3, r3, #28
 1358 0086 9B08     		lsrs	r3, r3, #2
 1359 0088 2B40     		ands	r3, r5
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1360              		.loc 1 916 0
 1361 008a 1343     		orrs	r3, r2
 1362 008c 3B60     		str	r3, [r7]
 919:Generated_Source\PSoC4/CyLib.c **** 
 1363              		.loc 1 919 0
 1364 008e 3220     		movs	r0, #50
 1365 0090 FFF7FEFF 		bl	CyDelayCycles
 1366              	.LVL116:
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1367              		.loc 1 923 0
 1368 0094 3A68     		ldr	r2, [r7]
 1369 0096 AA43     		bics	r2, r5
 924:Generated_Source\PSoC4/CyLib.c ****             }
 1370              		.loc 1 924 0
 1371 0098 2300     		movs	r3, r4
 1372 009a 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 72


 1373 009c 9B08     		lsrs	r3, r3, #2
 1374 009e 2C00     		movs	r4, r5
 1375              	.LVL117:
 1376 00a0 1C40     		ands	r4, r3
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1377              		.loc 1 923 0
 1378 00a2 1443     		orrs	r4, r2
 1379 00a4 3C60     		str	r4, [r7]
 1380              	.L92:
 928:Generated_Source\PSoC4/CyLib.c ****                 {
 1381              		.loc 1 928 0
 1382 00a6 012E     		cmp	r6, #1
 1383 00a8 01D1     		bne	.L93
 930:Generated_Source\PSoC4/CyLib.c ****                 }
 1384              		.loc 1 930 0
 1385 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1386              	.LVL118:
 1387              	.L93:
 942:Generated_Source\PSoC4/CyLib.c ****         }
 1388              		.loc 1 942 0
 1389 00ae 0198     		ldr	r0, [sp, #4]
 1390 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 1391              	.LVL119:
 1392 00b4 02E0     		b	.L88
 1393              	.LVL120:
 1394              	.L90:
 947:Generated_Source\PSoC4/CyLib.c ****         }
 1395              		.loc 1 947 0 discriminator 1
 1396 00b6 0020     		movs	r0, #0
 1397              	.LVL121:
 1398 00b8 FFF7FEFF 		bl	CyHalt
 1399              	.LVL122:
 1400              	.L88:
 949:Generated_Source\PSoC4/CyLib.c **** 
 1401              		.loc 1 949 0
 1402 00bc 03B0     		add	sp, sp, #12
 1403              		@ sp needed
 1404 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 1405              	.L97:
 1406              		.align	2
 1407              	.L96:
 1408 00c0 080F0340 		.word	1073942280
 1409 00c4 CDF1FF0F 		.word	268431821
 1410 00c8 0C0F0340 		.word	1073942284
 1411 00cc 100F0340 		.word	1073942288
 1412 00d0 180F0340 		.word	1073942296
 1413 00d4 B4F1FF0F 		.word	268431796
 1414              		.cfi_endproc
 1415              	.LFE10:
 1416              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1417              		.section	.text.CyDelayUs,"ax",%progbits
 1418              		.align	2
 1419              		.global	CyDelayUs
 1420              		.code	16
 1421              		.thumb_func
 1422              		.type	CyDelayUs, %function
 1423              	CyDelayUs:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 73


 1424              	.LFB29:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1425              		.loc 1 2583 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              	.LVL123:
 1430 0000 10B5     		push	{r4, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 4, -8
 1433              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1434              		.loc 1 2584 0
 1435 0002 034B     		ldr	r3, .L99
 1436 0004 1B7B     		ldrb	r3, [r3, #12]
 1437 0006 5843     		muls	r0, r3
 1438              	.LVL124:
 1439 0008 FFF7FEFF 		bl	CyDelayCycles
 1440              	.LVL125:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1441              		.loc 1 2585 0
 1442              		@ sp needed
 1443 000c 10BD     		pop	{r4, pc}
 1444              	.L100:
 1445 000e C046     		.align	2
 1446              	.L99:
 1447 0010 00000000 		.word	.LANCHOR0
 1448              		.cfi_endproc
 1449              	.LFE29:
 1450              		.size	CyDelayUs, .-CyDelayUs
 1451              		.global	__aeabi_uidiv
 1452              		.section	.text.CyDelayFreq,"ax",%progbits
 1453              		.align	2
 1454              		.global	CyDelayFreq
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	CyDelayFreq, %function
 1458              	CyDelayFreq:
 1459              	.LFB30:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 74


2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1460              		.loc 1 2597 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              	.LVL126:
 1465 0000 70B5     		push	{r4, r5, r6, lr}
 1466              		.cfi_def_cfa_offset 16
 1467              		.cfi_offset 4, -16
 1468              		.cfi_offset 5, -12
 1469              		.cfi_offset 6, -8
 1470              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1471              		.loc 1 2598 0
 1472 0002 0028     		cmp	r0, #0
 1473 0004 02D0     		beq	.L102
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1474              		.loc 1 2600 0
 1475 0006 0C4B     		ldr	r3, .L104
 1476 0008 1861     		str	r0, [r3, #16]
 1477 000a 02E0     		b	.L103
 1478              	.L102:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1479              		.loc 1 2604 0
 1480 000c 0B4A     		ldr	r2, .L104+4
 1481 000e 0A4B     		ldr	r3, .L104
 1482 0010 1A61     		str	r2, [r3, #16]
 1483              	.L103:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1484              		.loc 1 2607 0
 1485 0012 094C     		ldr	r4, .L104
 1486 0014 2569     		ldr	r5, [r4, #16]
 1487 0016 0A4B     		ldr	r3, .L104+8
 1488 0018 E818     		adds	r0, r5, r3
 1489              	.LVL127:
 1490 001a 0A49     		ldr	r1, .L104+12
 1491 001c FFF7FEFF 		bl	__aeabi_uidiv
 1492              	.LVL128:
 1493 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1494              		.loc 1 2608 0
 1495 0022 094B     		ldr	r3, .L104+16
 1496 0024 E818     		adds	r0, r5, r3
 1497 0026 FA21     		movs	r1, #250
 1498 0028 8900     		lsls	r1, r1, #2
 1499 002a FFF7FEFF 		bl	__aeabi_uidiv
 1500              	.LVL129:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 75


 1501 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1502              		.loc 1 2609 0
 1503 0030 C003     		lsls	r0, r0, #15
 1504 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1505              		.loc 1 2610 0
 1506              		@ sp needed
 1507 0034 70BD     		pop	{r4, r5, r6, pc}
 1508              	.L105:
 1509 0036 C046     		.align	2
 1510              	.L104:
 1511 0038 00000000 		.word	.LANCHOR0
 1512 003c 00366E01 		.word	24000000
 1513 0040 3F420F00 		.word	999999
 1514 0044 40420F00 		.word	1000000
 1515 0048 E7030000 		.word	999
 1516              		.cfi_endproc
 1517              	.LFE30:
 1518              		.size	CyDelayFreq, .-CyDelayFreq
 1519              		.section	.text.CySysTickStop,"ax",%progbits
 1520              		.align	2
 1521              		.global	CySysTickStop
 1522              		.code	16
 1523              		.thumb_func
 1524              		.type	CySysTickStop, %function
 1525              	CySysTickStop:
 1526              	.LFB34:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 76


2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 77


2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
 1527              		.loc 1 2705 0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1532              		.loc 1 2706 0
 1533 0000 024A     		ldr	r2, .L107
 1534 0002 1368     		ldr	r3, [r2]
 1535 0004 0121     		movs	r1, #1
 1536 0006 8B43     		bics	r3, r1
 1537 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** }
 1538              		.loc 1 2707 0
 1539              		@ sp needed
 1540 000a 7047     		bx	lr
 1541              	.L108:
 1542              		.align	2
 1543              	.L107:
 1544 000c 10E000E0 		.word	-536813552
 1545              		.cfi_endproc
 1546              	.LFE34:
 1547              		.size	CySysTickStop, .-CySysTickStop
 1548              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1549              		.align	2
 1550              		.global	CySysTickEnableInterrupt
 1551              		.code	16
 1552              		.thumb_func
 1553              		.type	CySysTickEnableInterrupt, %function
 1554              	CySysTickEnableInterrupt:
 1555              	.LFB35:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
 1556              		.loc 1 2721 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 78


 1559              		@ frame_needed = 0, uses_anonymous_args = 0
 1560              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1561              		.loc 1 2722 0
 1562 0000 024A     		ldr	r2, .L110
 1563 0002 1168     		ldr	r1, [r2]
 1564 0004 0223     		movs	r3, #2
 1565 0006 0B43     		orrs	r3, r1
 1566 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** }
 1567              		.loc 1 2723 0
 1568              		@ sp needed
 1569 000a 7047     		bx	lr
 1570              	.L111:
 1571              		.align	2
 1572              	.L110:
 1573 000c 10E000E0 		.word	-536813552
 1574              		.cfi_endproc
 1575              	.LFE35:
 1576              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1577              		.section	.text.CySysTickEnable,"ax",%progbits
 1578              		.align	2
 1579              		.global	CySysTickEnable
 1580              		.code	16
 1581              		.thumb_func
 1582              		.type	CySysTickEnable, %function
 1583              	CySysTickEnable:
 1584              	.LFB33:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1585              		.loc 1 2688 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 1589 0000 10B5     		push	{r4, lr}
 1590              		.cfi_def_cfa_offset 8
 1591              		.cfi_offset 4, -8
 1592              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1593              		.loc 1 2689 0
 1594 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1595              	.LVL130:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1596              		.loc 1 2690 0
 1597 0006 034A     		ldr	r2, .L113
 1598 0008 1168     		ldr	r1, [r2]
 1599 000a 0123     		movs	r3, #1
 1600 000c 0B43     		orrs	r3, r1
 1601 000e 1360     		str	r3, [r2]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1602              		.loc 1 2691 0
 1603              		@ sp needed
 1604 0010 10BD     		pop	{r4, pc}
 1605              	.L114:
 1606 0012 C046     		.align	2
 1607              	.L113:
 1608 0014 10E000E0 		.word	-536813552
 1609              		.cfi_endproc
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 79


 1610              	.LFE33:
 1611              		.size	CySysTickEnable, .-CySysTickEnable
 1612              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1613              		.align	2
 1614              		.global	CySysTickDisableInterrupt
 1615              		.code	16
 1616              		.thumb_func
 1617              		.type	CySysTickDisableInterrupt, %function
 1618              	CySysTickDisableInterrupt:
 1619              	.LFB36:
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
 1620              		.loc 1 2737 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1625              		.loc 1 2738 0
 1626 0000 024A     		ldr	r2, .L116
 1627 0002 1368     		ldr	r3, [r2]
 1628 0004 0221     		movs	r1, #2
 1629 0006 8B43     		bics	r3, r1
 1630 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** }
 1631              		.loc 1 2739 0
 1632              		@ sp needed
 1633 000a 7047     		bx	lr
 1634              	.L117:
 1635              		.align	2
 1636              	.L116:
 1637 000c 10E000E0 		.word	-536813552
 1638              		.cfi_endproc
 1639              	.LFE36:
 1640              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1641              		.section	.text.CySysTickSetReload,"ax",%progbits
 1642              		.align	2
 1643              		.global	CySysTickSetReload
 1644              		.code	16
 1645              		.thumb_func
 1646              		.type	CySysTickSetReload, %function
 1647              	CySysTickSetReload:
 1648              	.LFB37:
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 80


2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
 1649              		.loc 1 2754 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 0
 1652              		@ frame_needed = 0, uses_anonymous_args = 0
 1653              		@ link register save eliminated.
 1654              	.LVL131:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1655              		.loc 1 2755 0
 1656 0000 0002     		lsls	r0, r0, #8
 1657              	.LVL132:
 1658 0002 000A     		lsrs	r0, r0, #8
 1659 0004 014B     		ldr	r3, .L119
 1660 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** }
 1661              		.loc 1 2756 0
 1662              		@ sp needed
 1663 0008 7047     		bx	lr
 1664              	.L120:
 1665 000a C046     		.align	2
 1666              	.L119:
 1667 000c 14E000E0 		.word	-536813548
 1668              		.cfi_endproc
 1669              	.LFE37:
 1670              		.size	CySysTickSetReload, .-CySysTickSetReload
 1671              		.section	.text.CySysTickGetReload,"ax",%progbits
 1672              		.align	2
 1673              		.global	CySysTickGetReload
 1674              		.code	16
 1675              		.thumb_func
 1676              		.type	CySysTickGetReload, %function
 1677              	CySysTickGetReload:
 1678              	.LFB38:
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 81


2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
 1679              		.loc 1 2770 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 0
 1682              		@ frame_needed = 0, uses_anonymous_args = 0
 1683              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1684              		.loc 1 2771 0
 1685 0000 024B     		ldr	r3, .L122
 1686 0002 1868     		ldr	r0, [r3]
 1687 0004 0002     		lsls	r0, r0, #8
 1688 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** }
 1689              		.loc 1 2772 0
 1690              		@ sp needed
 1691 0008 7047     		bx	lr
 1692              	.L123:
 1693 000a C046     		.align	2
 1694              	.L122:
 1695 000c 14E000E0 		.word	-536813548
 1696              		.cfi_endproc
 1697              	.LFE38:
 1698              		.size	CySysTickGetReload, .-CySysTickGetReload
 1699              		.section	.text.CySysTickGetValue,"ax",%progbits
 1700              		.align	2
 1701              		.global	CySysTickGetValue
 1702              		.code	16
 1703              		.thumb_func
 1704              		.type	CySysTickGetValue, %function
 1705              	CySysTickGetValue:
 1706              	.LFB39:
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
 1707              		.loc 1 2786 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 1711              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1712              		.loc 1 2787 0
 1713 0000 024B     		ldr	r3, .L125
 1714 0002 1868     		ldr	r0, [r3]
 1715 0004 0002     		lsls	r0, r0, #8
 1716 0006 000A     		lsrs	r0, r0, #8
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 82


2788:Generated_Source\PSoC4/CyLib.c **** }
 1717              		.loc 1 2788 0
 1718              		@ sp needed
 1719 0008 7047     		bx	lr
 1720              	.L126:
 1721 000a C046     		.align	2
 1722              	.L125:
 1723 000c 18E000E0 		.word	-536813544
 1724              		.cfi_endproc
 1725              	.LFE39:
 1726              		.size	CySysTickGetValue, .-CySysTickGetValue
 1727              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1728              		.align	2
 1729              		.global	CySysTickSetClockSource
 1730              		.code	16
 1731              		.thumb_func
 1732              		.type	CySysTickSetClockSource, %function
 1733              	CySysTickSetClockSource:
 1734              	.LFB40:
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
 1735              		.loc 1 2818 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 0
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              		@ link register save eliminated.
 1740              	.LVL133:
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1741              		.loc 1 2819 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 83


 1742 0000 0128     		cmp	r0, #1
 1743 0002 05D1     		bne	.L128
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1744              		.loc 1 2821 0
 1745 0004 054A     		ldr	r2, .L130
 1746 0006 1168     		ldr	r1, [r2]
 1747 0008 0423     		movs	r3, #4
 1748 000a 0B43     		orrs	r3, r1
 1749 000c 1360     		str	r3, [r2]
 1750 000e 04E0     		b	.L127
 1751              	.L128:
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1752              		.loc 1 2825 0
 1753 0010 024A     		ldr	r2, .L130
 1754 0012 1368     		ldr	r3, [r2]
 1755 0014 0421     		movs	r1, #4
 1756 0016 8B43     		bics	r3, r1
 1757 0018 1360     		str	r3, [r2]
 1758              	.L127:
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
 1759              		.loc 1 2827 0
 1760              		@ sp needed
 1761 001a 7047     		bx	lr
 1762              	.L131:
 1763              		.align	2
 1764              	.L130:
 1765 001c 10E000E0 		.word	-536813552
 1766              		.cfi_endproc
 1767              	.LFE40:
 1768              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1769              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1770              		.align	2
 1771              		.global	CySysTickGetClockSource
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	CySysTickGetClockSource, %function
 1775              	CySysTickGetClockSource:
 1776              	.LFB41:
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 84


2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
 1777              		.loc 1 2843 0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 1781              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1782              		.loc 1 2844 0
 1783 0000 024B     		ldr	r3, .L133
 1784 0002 1868     		ldr	r0, [r3]
 1785 0004 8008     		lsrs	r0, r0, #2
 1786 0006 0123     		movs	r3, #1
 1787 0008 1840     		ands	r0, r3
2845:Generated_Source\PSoC4/CyLib.c ****     }
 1788              		.loc 1 2845 0
 1789              		@ sp needed
 1790 000a 7047     		bx	lr
 1791              	.L134:
 1792              		.align	2
 1793              	.L133:
 1794 000c 10E000E0 		.word	-536813552
 1795              		.cfi_endproc
 1796              	.LFE41:
 1797              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1798              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1799              		.align	2
 1800              		.global	CySysTickGetCountFlag
 1801              		.code	16
 1802              		.thumb_func
 1803              		.type	CySysTickGetCountFlag, %function
 1804              	CySysTickGetCountFlag:
 1805              	.LFB42:
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
 1806              		.loc 1 2866 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 85


 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1811              		.loc 1 2867 0
 1812 0000 024B     		ldr	r3, .L136
 1813 0002 1868     		ldr	r0, [r3]
 1814 0004 000C     		lsrs	r0, r0, #16
 1815 0006 0123     		movs	r3, #1
 1816 0008 1840     		ands	r0, r3
2868:Generated_Source\PSoC4/CyLib.c **** }
 1817              		.loc 1 2868 0
 1818              		@ sp needed
 1819 000a 7047     		bx	lr
 1820              	.L137:
 1821              		.align	2
 1822              	.L136:
 1823 000c 10E000E0 		.word	-536813552
 1824              		.cfi_endproc
 1825              	.LFE42:
 1826              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1827              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1828              		.align	2
 1829              		.code	16
 1830              		.thumb_func
 1831              		.type	CySysTickServiceCallbacks, %function
 1832              	CySysTickServiceCallbacks:
 1833              	.LFB46:
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2881:Generated_Source\PSoC4/CyLib.c **** }
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 86


2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 1834              		.loc 1 2951 0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 87


 1838 0000 10B5     		push	{r4, lr}
 1839              		.cfi_def_cfa_offset 8
 1840              		.cfi_offset 4, -8
 1841              		.cfi_offset 14, -4
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1842              		.loc 1 2955 0
 1843 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1844              	.LVL134:
 1845 0006 0128     		cmp	r0, #1
 1846 0008 0BD1     		bne	.L138
 1847 000a 07E0     		b	.L143
 1848              	.LVL135:
 1849              	.L142:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1850              		.loc 1 2959 0
 1851 000c A300     		lsls	r3, r4, #2
 1852 000e 054A     		ldr	r2, .L144
 1853 0010 9B58     		ldr	r3, [r3, r2]
 1854 0012 002B     		cmp	r3, #0
 1855 0014 00D0     		beq	.L141
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1856              		.loc 1 2961 0
 1857 0016 9847     		blx	r3
 1858              	.LVL136:
 1859              	.L141:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 1860              		.loc 1 2957 0 discriminator 2
 1861 0018 0134     		adds	r4, r4, #1
 1862              	.LVL137:
 1863 001a 00E0     		b	.L139
 1864              	.LVL138:
 1865              	.L143:
 1866 001c 0024     		movs	r4, #0
 1867              	.L139:
 1868              	.LVL139:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 1869              		.loc 1 2957 0 is_stmt 0 discriminator 1
 1870 001e 042C     		cmp	r4, #4
 1871 0020 F4D9     		bls	.L142
 1872              	.LVL140:
 1873              	.L138:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 1874              		.loc 1 2965 0 is_stmt 1
 1875              		@ sp needed
 1876 0022 10BD     		pop	{r4, pc}
 1877              	.L145:
 1878              		.align	2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 88


 1879              	.L144:
 1880 0024 00000000 		.word	.LANCHOR2
 1881              		.cfi_endproc
 1882              	.LFE46:
 1883              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1884              		.section	.text.CySysTickClear,"ax",%progbits
 1885              		.align	2
 1886              		.global	CySysTickClear
 1887              		.code	16
 1888              		.thumb_func
 1889              		.type	CySysTickClear, %function
 1890              	CySysTickClear:
 1891              	.LFB43:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1892              		.loc 1 2879 0
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 0
 1895              		@ frame_needed = 0, uses_anonymous_args = 0
 1896              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 1897              		.loc 1 2880 0
 1898 0000 0022     		movs	r2, #0
 1899 0002 014B     		ldr	r3, .L147
 1900 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 1901              		.loc 1 2881 0
 1902              		@ sp needed
 1903 0006 7047     		bx	lr
 1904              	.L148:
 1905              		.align	2
 1906              	.L147:
 1907 0008 18E000E0 		.word	-536813544
 1908              		.cfi_endproc
 1909              	.LFE43:
 1910              		.size	CySysTickClear, .-CySysTickClear
 1911              		.section	.text.CySysTickInit,"ax",%progbits
 1912              		.align	2
 1913              		.global	CySysTickInit
 1914              		.code	16
 1915              		.thumb_func
 1916              		.type	CySysTickInit, %function
 1917              	CySysTickInit:
 1918              	.LFB32:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1919              		.loc 1 2658 0
 1920              		.cfi_startproc
 1921              		@ args = 0, pretend = 0, frame = 0
 1922              		@ frame_needed = 0, uses_anonymous_args = 0
 1923 0000 10B5     		push	{r4, lr}
 1924              		.cfi_def_cfa_offset 8
 1925              		.cfi_offset 4, -8
 1926              		.cfi_offset 14, -4
 1927              	.LVL141:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1928              		.loc 1 2661 0
 1929 0002 0023     		movs	r3, #0
 1930 0004 04E0     		b	.L150
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 89


 1931              	.LVL142:
 1932              	.L151:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1933              		.loc 1 2663 0 discriminator 3
 1934 0006 9900     		lsls	r1, r3, #2
 1935 0008 0020     		movs	r0, #0
 1936 000a 0B4A     		ldr	r2, .L152
 1937 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1938              		.loc 1 2661 0 discriminator 3
 1939 000e 0133     		adds	r3, r3, #1
 1940              	.LVL143:
 1941              	.L150:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1942              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1943 0010 042B     		cmp	r3, #4
 1944 0012 F8D9     		bls	.L151
2666:Generated_Source\PSoC4/CyLib.c **** 
 1945              		.loc 1 2666 0 is_stmt 1
 1946 0014 0949     		ldr	r1, .L152+4
 1947 0016 0F20     		movs	r0, #15
 1948 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1949              	.LVL144:
2669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1950              		.loc 1 2669 0
 1951 001c 0120     		movs	r0, #1
 1952 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1953              	.LVL145:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1954              		.loc 1 2672 0
 1955 0022 074B     		ldr	r3, .L152+8
 1956 0024 1869     		ldr	r0, [r3, #16]
 1957 0026 FA21     		movs	r1, #250
 1958 0028 8900     		lsls	r1, r1, #2
 1959 002a FFF7FEFF 		bl	__aeabi_uidiv
 1960              	.LVL146:
 1961 002e FFF7FEFF 		bl	CySysTickSetReload
 1962              	.LVL147:
2673:Generated_Source\PSoC4/CyLib.c **** }
 1963              		.loc 1 2673 0
 1964 0032 FFF7FEFF 		bl	CySysTickClear
 1965              	.LVL148:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1966              		.loc 1 2674 0
 1967              		@ sp needed
 1968 0036 10BD     		pop	{r4, pc}
 1969              	.L153:
 1970              		.align	2
 1971              	.L152:
 1972 0038 00000000 		.word	.LANCHOR2
 1973 003c 00000000 		.word	CySysTickServiceCallbacks
 1974 0040 00000000 		.word	.LANCHOR0
 1975              		.cfi_endproc
 1976              	.LFE32:
 1977              		.size	CySysTickInit, .-CySysTickInit
 1978              		.section	.text.CySysTickStart,"ax",%progbits
 1979              		.align	2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 90


 1980              		.global	CySysTickStart
 1981              		.code	16
 1982              		.thumb_func
 1983              		.type	CySysTickStart, %function
 1984              	CySysTickStart:
 1985              	.LFB31:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1986              		.loc 1 2629 0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 0
 1989              		@ frame_needed = 0, uses_anonymous_args = 0
 1990 0000 10B5     		push	{r4, lr}
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 4, -8
 1993              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1994              		.loc 1 2630 0
 1995 0002 064B     		ldr	r3, .L156
 1996 0004 5B69     		ldr	r3, [r3, #20]
 1997 0006 002B     		cmp	r3, #0
 1998 0008 04D1     		bne	.L155
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1999              		.loc 1 2632 0
 2000 000a FFF7FEFF 		bl	CySysTickInit
 2001              	.LVL149:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 2002              		.loc 1 2633 0
 2003 000e 0122     		movs	r2, #1
 2004 0010 024B     		ldr	r3, .L156
 2005 0012 5A61     		str	r2, [r3, #20]
 2006              	.L155:
2636:Generated_Source\PSoC4/CyLib.c **** }
 2007              		.loc 1 2636 0
 2008 0014 FFF7FEFF 		bl	CySysTickEnable
 2009              	.LVL150:
2637:Generated_Source\PSoC4/CyLib.c **** 
 2010              		.loc 1 2637 0
 2011              		@ sp needed
 2012 0018 10BD     		pop	{r4, pc}
 2013              	.L157:
 2014 001a C046     		.align	2
 2015              	.L156:
 2016 001c 00000000 		.word	.LANCHOR2
 2017              		.cfi_endproc
 2018              	.LFE31:
 2019              		.size	CySysTickStart, .-CySysTickStart
 2020              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2021              		.align	2
 2022              		.global	CySysTickSetCallback
 2023              		.code	16
 2024              		.thumb_func
 2025              		.type	CySysTickSetCallback, %function
 2026              	CySysTickSetCallback:
 2027              	.LFB44:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2028              		.loc 1 2914 0
 2029              		.cfi_startproc
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 91


 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 0, uses_anonymous_args = 0
 2032              		@ link register save eliminated.
 2033              	.LVL151:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2034              		.loc 1 2917 0
 2035 0000 024A     		ldr	r2, .L159
 2036 0002 8300     		lsls	r3, r0, #2
 2037 0004 9858     		ldr	r0, [r3, r2]
 2038              	.LVL152:
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2039              		.loc 1 2918 0
 2040 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 2041              		.loc 1 2920 0
 2042              		@ sp needed
 2043 0008 7047     		bx	lr
 2044              	.L160:
 2045 000a C046     		.align	2
 2046              	.L159:
 2047 000c 00000000 		.word	.LANCHOR2
 2048              		.cfi_endproc
 2049              	.LFE44:
 2050              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2051              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2052              		.align	2
 2053              		.global	CySysTickGetCallback
 2054              		.code	16
 2055              		.thumb_func
 2056              		.type	CySysTickGetCallback, %function
 2057              	CySysTickGetCallback:
 2058              	.LFB45:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2059              		.loc 1 2938 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 0
 2062              		@ frame_needed = 0, uses_anonymous_args = 0
 2063              		@ link register save eliminated.
 2064              	.LVL153:
2939:Generated_Source\PSoC4/CyLib.c **** }
 2065              		.loc 1 2939 0
 2066 0000 8000     		lsls	r0, r0, #2
 2067              	.LVL154:
 2068 0002 014B     		ldr	r3, .L162
 2069 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 2070              		.loc 1 2940 0
 2071              		@ sp needed
 2072 0006 7047     		bx	lr
 2073              	.L163:
 2074              		.align	2
 2075              	.L162:
 2076 0008 00000000 		.word	.LANCHOR2
 2077              		.cfi_endproc
 2078              	.LFE45:
 2079              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2080              		.section	.text.CyGetUniqueId,"ax",%progbits
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 92


 2081              		.align	2
 2082              		.global	CyGetUniqueId
 2083              		.code	16
 2084              		.thumb_func
 2085              		.type	CyGetUniqueId, %function
 2086              	CyGetUniqueId:
 2087              	.LFB47:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2088              		.loc 1 2983 0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 0
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092              		@ link register save eliminated.
 2093              	.LVL155:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2094              		.loc 1 2985 0
 2095 0000 134B     		ldr	r3, .L165
 2096 0002 1B78     		ldrb	r3, [r3]
 2097 0004 DAB2     		uxtb	r2, r3
 2098 0006 0260     		str	r2, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2099              		.loc 1 2986 0
 2100 0008 124B     		ldr	r3, .L165+4
 2101 000a 1B78     		ldrb	r3, [r3]
 2102 000c 1B02     		lsls	r3, r3, #8
 2103 000e 1343     		orrs	r3, r2
 2104 0010 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2105              		.loc 1 2987 0
 2106 0012 114A     		ldr	r2, .L165+8
 2107 0014 1278     		ldrb	r2, [r2]
 2108 0016 1204     		lsls	r2, r2, #16
 2109 0018 1343     		orrs	r3, r2
 2110 001a 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2111              		.loc 1 2988 0
 2112 001c 0F4A     		ldr	r2, .L165+12
 2113 001e 1278     		ldrb	r2, [r2]
 2114 0020 1206     		lsls	r2, r2, #24
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 93


 2115 0022 1343     		orrs	r3, r2
 2116 0024 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2117              		.loc 1 2990 0
 2118 0026 0E4B     		ldr	r3, .L165+16
 2119 0028 1B78     		ldrb	r3, [r3]
 2120 002a DAB2     		uxtb	r2, r3
 2121 002c 4260     		str	r2, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2122              		.loc 1 2991 0
 2123 002e 0D4B     		ldr	r3, .L165+20
 2124 0030 1B78     		ldrb	r3, [r3]
 2125 0032 1B02     		lsls	r3, r3, #8
 2126 0034 1343     		orrs	r3, r2
 2127 0036 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2128              		.loc 1 2992 0
 2129 0038 0B4A     		ldr	r2, .L165+24
 2130 003a 1278     		ldrb	r2, [r2]
 2131 003c 1204     		lsls	r2, r2, #16
 2132 003e 1343     		orrs	r3, r2
 2133 0040 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2134              		.loc 1 2993 0
 2135 0042 0A4A     		ldr	r2, .L165+28
 2136 0044 1278     		ldrb	r2, [r2]
 2137 0046 1206     		lsls	r2, r2, #24
 2138 0048 1343     		orrs	r3, r2
 2139 004a 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2140              		.loc 1 3005 0
 2141              		@ sp needed
 2142 004c 7047     		bx	lr
 2143              	.L166:
 2144 004e C046     		.align	2
 2145              	.L165:
 2146 0050 78F1FF0F 		.word	268431736
 2147 0054 79F1FF0F 		.word	268431737
 2148 0058 7AF1FF0F 		.word	268431738
 2149 005c 7BF1FF0F 		.word	268431739
 2150 0060 7CF1FF0F 		.word	268431740
 2151 0064 7DF1FF0F 		.word	268431741
 2152 0068 7EF1FF0F 		.word	268431742
 2153 006c 7FF1FF0F 		.word	268431743
 2154              		.cfi_endproc
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 94


 2155              	.LFE47:
 2156              		.size	CyGetUniqueId, .-CyGetUniqueId
 2157              		.global	CySysClkPumpConfig
 2158              		.global	cyImoFreqMhz2DpllOffset
 2159              		.global	CySysTickInitVar
 2160              		.global	cydelay32kMs
 2161              		.global	cydelayFreqMhz
 2162              		.global	cydelayFreqKhz
 2163              		.global	cydelayFreqHz
 2164              		.section	.rodata
 2165              		.align	2
 2166              		.set	.LANCHOR1,. + 0
 2167              		.type	cyImoFreqMhz2DpllOffset, %object
 2168              		.size	cyImoFreqMhz2DpllOffset, 23
 2169              	cyImoFreqMhz2DpllOffset:
 2170 0000 EE       		.byte	-18
 2171 0001 DB       		.byte	-37
 2172 0002 C9       		.byte	-55
 2173 0003 B9       		.byte	-71
 2174 0004 AA       		.byte	-86
 2175 0005 9B       		.byte	-101
 2176 0006 8E       		.byte	-114
 2177 0007 82       		.byte	-126
 2178 0008 76       		.byte	118
 2179 0009 6B       		.byte	107
 2180 000a 60       		.byte	96
 2181 000b 56       		.byte	86
 2182 000c 4D       		.byte	77
 2183 000d 44       		.byte	68
 2184 000e 3B       		.byte	59
 2185 000f 33       		.byte	51
 2186 0010 2C       		.byte	44
 2187 0011 24       		.byte	36
 2188 0012 1D       		.byte	29
 2189 0013 17       		.byte	23
 2190 0014 10       		.byte	16
 2191 0015 0A       		.byte	10
 2192 0016 04       		.byte	4
 2193              		.data
 2194              		.align	2
 2195              		.set	.LANCHOR0,. + 0
 2196              		.type	CySysClkPumpConfig, %object
 2197              		.size	CySysClkPumpConfig, 4
 2198              	CySysClkPumpConfig:
 2199 0000 01000000 		.word	1
 2200              		.type	cydelay32kMs, %object
 2201              		.size	cydelay32kMs, 4
 2202              	cydelay32kMs:
 2203 0004 0000E02E 		.word	786432000
 2204              		.type	cydelayFreqKhz, %object
 2205              		.size	cydelayFreqKhz, 4
 2206              	cydelayFreqKhz:
 2207 0008 C05D0000 		.word	24000
 2208              		.type	cydelayFreqMhz, %object
 2209              		.size	cydelayFreqMhz, 1
 2210              	cydelayFreqMhz:
 2211 000c 18       		.byte	24
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 95


 2212 000d 000000   		.space	3
 2213              		.type	cydelayFreqHz, %object
 2214              		.size	cydelayFreqHz, 4
 2215              	cydelayFreqHz:
 2216 0010 00366E01 		.word	24000000
 2217              		.bss
 2218              		.align	2
 2219              		.set	.LANCHOR2,. + 0
 2220              		.type	CySysTickCallbacks, %object
 2221              		.size	CySysTickCallbacks, 20
 2222              	CySysTickCallbacks:
 2223 0000 00000000 		.space	20
 2223      00000000 
 2223      00000000 
 2223      00000000 
 2223      00000000 
 2224              		.type	CySysTickInitVar, %object
 2225              		.size	CySysTickInitVar, 4
 2226              	CySysTickInitVar:
 2227 0014 00000000 		.space	4
 2228              		.text
 2229              	.Letext0:
 2230              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2231              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2232              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2233              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2234              		.section	.debug_info,"",%progbits
 2235              	.Ldebug_info0:
 2236 0000 CC0B0000 		.4byte	0xbcc
 2237 0004 0400     		.2byte	0x4
 2238 0006 00000000 		.4byte	.Ldebug_abbrev0
 2239 000a 04       		.byte	0x4
 2240 000b 01       		.uleb128 0x1
 2241 000c FC040000 		.4byte	.LASF109
 2242 0010 0C       		.byte	0xc
 2243 0011 CF060000 		.4byte	.LASF110
 2244 0015 38000000 		.4byte	.LASF111
 2245 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2246 001d 00000000 		.4byte	0
 2247 0021 00000000 		.4byte	.Ldebug_line0
 2248 0025 02       		.uleb128 0x2
 2249 0026 01       		.byte	0x1
 2250 0027 06       		.byte	0x6
 2251 0028 4C010000 		.4byte	.LASF0
 2252 002c 02       		.uleb128 0x2
 2253 002d 01       		.byte	0x1
 2254 002e 08       		.byte	0x8
 2255 002f AB040000 		.4byte	.LASF1
 2256 0033 02       		.uleb128 0x2
 2257 0034 02       		.byte	0x2
 2258 0035 05       		.byte	0x5
 2259 0036 B9040000 		.4byte	.LASF2
 2260 003a 02       		.uleb128 0x2
 2261 003b 02       		.byte	0x2
 2262 003c 07       		.byte	0x7
 2263 003d 1D030000 		.4byte	.LASF3
 2264 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 96


 2265 0042 04       		.byte	0x4
 2266 0043 05       		.byte	0x5
 2267 0044 B1010000 		.4byte	.LASF4
 2268 0048 02       		.uleb128 0x2
 2269 0049 04       		.byte	0x4
 2270 004a 07       		.byte	0x7
 2271 004b C0020000 		.4byte	.LASF5
 2272 004f 02       		.uleb128 0x2
 2273 0050 08       		.byte	0x8
 2274 0051 05       		.byte	0x5
 2275 0052 3E010000 		.4byte	.LASF6
 2276 0056 02       		.uleb128 0x2
 2277 0057 08       		.byte	0x8
 2278 0058 07       		.byte	0x7
 2279 0059 BF000000 		.4byte	.LASF7
 2280 005d 03       		.uleb128 0x3
 2281 005e 04       		.byte	0x4
 2282 005f 05       		.byte	0x5
 2283 0060 696E7400 		.ascii	"int\000"
 2284 0064 02       		.uleb128 0x2
 2285 0065 04       		.byte	0x4
 2286 0066 07       		.byte	0x7
 2287 0067 A4020000 		.4byte	.LASF8
 2288 006b 04       		.uleb128 0x4
 2289 006c DC010000 		.4byte	.LASF9
 2290 0070 02       		.byte	0x2
 2291 0071 D201     		.2byte	0x1d2
 2292 0073 2C000000 		.4byte	0x2c
 2293 0077 04       		.uleb128 0x4
 2294 0078 0F000000 		.4byte	.LASF10
 2295 007c 02       		.byte	0x2
 2296 007d D301     		.2byte	0x1d3
 2297 007f 3A000000 		.4byte	0x3a
 2298 0083 04       		.uleb128 0x4
 2299 0084 05020000 		.4byte	.LASF11
 2300 0088 02       		.byte	0x2
 2301 0089 D401     		.2byte	0x1d4
 2302 008b 48000000 		.4byte	0x48
 2303 008f 02       		.uleb128 0x2
 2304 0090 04       		.byte	0x4
 2305 0091 04       		.byte	0x4
 2306 0092 47040000 		.4byte	.LASF12
 2307 0096 02       		.uleb128 0x2
 2308 0097 08       		.byte	0x8
 2309 0098 04       		.byte	0x4
 2310 0099 F8010000 		.4byte	.LASF13
 2311 009d 02       		.uleb128 0x2
 2312 009e 01       		.byte	0x1
 2313 009f 08       		.byte	0x8
 2314 00a0 8E050000 		.4byte	.LASF14
 2315 00a4 04       		.uleb128 0x4
 2316 00a5 9F040000 		.4byte	.LASF15
 2317 00a9 02       		.byte	0x2
 2318 00aa 7C02     		.2byte	0x27c
 2319 00ac B0000000 		.4byte	0xb0
 2320 00b0 05       		.uleb128 0x5
 2321 00b1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 97


 2322 00b5 04       		.uleb128 0x4
 2323 00b6 AF030000 		.4byte	.LASF16
 2324 00ba 02       		.byte	0x2
 2325 00bb 7E02     		.2byte	0x27e
 2326 00bd C1000000 		.4byte	0xc1
 2327 00c1 05       		.uleb128 0x5
 2328 00c2 83000000 		.4byte	0x83
 2329 00c6 04       		.uleb128 0x4
 2330 00c7 AB050000 		.4byte	.LASF17
 2331 00cb 02       		.byte	0x2
 2332 00cc 8E02     		.2byte	0x28e
 2333 00ce D2000000 		.4byte	0xd2
 2334 00d2 06       		.uleb128 0x6
 2335 00d3 04       		.byte	0x4
 2336 00d4 D8000000 		.4byte	0xd8
 2337 00d8 07       		.uleb128 0x7
 2338 00d9 02       		.uleb128 0x2
 2339 00da 08       		.byte	0x8
 2340 00db 04       		.byte	0x4
 2341 00dc EC030000 		.4byte	.LASF18
 2342 00e0 02       		.uleb128 0x2
 2343 00e1 04       		.byte	0x4
 2344 00e2 07       		.byte	0x7
 2345 00e3 D1030000 		.4byte	.LASF19
 2346 00e7 08       		.uleb128 0x8
 2347 00e8 63040000 		.4byte	.LASF20
 2348 00ec 03       		.byte	0x3
 2349 00ed F5       		.byte	0xf5
 2350 00ee D2000000 		.4byte	0xd2
 2351 00f2 09       		.uleb128 0x9
 2352 00f3 A6060000 		.4byte	.LASF21
 2353 00f7 01       		.byte	0x1
 2354 00f8 6B       		.byte	0x6b
 2355 00f9 00000000 		.4byte	.LFB1
 2356 00fd 14000000 		.4byte	.LFE1-.LFB1
 2357 0101 01       		.uleb128 0x1
 2358 0102 9C       		.byte	0x9c
 2359 0103 0A       		.uleb128 0xa
 2360 0104 95030000 		.4byte	.LASF22
 2361 0108 01       		.byte	0x1
 2362 0109 1D01     		.2byte	0x11d
 2363 010b 00000000 		.4byte	.LFB4
 2364 010f 14000000 		.4byte	.LFE4-.LFB4
 2365 0113 01       		.uleb128 0x1
 2366 0114 9C       		.byte	0x9c
 2367 0115 0B       		.uleb128 0xb
 2368 0116 D2020000 		.4byte	.LASF23
 2369 011a 01       		.byte	0x1
 2370 011b 8B       		.byte	0x8b
 2371 011c 00000000 		.4byte	.LFB2
 2372 0120 18000000 		.4byte	.LFE2-.LFB2
 2373 0124 01       		.uleb128 0x1
 2374 0125 9C       		.byte	0x9c
 2375 0126 34010000 		.4byte	0x134
 2376 012a 0C       		.uleb128 0xc
 2377 012b 06000000 		.4byte	.LVL0
 2378 012f 03010000 		.4byte	0x103
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 98


 2379 0133 00       		.byte	0
 2380 0134 0D       		.uleb128 0xd
 2381 0135 93010000 		.4byte	.LASF80
 2382 0139 01       		.byte	0x1
 2383 013a 3001     		.2byte	0x130
 2384 013c 83000000 		.4byte	0x83
 2385 0140 00000000 		.4byte	.LFB5
 2386 0144 14000000 		.4byte	.LFE5-.LFB5
 2387 0148 01       		.uleb128 0x1
 2388 0149 9C       		.byte	0x9c
 2389 014a 0E       		.uleb128 0xe
 2390 014b 1F000000 		.4byte	.LASF24
 2391 014f 01       		.byte	0x1
 2392 0150 AD01     		.2byte	0x1ad
 2393 0152 00000000 		.4byte	.LFB6
 2394 0156 20000000 		.4byte	.LFE6-.LFB6
 2395 015a 01       		.uleb128 0x1
 2396 015b 9C       		.byte	0x9c
 2397 015c A3010000 		.4byte	0x1a3
 2398 0160 0F       		.uleb128 0xf
 2399 0161 E1040000 		.4byte	.LASF28
 2400 0165 01       		.byte	0x1
 2401 0166 AD01     		.2byte	0x1ad
 2402 0168 83000000 		.4byte	0x83
 2403 016c 00000000 		.4byte	.LLST0
 2404 0170 10       		.uleb128 0x10
 2405 0171 69010000 		.4byte	.LASF25
 2406 0175 01       		.byte	0x1
 2407 0176 AF01     		.2byte	0x1af
 2408 0178 6B000000 		.4byte	0x6b
 2409 017c 2C000000 		.4byte	.LLST1
 2410 0180 10       		.uleb128 0x10
 2411 0181 FB060000 		.4byte	.LASF26
 2412 0185 01       		.byte	0x1
 2413 0186 B001     		.2byte	0x1b0
 2414 0188 83000000 		.4byte	0x83
 2415 018c 3F000000 		.4byte	.LLST2
 2416 0190 0C       		.uleb128 0xc
 2417 0191 08000000 		.4byte	.LVL2
 2418 0195 980B0000 		.4byte	0xb98
 2419 0199 0C       		.uleb128 0xc
 2420 019a 1A000000 		.4byte	.LVL6
 2421 019e A30B0000 		.4byte	0xba3
 2422 01a2 00       		.byte	0
 2423 01a3 0E       		.uleb128 0xe
 2424 01a4 95000000 		.4byte	.LASF27
 2425 01a8 01       		.byte	0x1
 2426 01a9 D901     		.2byte	0x1d9
 2427 01ab 00000000 		.4byte	.LFB7
 2428 01af 34000000 		.4byte	.LFE7-.LFB7
 2429 01b3 01       		.uleb128 0x1
 2430 01b4 9C       		.byte	0x9c
 2431 01b5 C8010000 		.4byte	0x1c8
 2432 01b9 11       		.uleb128 0x11
 2433 01ba F1010000 		.4byte	.LASF29
 2434 01be 01       		.byte	0x1
 2435 01bf D901     		.2byte	0x1d9
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 99


 2436 01c1 83000000 		.4byte	0x83
 2437 01c5 01       		.uleb128 0x1
 2438 01c6 50       		.byte	0x50
 2439 01c7 00       		.byte	0
 2440 01c8 12       		.uleb128 0x12
 2441 01c9 11020000 		.4byte	.LASF34
 2442 01cd 01       		.byte	0x1
 2443 01ce FE01     		.2byte	0x1fe
 2444 01d0 83000000 		.4byte	0x83
 2445 01d4 00000000 		.4byte	.LFB8
 2446 01d8 1C000000 		.4byte	.LFE8-.LFB8
 2447 01dc 01       		.uleb128 0x1
 2448 01dd 9C       		.byte	0x9c
 2449 01de 15020000 		.4byte	0x215
 2450 01e2 10       		.uleb128 0x10
 2451 01e3 69010000 		.4byte	.LASF25
 2452 01e7 01       		.byte	0x1
 2453 01e8 0002     		.2byte	0x200
 2454 01ea 6B000000 		.4byte	0x6b
 2455 01ee 5D000000 		.4byte	.LLST3
 2456 01f2 10       		.uleb128 0x10
 2457 01f3 00040000 		.4byte	.LASF30
 2458 01f7 01       		.byte	0x1
 2459 01f8 0102     		.2byte	0x201
 2460 01fa 83000000 		.4byte	0x83
 2461 01fe 70000000 		.4byte	.LLST4
 2462 0202 0C       		.uleb128 0xc
 2463 0203 06000000 		.4byte	.LVL9
 2464 0207 980B0000 		.4byte	0xb98
 2465 020b 0C       		.uleb128 0xc
 2466 020c 12000000 		.4byte	.LVL11
 2467 0210 A30B0000 		.4byte	0xba3
 2468 0214 00       		.byte	0
 2469 0215 0E       		.uleb128 0xe
 2470 0216 DE050000 		.4byte	.LASF31
 2471 021a 01       		.byte	0x1
 2472 021b 3502     		.2byte	0x235
 2473 021d 00000000 		.4byte	.LFB9
 2474 0221 24000000 		.4byte	.LFE9-.LFB9
 2475 0225 01       		.uleb128 0x1
 2476 0226 9C       		.byte	0x9c
 2477 0227 5E020000 		.4byte	0x25e
 2478 022b 0F       		.uleb128 0xf
 2479 022c 9E060000 		.4byte	.LASF32
 2480 0230 01       		.byte	0x1
 2481 0231 3502     		.2byte	0x235
 2482 0233 83000000 		.4byte	0x83
 2483 0237 8E000000 		.4byte	.LLST5
 2484 023b 10       		.uleb128 0x10
 2485 023c 69010000 		.4byte	.LASF25
 2486 0240 01       		.byte	0x1
 2487 0241 3702     		.2byte	0x237
 2488 0243 6B000000 		.4byte	0x6b
 2489 0247 BA000000 		.4byte	.LLST6
 2490 024b 0C       		.uleb128 0xc
 2491 024c 08000000 		.4byte	.LVL14
 2492 0250 980B0000 		.4byte	0xb98
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 100


 2493 0254 0C       		.uleb128 0xc
 2494 0255 1E000000 		.4byte	.LVL16
 2495 0259 A30B0000 		.4byte	0xba3
 2496 025d 00       		.byte	0
 2497 025e 0E       		.uleb128 0xe
 2498 025f C8050000 		.4byte	.LASF33
 2499 0263 01       		.byte	0x1
 2500 0264 D503     		.2byte	0x3d5
 2501 0266 00000000 		.4byte	.LFB11
 2502 026a 24000000 		.4byte	.LFE11-.LFB11
 2503 026e 01       		.uleb128 0x1
 2504 026f 9C       		.byte	0x9c
 2505 0270 A7020000 		.4byte	0x2a7
 2506 0274 0F       		.uleb128 0xf
 2507 0275 9E060000 		.4byte	.LASF32
 2508 0279 01       		.byte	0x1
 2509 027a D503     		.2byte	0x3d5
 2510 027c 83000000 		.4byte	0x83
 2511 0280 CD000000 		.4byte	.LLST7
 2512 0284 10       		.uleb128 0x10
 2513 0285 69010000 		.4byte	.LASF25
 2514 0289 01       		.byte	0x1
 2515 028a D703     		.2byte	0x3d7
 2516 028c 6B000000 		.4byte	0x6b
 2517 0290 F9000000 		.4byte	.LLST8
 2518 0294 0C       		.uleb128 0xc
 2519 0295 08000000 		.4byte	.LVL18
 2520 0299 980B0000 		.4byte	0xb98
 2521 029d 0C       		.uleb128 0xc
 2522 029e 1E000000 		.4byte	.LVL20
 2523 02a2 A30B0000 		.4byte	0xba3
 2524 02a6 00       		.byte	0
 2525 02a7 12       		.uleb128 0x12
 2526 02a8 09030000 		.4byte	.LASF35
 2527 02ac 01       		.byte	0x1
 2528 02ad A008     		.2byte	0x8a0
 2529 02af 83000000 		.4byte	0x83
 2530 02b3 00000000 		.4byte	.LFB12
 2531 02b7 14000000 		.4byte	.LFE12-.LFB12
 2532 02bb 01       		.uleb128 0x1
 2533 02bc 9C       		.byte	0x9c
 2534 02bd E0020000 		.4byte	0x2e0
 2535 02c1 0F       		.uleb128 0xf
 2536 02c2 F5040000 		.4byte	.LASF36
 2537 02c6 01       		.byte	0x1
 2538 02c7 A008     		.2byte	0x8a0
 2539 02c9 83000000 		.4byte	0x83
 2540 02cd 0C010000 		.4byte	.LLST9
 2541 02d1 13       		.uleb128 0x13
 2542 02d2 C4030000 		.4byte	.LASF37
 2543 02d6 01       		.byte	0x1
 2544 02d7 A208     		.2byte	0x8a2
 2545 02d9 83000000 		.4byte	0x83
 2546 02dd 01       		.uleb128 0x1
 2547 02de 50       		.byte	0x50
 2548 02df 00       		.byte	0
 2549 02e0 12       		.uleb128 0x12
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 101


 2550 02e1 B1000000 		.4byte	.LASF38
 2551 02e5 01       		.byte	0x1
 2552 02e6 B708     		.2byte	0x8b7
 2553 02e8 83000000 		.4byte	0x83
 2554 02ec 00000000 		.4byte	.LFB13
 2555 02f0 10000000 		.4byte	.LFE13-.LFB13
 2556 02f4 01       		.uleb128 0x1
 2557 02f5 9C       		.byte	0x9c
 2558 02f6 09030000 		.4byte	0x309
 2559 02fa 13       		.uleb128 0x13
 2560 02fb 16000000 		.4byte	.LASF39
 2561 02ff 01       		.byte	0x1
 2562 0300 B908     		.2byte	0x8b9
 2563 0302 83000000 		.4byte	0x83
 2564 0306 01       		.uleb128 0x1
 2565 0307 50       		.byte	0x50
 2566 0308 00       		.byte	0
 2567 0309 0E       		.uleb128 0xe
 2568 030a E7000000 		.4byte	.LASF40
 2569 030e 01       		.byte	0x1
 2570 030f CE08     		.2byte	0x8ce
 2571 0311 00000000 		.4byte	.LFB14
 2572 0315 0C000000 		.4byte	.LFE14-.LFB14
 2573 0319 01       		.uleb128 0x1
 2574 031a 9C       		.byte	0x9c
 2575 031b 2E030000 		.4byte	0x32e
 2576 031f 11       		.uleb128 0x11
 2577 0320 0C020000 		.4byte	.LASF41
 2578 0324 01       		.byte	0x1
 2579 0325 CE08     		.2byte	0x8ce
 2580 0327 83000000 		.4byte	0x83
 2581 032b 01       		.uleb128 0x1
 2582 032c 50       		.byte	0x50
 2583 032d 00       		.byte	0
 2584 032e 0E       		.uleb128 0xe
 2585 032f C3040000 		.4byte	.LASF42
 2586 0333 01       		.byte	0x1
 2587 0334 8509     		.2byte	0x985
 2588 0336 00000000 		.4byte	.LFB21
 2589 033a 14000000 		.4byte	.LFE21-.LFB21
 2590 033e 01       		.uleb128 0x1
 2591 033f 9C       		.byte	0x9c
 2592 0340 55030000 		.4byte	0x355
 2593 0344 0F       		.uleb128 0xf
 2594 0345 5E030000 		.4byte	.LASF43
 2595 0349 01       		.byte	0x1
 2596 034a 8509     		.2byte	0x985
 2597 034c 6B000000 		.4byte	0x6b
 2598 0350 2A010000 		.4byte	.LLST10
 2599 0354 00       		.byte	0
 2600 0355 12       		.uleb128 0x12
 2601 0356 30010000 		.4byte	.LASF44
 2602 035a 01       		.byte	0x1
 2603 035b 9709     		.2byte	0x997
 2604 035d 6B000000 		.4byte	0x6b
 2605 0361 00000000 		.4byte	.LFB22
 2606 0365 18000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 102


 2607 0369 01       		.uleb128 0x1
 2608 036a 9C       		.byte	0x9c
 2609 036b 80030000 		.4byte	0x380
 2610 036f 0F       		.uleb128 0xf
 2611 0370 5E030000 		.4byte	.LASF43
 2612 0374 01       		.byte	0x1
 2613 0375 9709     		.2byte	0x997
 2614 0377 6B000000 		.4byte	0x6b
 2615 037b 4B010000 		.4byte	.LLST11
 2616 037f 00       		.byte	0
 2617 0380 0E       		.uleb128 0xe
 2618 0381 BA010000 		.4byte	.LASF45
 2619 0385 01       		.byte	0x1
 2620 0386 A709     		.2byte	0x9a7
 2621 0388 00000000 		.4byte	.LFB23
 2622 038c 14000000 		.4byte	.LFE23-.LFB23
 2623 0390 01       		.uleb128 0x1
 2624 0391 9C       		.byte	0x9c
 2625 0392 A7030000 		.4byte	0x3a7
 2626 0396 0F       		.uleb128 0xf
 2627 0397 5E030000 		.4byte	.LASF43
 2628 039b 01       		.byte	0x1
 2629 039c A709     		.2byte	0x9a7
 2630 039e 6B000000 		.4byte	0x6b
 2631 03a2 6C010000 		.4byte	.LLST12
 2632 03a6 00       		.byte	0
 2633 03a7 0E       		.uleb128 0xe
 2634 03a8 F9020000 		.4byte	.LASF46
 2635 03ac 01       		.byte	0x1
 2636 03ad B509     		.2byte	0x9b5
 2637 03af 00000000 		.4byte	.LFB24
 2638 03b3 14000000 		.4byte	.LFE24-.LFB24
 2639 03b7 01       		.uleb128 0x1
 2640 03b8 9C       		.byte	0x9c
 2641 03b9 CE030000 		.4byte	0x3ce
 2642 03bd 0F       		.uleb128 0xf
 2643 03be 5E030000 		.4byte	.LASF43
 2644 03c2 01       		.byte	0x1
 2645 03c3 B509     		.2byte	0x9b5
 2646 03c5 6B000000 		.4byte	0x6b
 2647 03c9 8D010000 		.4byte	.LLST13
 2648 03cd 00       		.byte	0
 2649 03ce 0E       		.uleb128 0xe
 2650 03cf DA030000 		.4byte	.LASF47
 2651 03d3 01       		.byte	0x1
 2652 03d4 C409     		.2byte	0x9c4
 2653 03d6 00000000 		.4byte	.LFB25
 2654 03da 14000000 		.4byte	.LFE25-.LFB25
 2655 03de 01       		.uleb128 0x1
 2656 03df 9C       		.byte	0x9c
 2657 03e0 F5030000 		.4byte	0x3f5
 2658 03e4 0F       		.uleb128 0xf
 2659 03e5 5E030000 		.4byte	.LASF43
 2660 03e9 01       		.byte	0x1
 2661 03ea C409     		.2byte	0x9c4
 2662 03ec 6B000000 		.4byte	0x6b
 2663 03f0 AE010000 		.4byte	.LLST14
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 103


 2664 03f4 00       		.byte	0
 2665 03f5 0E       		.uleb128 0xe
 2666 03f6 A4040000 		.4byte	.LASF48
 2667 03fa 01       		.byte	0x1
 2668 03fb D309     		.2byte	0x9d3
 2669 03fd 00000000 		.4byte	.LFB26
 2670 0401 04000000 		.4byte	.LFE26-.LFB26
 2671 0405 01       		.uleb128 0x1
 2672 0406 9C       		.byte	0x9c
 2673 0407 1A040000 		.4byte	0x41a
 2674 040b 11       		.uleb128 0x11
 2675 040c F5040000 		.4byte	.LASF36
 2676 0410 01       		.byte	0x1
 2677 0411 D309     		.2byte	0x9d3
 2678 0413 6B000000 		.4byte	0x6b
 2679 0417 01       		.uleb128 0x1
 2680 0418 50       		.byte	0x50
 2681 0419 00       		.byte	0
 2682 041a 12       		.uleb128 0x12
 2683 041b 83030000 		.4byte	.LASF49
 2684 041f 01       		.byte	0x1
 2685 0420 E708     		.2byte	0x8e7
 2686 0422 C6000000 		.4byte	0xc6
 2687 0426 00000000 		.4byte	.LFB15
 2688 042a 20000000 		.4byte	.LFE15-.LFB15
 2689 042e 01       		.uleb128 0x1
 2690 042f 9C       		.byte	0x9c
 2691 0430 82040000 		.4byte	0x482
 2692 0434 0F       		.uleb128 0xf
 2693 0435 5E030000 		.4byte	.LASF43
 2694 0439 01       		.byte	0x1
 2695 043a E708     		.2byte	0x8e7
 2696 043c 6B000000 		.4byte	0x6b
 2697 0440 CF010000 		.4byte	.LLST15
 2698 0444 0F       		.uleb128 0xf
 2699 0445 F8030000 		.4byte	.LASF50
 2700 0449 01       		.byte	0x1
 2701 044a E708     		.2byte	0x8e7
 2702 044c C6000000 		.4byte	0xc6
 2703 0450 F0010000 		.4byte	.LLST16
 2704 0454 13       		.uleb128 0x13
 2705 0455 7A060000 		.4byte	.LASF51
 2706 0459 01       		.byte	0x1
 2707 045a E908     		.2byte	0x8e9
 2708 045c C6000000 		.4byte	0xc6
 2709 0460 01       		.uleb128 0x1
 2710 0461 50       		.byte	0x50
 2711 0462 14       		.uleb128 0x14
 2712 0463 00000000 		.4byte	.LASF52
 2713 0467 01       		.byte	0x1
 2714 0468 EA08     		.2byte	0x8ea
 2715 046a 82040000 		.4byte	0x482
 2716 046e 00000020 		.4byte	0x20000000
 2717 0472 15       		.uleb128 0x15
 2718 0473 10000000 		.4byte	.LVL41
 2719 0477 F5030000 		.4byte	0x3f5
 2720 047b 16       		.uleb128 0x16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 104


 2721 047c 01       		.uleb128 0x1
 2722 047d 50       		.byte	0x50
 2723 047e 01       		.uleb128 0x1
 2724 047f 30       		.byte	0x30
 2725 0480 00       		.byte	0
 2726 0481 00       		.byte	0
 2727 0482 06       		.uleb128 0x6
 2728 0483 04       		.byte	0x4
 2729 0484 C6000000 		.4byte	0xc6
 2730 0488 12       		.uleb128 0x12
 2731 0489 CF040000 		.4byte	.LASF53
 2732 048d 01       		.byte	0x1
 2733 048e 0909     		.2byte	0x909
 2734 0490 C6000000 		.4byte	0xc6
 2735 0494 00000000 		.4byte	.LFB16
 2736 0498 1C000000 		.4byte	.LFE16-.LFB16
 2737 049c 01       		.uleb128 0x1
 2738 049d 9C       		.byte	0x9c
 2739 049e D2040000 		.4byte	0x4d2
 2740 04a2 0F       		.uleb128 0xf
 2741 04a3 5E030000 		.4byte	.LASF43
 2742 04a7 01       		.byte	0x1
 2743 04a8 0909     		.2byte	0x909
 2744 04aa 6B000000 		.4byte	0x6b
 2745 04ae 1C020000 		.4byte	.LLST17
 2746 04b2 14       		.uleb128 0x14
 2747 04b3 00000000 		.4byte	.LASF52
 2748 04b7 01       		.byte	0x1
 2749 04b8 0B09     		.2byte	0x90b
 2750 04ba 82040000 		.4byte	0x482
 2751 04be 00000020 		.4byte	0x20000000
 2752 04c2 15       		.uleb128 0x15
 2753 04c3 0E000000 		.4byte	.LVL47
 2754 04c7 F5030000 		.4byte	0x3f5
 2755 04cb 16       		.uleb128 0x16
 2756 04cc 01       		.uleb128 0x1
 2757 04cd 50       		.byte	0x50
 2758 04ce 01       		.uleb128 0x1
 2759 04cf 30       		.byte	0x30
 2760 04d0 00       		.byte	0
 2761 04d1 00       		.byte	0
 2762 04d2 12       		.uleb128 0x12
 2763 04d3 4F030000 		.4byte	.LASF54
 2764 04d7 01       		.byte	0x1
 2765 04d8 1F09     		.2byte	0x91f
 2766 04da C6000000 		.4byte	0xc6
 2767 04de 00000000 		.4byte	.LFB17
 2768 04e2 22000000 		.4byte	.LFE17-.LFB17
 2769 04e6 01       		.uleb128 0x1
 2770 04e7 9C       		.byte	0x9c
 2771 04e8 3A050000 		.4byte	0x53a
 2772 04ec 0F       		.uleb128 0xf
 2773 04ed 5E030000 		.4byte	.LASF43
 2774 04f1 01       		.byte	0x1
 2775 04f2 1F09     		.2byte	0x91f
 2776 04f4 6B000000 		.4byte	0x6b
 2777 04f8 3D020000 		.4byte	.LLST18
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 105


 2778 04fc 0F       		.uleb128 0xf
 2779 04fd F8030000 		.4byte	.LASF50
 2780 0501 01       		.byte	0x1
 2781 0502 1F09     		.2byte	0x91f
 2782 0504 C6000000 		.4byte	0xc6
 2783 0508 5E020000 		.4byte	.LLST19
 2784 050c 13       		.uleb128 0x13
 2785 050d 7A060000 		.4byte	.LASF51
 2786 0511 01       		.byte	0x1
 2787 0512 2109     		.2byte	0x921
 2788 0514 C6000000 		.4byte	0xc6
 2789 0518 01       		.uleb128 0x1
 2790 0519 50       		.byte	0x50
 2791 051a 14       		.uleb128 0x14
 2792 051b 00000000 		.4byte	.LASF52
 2793 051f 01       		.byte	0x1
 2794 0520 2209     		.2byte	0x922
 2795 0522 82040000 		.4byte	0x482
 2796 0526 00000020 		.4byte	0x20000000
 2797 052a 15       		.uleb128 0x15
 2798 052b 10000000 		.4byte	.LVL51
 2799 052f F5030000 		.4byte	0x3f5
 2800 0533 16       		.uleb128 0x16
 2801 0534 01       		.uleb128 0x1
 2802 0535 50       		.byte	0x50
 2803 0536 01       		.uleb128 0x1
 2804 0537 30       		.byte	0x30
 2805 0538 00       		.byte	0
 2806 0539 00       		.byte	0
 2807 053a 12       		.uleb128 0x12
 2808 053b 75040000 		.4byte	.LASF55
 2809 053f 01       		.byte	0x1
 2810 0540 3B09     		.2byte	0x93b
 2811 0542 C6000000 		.4byte	0xc6
 2812 0546 00000000 		.4byte	.LFB18
 2813 054a 1E000000 		.4byte	.LFE18-.LFB18
 2814 054e 01       		.uleb128 0x1
 2815 054f 9C       		.byte	0x9c
 2816 0550 84050000 		.4byte	0x584
 2817 0554 0F       		.uleb128 0xf
 2818 0555 5E030000 		.4byte	.LASF43
 2819 0559 01       		.byte	0x1
 2820 055a 3B09     		.2byte	0x93b
 2821 055c 6B000000 		.4byte	0x6b
 2822 0560 8A020000 		.4byte	.LLST20
 2823 0564 14       		.uleb128 0x14
 2824 0565 00000000 		.4byte	.LASF52
 2825 0569 01       		.byte	0x1
 2826 056a 3D09     		.2byte	0x93d
 2827 056c 82040000 		.4byte	0x482
 2828 0570 00000020 		.4byte	0x20000000
 2829 0574 15       		.uleb128 0x15
 2830 0575 0E000000 		.4byte	.LVL57
 2831 0579 F5030000 		.4byte	0x3f5
 2832 057d 16       		.uleb128 0x16
 2833 057e 01       		.uleb128 0x1
 2834 057f 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 106


 2835 0580 01       		.uleb128 0x1
 2836 0581 30       		.byte	0x30
 2837 0582 00       		.byte	0
 2838 0583 00       		.byte	0
 2839 0584 0E       		.uleb128 0xe
 2840 0585 36040000 		.4byte	.LASF56
 2841 0589 01       		.byte	0x1
 2842 058a 4E09     		.2byte	0x94e
 2843 058c 00000000 		.4byte	.LFB19
 2844 0590 4C000000 		.4byte	.LFE19-.LFB19
 2845 0594 01       		.uleb128 0x1
 2846 0595 9C       		.byte	0x9c
 2847 0596 23060000 		.4byte	0x623
 2848 059a 0F       		.uleb128 0xf
 2849 059b 5E030000 		.4byte	.LASF43
 2850 059f 01       		.byte	0x1
 2851 05a0 4E09     		.2byte	0x94e
 2852 05a2 6B000000 		.4byte	0x6b
 2853 05a6 AB020000 		.4byte	.LLST21
 2854 05aa 0F       		.uleb128 0xf
 2855 05ab 65030000 		.4byte	.LASF57
 2856 05af 01       		.byte	0x1
 2857 05b0 4E09     		.2byte	0x94e
 2858 05b2 6B000000 		.4byte	0x6b
 2859 05b6 CC020000 		.4byte	.LLST22
 2860 05ba 10       		.uleb128 0x10
 2861 05bb 69010000 		.4byte	.LASF25
 2862 05bf 01       		.byte	0x1
 2863 05c0 5009     		.2byte	0x950
 2864 05c2 6B000000 		.4byte	0x6b
 2865 05c6 ED020000 		.4byte	.LLST23
 2866 05ca 10       		.uleb128 0x10
 2867 05cb FF010000 		.4byte	.LASF58
 2868 05cf 01       		.byte	0x1
 2869 05d0 5109     		.2byte	0x951
 2870 05d2 83000000 		.4byte	0x83
 2871 05d6 00030000 		.4byte	.LLST24
 2872 05da 10       		.uleb128 0x10
 2873 05db 6E020000 		.4byte	.LASF59
 2874 05df 01       		.byte	0x1
 2875 05e0 5209     		.2byte	0x952
 2876 05e2 83000000 		.4byte	0x83
 2877 05e6 13030000 		.4byte	.LLST25
 2878 05ea 17       		.uleb128 0x17
 2879 05eb 10000000 		.4byte	.LVL60
 2880 05ef F5030000 		.4byte	0x3f5
 2881 05f3 FD050000 		.4byte	0x5fd
 2882 05f7 16       		.uleb128 0x16
 2883 05f8 01       		.uleb128 0x1
 2884 05f9 50       		.byte	0x50
 2885 05fa 01       		.uleb128 0x1
 2886 05fb 30       		.byte	0x30
 2887 05fc 00       		.byte	0
 2888 05fd 17       		.uleb128 0x17
 2889 05fe 1A000000 		.4byte	.LVL61
 2890 0602 F5030000 		.4byte	0x3f5
 2891 0606 10060000 		.4byte	0x610
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 107


 2892 060a 16       		.uleb128 0x16
 2893 060b 01       		.uleb128 0x1
 2894 060c 50       		.byte	0x50
 2895 060d 01       		.uleb128 0x1
 2896 060e 30       		.byte	0x30
 2897 060f 00       		.byte	0
 2898 0610 0C       		.uleb128 0xc
 2899 0611 26000000 		.4byte	.LVL63
 2900 0615 980B0000 		.4byte	0xb98
 2901 0619 0C       		.uleb128 0xc
 2902 061a 46000000 		.4byte	.LVL69
 2903 061e A30B0000 		.4byte	0xba3
 2904 0622 00       		.byte	0
 2905 0623 12       		.uleb128 0x12
 2906 0624 42020000 		.4byte	.LASF60
 2907 0628 01       		.byte	0x1
 2908 0629 7009     		.2byte	0x970
 2909 062b 6B000000 		.4byte	0x6b
 2910 062f 00000000 		.4byte	.LFB20
 2911 0633 2C000000 		.4byte	.LFE20-.LFB20
 2912 0637 01       		.uleb128 0x1
 2913 0638 9C       		.byte	0x9c
 2914 0639 6D060000 		.4byte	0x66d
 2915 063d 0F       		.uleb128 0xf
 2916 063e 5E030000 		.4byte	.LASF43
 2917 0642 01       		.byte	0x1
 2918 0643 7009     		.2byte	0x970
 2919 0645 6B000000 		.4byte	0x6b
 2920 0649 47030000 		.4byte	.LLST26
 2921 064d 10       		.uleb128 0x10
 2922 064e 65030000 		.4byte	.LASF57
 2923 0652 01       		.byte	0x1
 2924 0653 7209     		.2byte	0x972
 2925 0655 6B000000 		.4byte	0x6b
 2926 0659 68030000 		.4byte	.LLST27
 2927 065d 15       		.uleb128 0x15
 2928 065e 0E000000 		.4byte	.LVL73
 2929 0662 F5030000 		.4byte	0x3f5
 2930 0666 16       		.uleb128 0x16
 2931 0667 01       		.uleb128 0x1
 2932 0668 50       		.byte	0x50
 2933 0669 01       		.uleb128 0x1
 2934 066a 30       		.byte	0x30
 2935 066b 00       		.byte	0
 2936 066c 00       		.byte	0
 2937 066d 0A       		.uleb128 0xa
 2938 066e 07010000 		.4byte	.LASF61
 2939 0672 01       		.byte	0x1
 2940 0673 EB09     		.2byte	0x9eb
 2941 0675 00000000 		.4byte	.LFB27
 2942 0679 18000000 		.4byte	.LFE27-.LFB27
 2943 067d 01       		.uleb128 0x1
 2944 067e 9C       		.byte	0x9c
 2945 067f 0E       		.uleb128 0xe
 2946 0680 40060000 		.4byte	.LASF62
 2947 0684 01       		.byte	0x1
 2948 0685 FF09     		.2byte	0x9ff
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 108


 2949 0687 00000000 		.4byte	.LFB28
 2950 068b 30000000 		.4byte	.LFE28-.LFB28
 2951 068f 01       		.uleb128 0x1
 2952 0690 9C       		.byte	0x9c
 2953 0691 B8060000 		.4byte	0x6b8
 2954 0695 0F       		.uleb128 0xf
 2955 0696 84040000 		.4byte	.LASF63
 2956 069a 01       		.byte	0x1
 2957 069b FF09     		.2byte	0x9ff
 2958 069d 83000000 		.4byte	0x83
 2959 06a1 7B030000 		.4byte	.LLST28
 2960 06a5 0C       		.uleb128 0xc
 2961 06a6 0E000000 		.4byte	.LVL78
 2962 06aa AE0B0000 		.4byte	0xbae
 2963 06ae 0C       		.uleb128 0xc
 2964 06af 26000000 		.4byte	.LVL80
 2965 06b3 AE0B0000 		.4byte	0xbae
 2966 06b7 00       		.byte	0
 2967 06b8 0B       		.uleb128 0xb
 2968 06b9 29020000 		.4byte	.LASF64
 2969 06bd 01       		.byte	0x1
 2970 06be AF       		.byte	0xaf
 2971 06bf 00000000 		.4byte	.LFB3
 2972 06c3 CC000000 		.4byte	.LFE3-.LFB3
 2973 06c7 01       		.uleb128 0x1
 2974 06c8 9C       		.byte	0x9c
 2975 06c9 61070000 		.4byte	0x761
 2976 06cd 18       		.uleb128 0x18
 2977 06ce 58010000 		.4byte	.LASF65
 2978 06d2 01       		.byte	0x1
 2979 06d3 B5       		.byte	0xb5
 2980 06d4 83000000 		.4byte	0x83
 2981 06d8 99030000 		.4byte	.LLST29
 2982 06dc 18       		.uleb128 0x18
 2983 06dd 69010000 		.4byte	.LASF25
 2984 06e1 01       		.byte	0x1
 2985 06e2 B6       		.byte	0xb6
 2986 06e3 6B000000 		.4byte	0x6b
 2987 06e7 B9030000 		.4byte	.LLST30
 2988 06eb 18       		.uleb128 0x18
 2989 06ec 30030000 		.4byte	.LASF66
 2990 06f0 01       		.byte	0x1
 2991 06f1 B7       		.byte	0xb7
 2992 06f2 83000000 		.4byte	0x83
 2993 06f6 CC030000 		.4byte	.LLST31
 2994 06fa 18       		.uleb128 0x18
 2995 06fb 78010000 		.4byte	.LASF67
 2996 06ff 01       		.byte	0x1
 2997 0700 B8       		.byte	0xb8
 2998 0701 83000000 		.4byte	0x83
 2999 0705 17040000 		.4byte	.LLST32
 3000 0709 19       		.uleb128 0x19
 3001 070a 34060000 		.4byte	.LASF68
 3002 070e 01       		.byte	0x1
 3003 070f B9       		.byte	0xb9
 3004 0710 C1000000 		.4byte	0xc1
 3005 0714 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 109


 3006 0715 91       		.byte	0x91
 3007 0716 6C       		.sleb128 -20
 3008 0717 0C       		.uleb128 0xc
 3009 0718 08000000 		.4byte	.LVL83
 3010 071c B90B0000 		.4byte	0xbb9
 3011 0720 0C       		.uleb128 0xc
 3012 0721 10000000 		.4byte	.LVL84
 3013 0725 980B0000 		.4byte	0xb98
 3014 0729 17       		.uleb128 0x17
 3015 072a 84000000 		.4byte	.LVL99
 3016 072e C40B0000 		.4byte	0xbc4
 3017 0732 3D070000 		.4byte	0x73d
 3018 0736 16       		.uleb128 0x16
 3019 0737 01       		.uleb128 0x1
 3020 0738 50       		.byte	0x50
 3021 0739 02       		.uleb128 0x2
 3022 073a 08       		.byte	0x8
 3023 073b 30       		.byte	0x30
 3024 073c 00       		.byte	0
 3025 073d 17       		.uleb128 0x17
 3026 073e 96000000 		.4byte	.LVL100
 3027 0742 7F060000 		.4byte	0x67f
 3028 0746 50070000 		.4byte	0x750
 3029 074a 16       		.uleb128 0x16
 3030 074b 01       		.uleb128 0x1
 3031 074c 50       		.byte	0x50
 3032 074d 01       		.uleb128 0x1
 3033 074e 44       		.byte	0x44
 3034 074f 00       		.byte	0
 3035 0750 15       		.uleb128 0x15
 3036 0751 A0000000 		.4byte	.LVL101
 3037 0755 A30B0000 		.4byte	0xba3
 3038 0759 16       		.uleb128 0x16
 3039 075a 01       		.uleb128 0x1
 3040 075b 50       		.byte	0x50
 3041 075c 02       		.uleb128 0x2
 3042 075d 74       		.byte	0x74
 3043 075e 00       		.sleb128 0
 3044 075f 00       		.byte	0
 3045 0760 00       		.byte	0
 3046 0761 0E       		.uleb128 0xe
 3047 0762 6E030000 		.4byte	.LASF69
 3048 0766 01       		.byte	0x1
 3049 0767 3C03     		.2byte	0x33c
 3050 0769 00000000 		.4byte	.LFB10
 3051 076d D8000000 		.4byte	.LFE10-.LFB10
 3052 0771 01       		.uleb128 0x1
 3053 0772 9C       		.byte	0x9c
 3054 0773 29080000 		.4byte	0x829
 3055 0777 0F       		.uleb128 0xf
 3056 0778 58010000 		.4byte	.LASF65
 3057 077c 01       		.byte	0x1
 3058 077d 3C03     		.2byte	0x33c
 3059 077f 83000000 		.4byte	0x83
 3060 0783 36040000 		.4byte	.LLST33
 3061 0787 10       		.uleb128 0x10
 3062 0788 69010000 		.4byte	.LASF25
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 110


 3063 078c 01       		.byte	0x1
 3064 078d 3E03     		.2byte	0x33e
 3065 078f 6B000000 		.4byte	0x6b
 3066 0793 86040000 		.4byte	.LLST34
 3067 0797 10       		.uleb128 0x10
 3068 0798 1D060000 		.4byte	.LASF70
 3069 079c 01       		.byte	0x1
 3070 079d 3F03     		.2byte	0x33f
 3071 079f 6B000000 		.4byte	0x6b
 3072 07a3 9A040000 		.4byte	.LLST35
 3073 07a7 10       		.uleb128 0x10
 3074 07a8 A9010000 		.4byte	.LASF71
 3075 07ac 01       		.byte	0x1
 3076 07ad 4203     		.2byte	0x342
 3077 07af 83000000 		.4byte	0x83
 3078 07b3 BE040000 		.4byte	.LLST36
 3079 07b7 0C       		.uleb128 0xc
 3080 07b8 26000000 		.4byte	.LVL104
 3081 07bc 980B0000 		.4byte	0xb98
 3082 07c0 0C       		.uleb128 0xc
 3083 07c1 2C000000 		.4byte	.LVL106
 3084 07c5 34010000 		.4byte	0x134
 3085 07c9 0C       		.uleb128 0xc
 3086 07ca 34000000 		.4byte	.LVL108
 3087 07ce 03010000 		.4byte	0x103
 3088 07d2 17       		.uleb128 0x17
 3089 07d3 74000000 		.4byte	.LVL115
 3090 07d7 AE0B0000 		.4byte	0xbae
 3091 07db E6070000 		.4byte	0x7e6
 3092 07df 16       		.uleb128 0x16
 3093 07e0 01       		.uleb128 0x1
 3094 07e1 50       		.byte	0x50
 3095 07e2 02       		.uleb128 0x2
 3096 07e3 08       		.byte	0x8
 3097 07e4 32       		.byte	0x32
 3098 07e5 00       		.byte	0
 3099 07e6 17       		.uleb128 0x17
 3100 07e7 94000000 		.4byte	.LVL116
 3101 07eb AE0B0000 		.4byte	0xbae
 3102 07ef FA070000 		.4byte	0x7fa
 3103 07f3 16       		.uleb128 0x16
 3104 07f4 01       		.uleb128 0x1
 3105 07f5 50       		.byte	0x50
 3106 07f6 02       		.uleb128 0x2
 3107 07f7 08       		.byte	0x8
 3108 07f8 32       		.byte	0x32
 3109 07f9 00       		.byte	0
 3110 07fa 0C       		.uleb128 0xc
 3111 07fb AE000000 		.4byte	.LVL118
 3112 07ff B8060000 		.4byte	0x6b8
 3113 0803 17       		.uleb128 0x17
 3114 0804 B4000000 		.4byte	.LVL119
 3115 0808 A30B0000 		.4byte	0xba3
 3116 080c 19080000 		.4byte	0x819
 3117 0810 16       		.uleb128 0x16
 3118 0811 01       		.uleb128 0x1
 3119 0812 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 111


 3120 0813 04       		.uleb128 0x4
 3121 0814 91       		.byte	0x91
 3122 0815 64       		.sleb128 -28
 3123 0816 94       		.byte	0x94
 3124 0817 01       		.byte	0x1
 3125 0818 00       		.byte	0
 3126 0819 15       		.uleb128 0x15
 3127 081a BC000000 		.4byte	.LVL122
 3128 081e F5030000 		.4byte	0x3f5
 3129 0822 16       		.uleb128 0x16
 3130 0823 01       		.uleb128 0x1
 3131 0824 50       		.byte	0x50
 3132 0825 01       		.uleb128 0x1
 3133 0826 30       		.byte	0x30
 3134 0827 00       		.byte	0
 3135 0828 00       		.byte	0
 3136 0829 0E       		.uleb128 0xe
 3137 082a EB040000 		.4byte	.LASF72
 3138 082e 01       		.byte	0x1
 3139 082f 160A     		.2byte	0xa16
 3140 0831 00000000 		.4byte	.LFB29
 3141 0835 14000000 		.4byte	.LFE29-.LFB29
 3142 0839 01       		.uleb128 0x1
 3143 083a 9C       		.byte	0x9c
 3144 083b 59080000 		.4byte	0x859
 3145 083f 0F       		.uleb128 0xf
 3146 0840 EE060000 		.4byte	.LASF73
 3147 0844 01       		.byte	0x1
 3148 0845 160A     		.2byte	0xa16
 3149 0847 77000000 		.4byte	0x77
 3150 084b 01050000 		.4byte	.LLST37
 3151 084f 0C       		.uleb128 0xc
 3152 0850 0C000000 		.4byte	.LVL125
 3153 0854 AE0B0000 		.4byte	0xbae
 3154 0858 00       		.byte	0
 3155 0859 1A       		.uleb128 0x1a
 3156 085a 5D010000 		.4byte	.LASF74
 3157 085e 01       		.byte	0x1
 3158 085f 240A     		.2byte	0xa24
 3159 0861 00000000 		.4byte	.LFB30
 3160 0865 4C000000 		.4byte	.LFE30-.LFB30
 3161 0869 01       		.uleb128 0x1
 3162 086a 9C       		.byte	0x9c
 3163 086b 80080000 		.4byte	0x880
 3164 086f 0F       		.uleb128 0xf
 3165 0870 58010000 		.4byte	.LASF65
 3166 0874 01       		.byte	0x1
 3167 0875 240A     		.2byte	0xa24
 3168 0877 83000000 		.4byte	0x83
 3169 087b 22050000 		.4byte	.LLST38
 3170 087f 00       		.byte	0
 3171 0880 0A       		.uleb128 0xa
 3172 0881 90060000 		.4byte	.LASF75
 3173 0885 01       		.byte	0x1
 3174 0886 900A     		.2byte	0xa90
 3175 0888 00000000 		.4byte	.LFB34
 3176 088c 10000000 		.4byte	.LFE34-.LFB34
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 112


 3177 0890 01       		.uleb128 0x1
 3178 0891 9C       		.byte	0x9c
 3179 0892 0A       		.uleb128 0xa
 3180 0893 17010000 		.4byte	.LASF76
 3181 0897 01       		.byte	0x1
 3182 0898 A00A     		.2byte	0xaa0
 3183 089a 00000000 		.4byte	.LFB35
 3184 089e 10000000 		.4byte	.LFE35-.LFB35
 3185 08a2 01       		.uleb128 0x1
 3186 08a3 9C       		.byte	0x9c
 3187 08a4 0E       		.uleb128 0xe
 3188 08a5 B8050000 		.4byte	.LASF77
 3189 08a9 01       		.byte	0x1
 3190 08aa 7F0A     		.2byte	0xa7f
 3191 08ac 00000000 		.4byte	.LFB33
 3192 08b0 18000000 		.4byte	.LFE33-.LFB33
 3193 08b4 01       		.uleb128 0x1
 3194 08b5 9C       		.byte	0x9c
 3195 08b6 C4080000 		.4byte	0x8c4
 3196 08ba 0C       		.uleb128 0xc
 3197 08bb 06000000 		.4byte	.LVL130
 3198 08bf 92080000 		.4byte	0x892
 3199 08c3 00       		.byte	0
 3200 08c4 0A       		.uleb128 0xa
 3201 08c5 60060000 		.4byte	.LASF78
 3202 08c9 01       		.byte	0x1
 3203 08ca B00A     		.2byte	0xab0
 3204 08cc 00000000 		.4byte	.LFB36
 3205 08d0 10000000 		.4byte	.LFE36-.LFB36
 3206 08d4 01       		.uleb128 0x1
 3207 08d5 9C       		.byte	0x9c
 3208 08d6 0E       		.uleb128 0xe
 3209 08d7 02070000 		.4byte	.LASF79
 3210 08db 01       		.byte	0x1
 3211 08dc C10A     		.2byte	0xac1
 3212 08de 00000000 		.4byte	.LFB37
 3213 08e2 10000000 		.4byte	.LFE37-.LFB37
 3214 08e6 01       		.uleb128 0x1
 3215 08e7 9C       		.byte	0x9c
 3216 08e8 FD080000 		.4byte	0x8fd
 3217 08ec 0F       		.uleb128 0xf
 3218 08ed 6E020000 		.4byte	.LASF59
 3219 08f1 01       		.byte	0x1
 3220 08f2 C10A     		.2byte	0xac1
 3221 08f4 83000000 		.4byte	0x83
 3222 08f8 43050000 		.4byte	.LLST39
 3223 08fc 00       		.byte	0
 3224 08fd 0D       		.uleb128 0xd
 3225 08fe 80010000 		.4byte	.LASF81
 3226 0902 01       		.byte	0x1
 3227 0903 D10A     		.2byte	0xad1
 3228 0905 83000000 		.4byte	0x83
 3229 0909 00000000 		.4byte	.LFB38
 3230 090d 10000000 		.4byte	.LFE38-.LFB38
 3231 0911 01       		.uleb128 0x1
 3232 0912 9C       		.byte	0x9c
 3233 0913 0D       		.uleb128 0xd
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 113


 3234 0914 16040000 		.4byte	.LASF82
 3235 0918 01       		.byte	0x1
 3236 0919 E10A     		.2byte	0xae1
 3237 091b 83000000 		.4byte	0x83
 3238 091f 00000000 		.4byte	.LFB39
 3239 0923 10000000 		.4byte	.LFE39-.LFB39
 3240 0927 01       		.uleb128 0x1
 3241 0928 9C       		.byte	0x9c
 3242 0929 0E       		.uleb128 0xe
 3243 092a 37030000 		.4byte	.LASF83
 3244 092e 01       		.byte	0x1
 3245 092f 010B     		.2byte	0xb01
 3246 0931 00000000 		.4byte	.LFB40
 3247 0935 20000000 		.4byte	.LFE40-.LFB40
 3248 0939 01       		.uleb128 0x1
 3249 093a 9C       		.byte	0x9c
 3250 093b 4E090000 		.4byte	0x94e
 3251 093f 11       		.uleb128 0x11
 3252 0940 74020000 		.4byte	.LASF84
 3253 0944 01       		.byte	0x1
 3254 0945 010B     		.2byte	0xb01
 3255 0947 83000000 		.4byte	0x83
 3256 094b 01       		.uleb128 0x1
 3257 094c 50       		.byte	0x50
 3258 094d 00       		.byte	0
 3259 094e 0D       		.uleb128 0xd
 3260 094f 48060000 		.4byte	.LASF85
 3261 0953 01       		.byte	0x1
 3262 0954 1A0B     		.2byte	0xb1a
 3263 0956 83000000 		.4byte	0x83
 3264 095a 00000000 		.4byte	.LFB41
 3265 095e 10000000 		.4byte	.LFE41-.LFB41
 3266 0962 01       		.uleb128 0x1
 3267 0963 9C       		.byte	0x9c
 3268 0964 0D       		.uleb128 0xd
 3269 0965 8E020000 		.4byte	.LASF86
 3270 0969 01       		.byte	0x1
 3271 096a 310B     		.2byte	0xb31
 3272 096c 83000000 		.4byte	0x83
 3273 0970 00000000 		.4byte	.LFB42
 3274 0974 10000000 		.4byte	.LFE42-.LFB42
 3275 0978 01       		.uleb128 0x1
 3276 0979 9C       		.byte	0x9c
 3277 097a 1B       		.uleb128 0x1b
 3278 097b 15070000 		.4byte	.LASF112
 3279 097f 01       		.byte	0x1
 3280 0980 860B     		.2byte	0xb86
 3281 0982 00000000 		.4byte	.LFB46
 3282 0986 28000000 		.4byte	.LFE46-.LFB46
 3283 098a 01       		.uleb128 0x1
 3284 098b 9C       		.byte	0x9c
 3285 098c A8090000 		.4byte	0x9a8
 3286 0990 1C       		.uleb128 0x1c
 3287 0991 6900     		.ascii	"i\000"
 3288 0993 01       		.byte	0x1
 3289 0994 880B     		.2byte	0xb88
 3290 0996 83000000 		.4byte	0x83
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 114


 3291 099a 64050000 		.4byte	.LLST40
 3292 099e 0C       		.uleb128 0xc
 3293 099f 06000000 		.4byte	.LVL134
 3294 09a3 64090000 		.4byte	0x964
 3295 09a7 00       		.byte	0
 3296 09a8 0A       		.uleb128 0xa
 3297 09a9 B1020000 		.4byte	.LASF87
 3298 09ad 01       		.byte	0x1
 3299 09ae 3E0B     		.2byte	0xb3e
 3300 09b0 00000000 		.4byte	.LFB43
 3301 09b4 0C000000 		.4byte	.LFE43-.LFB43
 3302 09b8 01       		.uleb128 0x1
 3303 09b9 9C       		.byte	0x9c
 3304 09ba 1A       		.uleb128 0x1a
 3305 09bb 60020000 		.4byte	.LASF88
 3306 09bf 01       		.byte	0x1
 3307 09c0 610A     		.2byte	0xa61
 3308 09c2 00000000 		.4byte	.LFB32
 3309 09c6 44000000 		.4byte	.LFE32-.LFB32
 3310 09ca 01       		.uleb128 0x1
 3311 09cb 9C       		.byte	0x9c
 3312 09cc 200A0000 		.4byte	0xa20
 3313 09d0 1C       		.uleb128 0x1c
 3314 09d1 6900     		.ascii	"i\000"
 3315 09d3 01       		.byte	0x1
 3316 09d4 630A     		.2byte	0xa63
 3317 09d6 83000000 		.4byte	0x83
 3318 09da 82050000 		.4byte	.LLST41
 3319 09de 17       		.uleb128 0x17
 3320 09df 1C000000 		.4byte	.LVL144
 3321 09e3 1A040000 		.4byte	0x41a
 3322 09e7 FA090000 		.4byte	0x9fa
 3323 09eb 16       		.uleb128 0x16
 3324 09ec 01       		.uleb128 0x1
 3325 09ed 50       		.byte	0x50
 3326 09ee 01       		.uleb128 0x1
 3327 09ef 3F       		.byte	0x3f
 3328 09f0 16       		.uleb128 0x16
 3329 09f1 01       		.uleb128 0x1
 3330 09f2 51       		.byte	0x51
 3331 09f3 05       		.uleb128 0x5
 3332 09f4 03       		.byte	0x3
 3333 09f5 00000000 		.4byte	CySysTickServiceCallbacks
 3334 09f9 00       		.byte	0
 3335 09fa 17       		.uleb128 0x17
 3336 09fb 22000000 		.4byte	.LVL145
 3337 09ff 29090000 		.4byte	0x929
 3338 0a03 0D0A0000 		.4byte	0xa0d
 3339 0a07 16       		.uleb128 0x16
 3340 0a08 01       		.uleb128 0x1
 3341 0a09 50       		.byte	0x50
 3342 0a0a 01       		.uleb128 0x1
 3343 0a0b 31       		.byte	0x31
 3344 0a0c 00       		.byte	0
 3345 0a0d 0C       		.uleb128 0xc
 3346 0a0e 32000000 		.4byte	.LVL147
 3347 0a12 D6080000 		.4byte	0x8d6
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 115


 3348 0a16 0C       		.uleb128 0xc
 3349 0a17 36000000 		.4byte	.LVL148
 3350 0a1b A8090000 		.4byte	0x9a8
 3351 0a1f 00       		.byte	0
 3352 0a20 0E       		.uleb128 0xe
 3353 0a21 B5030000 		.4byte	.LASF89
 3354 0a25 01       		.byte	0x1
 3355 0a26 440A     		.2byte	0xa44
 3356 0a28 00000000 		.4byte	.LFB31
 3357 0a2c 20000000 		.4byte	.LFE31-.LFB31
 3358 0a30 01       		.uleb128 0x1
 3359 0a31 9C       		.byte	0x9c
 3360 0a32 490A0000 		.4byte	0xa49
 3361 0a36 0C       		.uleb128 0xc
 3362 0a37 0E000000 		.4byte	.LVL149
 3363 0a3b BA090000 		.4byte	0x9ba
 3364 0a3f 0C       		.uleb128 0xc
 3365 0a40 18000000 		.4byte	.LVL150
 3366 0a44 A4080000 		.4byte	0x8a4
 3367 0a48 00       		.byte	0
 3368 0a49 12       		.uleb128 0x12
 3369 0a4a F5050000 		.4byte	.LASF90
 3370 0a4e 01       		.byte	0x1
 3371 0a4f 610B     		.2byte	0xb61
 3372 0a51 E7000000 		.4byte	0xe7
 3373 0a55 00000000 		.4byte	.LFB44
 3374 0a59 10000000 		.4byte	.LFE44-.LFB44
 3375 0a5d 01       		.uleb128 0x1
 3376 0a5e 9C       		.byte	0x9c
 3377 0a5f 900A0000 		.4byte	0xa90
 3378 0a63 0F       		.uleb128 0xf
 3379 0a64 5E030000 		.4byte	.LASF43
 3380 0a68 01       		.byte	0x1
 3381 0a69 610B     		.2byte	0xb61
 3382 0a6b 83000000 		.4byte	0x83
 3383 0a6f A1050000 		.4byte	.LLST42
 3384 0a73 11       		.uleb128 0x11
 3385 0a74 0D040000 		.4byte	.LASF91
 3386 0a78 01       		.byte	0x1
 3387 0a79 610B     		.2byte	0xb61
 3388 0a7b E7000000 		.4byte	0xe7
 3389 0a7f 01       		.uleb128 0x1
 3390 0a80 51       		.byte	0x51
 3391 0a81 13       		.uleb128 0x13
 3392 0a82 AA000000 		.4byte	.LASF92
 3393 0a86 01       		.byte	0x1
 3394 0a87 630B     		.2byte	0xb63
 3395 0a89 E7000000 		.4byte	0xe7
 3396 0a8d 01       		.uleb128 0x1
 3397 0a8e 50       		.byte	0x50
 3398 0a8f 00       		.byte	0
 3399 0a90 12       		.uleb128 0x12
 3400 0a91 C7010000 		.4byte	.LASF93
 3401 0a95 01       		.byte	0x1
 3402 0a96 790B     		.2byte	0xb79
 3403 0a98 E7000000 		.4byte	0xe7
 3404 0a9c 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 116


 3405 0aa0 0C000000 		.4byte	.LFE45-.LFB45
 3406 0aa4 01       		.uleb128 0x1
 3407 0aa5 9C       		.byte	0x9c
 3408 0aa6 BB0A0000 		.4byte	0xabb
 3409 0aaa 0F       		.uleb128 0xf
 3410 0aab 5E030000 		.4byte	.LASF43
 3411 0aaf 01       		.byte	0x1
 3412 0ab0 790B     		.2byte	0xb79
 3413 0ab2 83000000 		.4byte	0x83
 3414 0ab6 C2050000 		.4byte	.LLST43
 3415 0aba 00       		.byte	0
 3416 0abb 0E       		.uleb128 0xe
 3417 0abc 80020000 		.4byte	.LASF94
 3418 0ac0 01       		.byte	0x1
 3419 0ac1 A60B     		.2byte	0xba6
 3420 0ac3 00000000 		.4byte	.LFB47
 3421 0ac7 70000000 		.4byte	.LFE47-.LFB47
 3422 0acb 01       		.uleb128 0x1
 3423 0acc 9C       		.byte	0x9c
 3424 0acd E00A0000 		.4byte	0xae0
 3425 0ad1 11       		.uleb128 0x11
 3426 0ad2 2B060000 		.4byte	.LASF95
 3427 0ad6 01       		.byte	0x1
 3428 0ad7 A60B     		.2byte	0xba6
 3429 0ad9 E00A0000 		.4byte	0xae0
 3430 0add 01       		.uleb128 0x1
 3431 0ade 50       		.byte	0x50
 3432 0adf 00       		.byte	0
 3433 0ae0 06       		.uleb128 0x6
 3434 0ae1 04       		.byte	0x4
 3435 0ae2 83000000 		.4byte	0x83
 3436 0ae6 1D       		.uleb128 0x1d
 3437 0ae7 E7000000 		.4byte	0xe7
 3438 0aeb F60A0000 		.4byte	0xaf6
 3439 0aef 1E       		.uleb128 0x1e
 3440 0af0 E0000000 		.4byte	0xe0
 3441 0af4 04       		.byte	0x4
 3442 0af5 00       		.byte	0
 3443 0af6 19       		.uleb128 0x19
 3444 0af7 0A060000 		.4byte	.LASF96
 3445 0afb 01       		.byte	0x1
 3446 0afc 22       		.byte	0x22
 3447 0afd E60A0000 		.4byte	0xae6
 3448 0b01 05       		.uleb128 0x5
 3449 0b02 03       		.byte	0x3
 3450 0b03 00000000 		.4byte	CySysTickCallbacks
 3451 0b07 1F       		.uleb128 0x1f
 3452 0b08 28040000 		.4byte	.LASF97
 3453 0b0c 01       		.byte	0x1
 3454 0b0d 1B       		.byte	0x1b
 3455 0b0e 83000000 		.4byte	0x83
 3456 0b12 05       		.uleb128 0x5
 3457 0b13 03       		.byte	0x3
 3458 0b14 00000000 		.4byte	cydelayFreqHz
 3459 0b18 1F       		.uleb128 0x1f
 3460 0b19 E2010000 		.4byte	.LASF98
 3461 0b1d 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 117


 3462 0b1e 1C       		.byte	0x1c
 3463 0b1f 83000000 		.4byte	0x83
 3464 0b23 05       		.uleb128 0x5
 3465 0b24 03       		.byte	0x3
 3466 0b25 00000000 		.4byte	cydelayFreqKhz
 3467 0b29 1F       		.uleb128 0x1f
 3468 0b2a 81060000 		.4byte	.LASF99
 3469 0b2e 01       		.byte	0x1
 3470 0b2f 1D       		.byte	0x1d
 3471 0b30 6B000000 		.4byte	0x6b
 3472 0b34 05       		.uleb128 0x5
 3473 0b35 03       		.byte	0x3
 3474 0b36 00000000 		.4byte	cydelayFreqMhz
 3475 0b3a 1F       		.uleb128 0x1f
 3476 0b3b 53020000 		.4byte	.LASF100
 3477 0b3f 01       		.byte	0x1
 3478 0b40 1E       		.byte	0x1e
 3479 0b41 83000000 		.4byte	0x83
 3480 0b45 05       		.uleb128 0x5
 3481 0b46 03       		.byte	0x3
 3482 0b47 00000000 		.4byte	cydelay32kMs
 3483 0b4b 1F       		.uleb128 0x1f
 3484 0b4c D6000000 		.4byte	.LASF101
 3485 0b50 01       		.byte	0x1
 3486 0b51 36       		.byte	0x36
 3487 0b52 83000000 		.4byte	0x83
 3488 0b56 05       		.uleb128 0x5
 3489 0b57 03       		.byte	0x3
 3490 0b58 00000000 		.4byte	CySysTickInitVar
 3491 0b5c 1D       		.uleb128 0x1d
 3492 0b5d 6C0B0000 		.4byte	0xb6c
 3493 0b61 6C0B0000 		.4byte	0xb6c
 3494 0b65 1E       		.uleb128 0x1e
 3495 0b66 E0000000 		.4byte	0xe0
 3496 0b6a 16       		.byte	0x16
 3497 0b6b 00       		.byte	0
 3498 0b6c 20       		.uleb128 0x20
 3499 0b6d 6B000000 		.4byte	0x6b
 3500 0b71 1F       		.uleb128 0x1f
 3501 0b72 93050000 		.4byte	.LASF102
 3502 0b76 01       		.byte	0x1
 3503 0b77 4C       		.byte	0x4c
 3504 0b78 820B0000 		.4byte	0xb82
 3505 0b7c 05       		.uleb128 0x5
 3506 0b7d 03       		.byte	0x3
 3507 0b7e 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 3508 0b82 20       		.uleb128 0x20
 3509 0b83 5C0B0000 		.4byte	0xb5c
 3510 0b87 1F       		.uleb128 0x1f
 3511 0b88 82000000 		.4byte	.LASF103
 3512 0b8c 01       		.byte	0x1
 3513 0b8d 5B       		.byte	0x5b
 3514 0b8e 83000000 		.4byte	0x83
 3515 0b92 05       		.uleb128 0x5
 3516 0b93 03       		.byte	0x3
 3517 0b94 00000000 		.4byte	CySysClkPumpConfig
 3518 0b98 21       		.uleb128 0x21
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 118


 3519 0b99 E2020000 		.4byte	.LASF104
 3520 0b9d E2020000 		.4byte	.LASF104
 3521 0ba1 03       		.byte	0x3
 3522 0ba2 E5       		.byte	0xe5
 3523 0ba3 21       		.uleb128 0x21
 3524 0ba4 4D040000 		.4byte	.LASF105
 3525 0ba8 4D040000 		.4byte	.LASF105
 3526 0bac 03       		.byte	0x3
 3527 0bad E6       		.byte	0xe6
 3528 0bae 21       		.uleb128 0x21
 3529 0baf 91040000 		.4byte	.LASF106
 3530 0bb3 91040000 		.4byte	.LASF106
 3531 0bb7 03       		.byte	0x3
 3532 0bb8 DC       		.byte	0xdc
 3533 0bb9 21       		.uleb128 0x21
 3534 0bba F4000000 		.4byte	.LASF107
 3535 0bbe F4000000 		.4byte	.LASF107
 3536 0bc2 04       		.byte	0x4
 3537 0bc3 54       		.byte	0x54
 3538 0bc4 21       		.uleb128 0x21
 3539 0bc5 B7060000 		.4byte	.LASF108
 3540 0bc9 B7060000 		.4byte	.LASF108
 3541 0bcd 05       		.byte	0x5
 3542 0bce 52       		.byte	0x52
 3543 0bcf 00       		.byte	0
 3544              		.section	.debug_abbrev,"",%progbits
 3545              	.Ldebug_abbrev0:
 3546 0000 01       		.uleb128 0x1
 3547 0001 11       		.uleb128 0x11
 3548 0002 01       		.byte	0x1
 3549 0003 25       		.uleb128 0x25
 3550 0004 0E       		.uleb128 0xe
 3551 0005 13       		.uleb128 0x13
 3552 0006 0B       		.uleb128 0xb
 3553 0007 03       		.uleb128 0x3
 3554 0008 0E       		.uleb128 0xe
 3555 0009 1B       		.uleb128 0x1b
 3556 000a 0E       		.uleb128 0xe
 3557 000b 55       		.uleb128 0x55
 3558 000c 17       		.uleb128 0x17
 3559 000d 11       		.uleb128 0x11
 3560 000e 01       		.uleb128 0x1
 3561 000f 10       		.uleb128 0x10
 3562 0010 17       		.uleb128 0x17
 3563 0011 00       		.byte	0
 3564 0012 00       		.byte	0
 3565 0013 02       		.uleb128 0x2
 3566 0014 24       		.uleb128 0x24
 3567 0015 00       		.byte	0
 3568 0016 0B       		.uleb128 0xb
 3569 0017 0B       		.uleb128 0xb
 3570 0018 3E       		.uleb128 0x3e
 3571 0019 0B       		.uleb128 0xb
 3572 001a 03       		.uleb128 0x3
 3573 001b 0E       		.uleb128 0xe
 3574 001c 00       		.byte	0
 3575 001d 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 119


 3576 001e 03       		.uleb128 0x3
 3577 001f 24       		.uleb128 0x24
 3578 0020 00       		.byte	0
 3579 0021 0B       		.uleb128 0xb
 3580 0022 0B       		.uleb128 0xb
 3581 0023 3E       		.uleb128 0x3e
 3582 0024 0B       		.uleb128 0xb
 3583 0025 03       		.uleb128 0x3
 3584 0026 08       		.uleb128 0x8
 3585 0027 00       		.byte	0
 3586 0028 00       		.byte	0
 3587 0029 04       		.uleb128 0x4
 3588 002a 16       		.uleb128 0x16
 3589 002b 00       		.byte	0
 3590 002c 03       		.uleb128 0x3
 3591 002d 0E       		.uleb128 0xe
 3592 002e 3A       		.uleb128 0x3a
 3593 002f 0B       		.uleb128 0xb
 3594 0030 3B       		.uleb128 0x3b
 3595 0031 05       		.uleb128 0x5
 3596 0032 49       		.uleb128 0x49
 3597 0033 13       		.uleb128 0x13
 3598 0034 00       		.byte	0
 3599 0035 00       		.byte	0
 3600 0036 05       		.uleb128 0x5
 3601 0037 35       		.uleb128 0x35
 3602 0038 00       		.byte	0
 3603 0039 49       		.uleb128 0x49
 3604 003a 13       		.uleb128 0x13
 3605 003b 00       		.byte	0
 3606 003c 00       		.byte	0
 3607 003d 06       		.uleb128 0x6
 3608 003e 0F       		.uleb128 0xf
 3609 003f 00       		.byte	0
 3610 0040 0B       		.uleb128 0xb
 3611 0041 0B       		.uleb128 0xb
 3612 0042 49       		.uleb128 0x49
 3613 0043 13       		.uleb128 0x13
 3614 0044 00       		.byte	0
 3615 0045 00       		.byte	0
 3616 0046 07       		.uleb128 0x7
 3617 0047 15       		.uleb128 0x15
 3618 0048 00       		.byte	0
 3619 0049 27       		.uleb128 0x27
 3620 004a 19       		.uleb128 0x19
 3621 004b 00       		.byte	0
 3622 004c 00       		.byte	0
 3623 004d 08       		.uleb128 0x8
 3624 004e 16       		.uleb128 0x16
 3625 004f 00       		.byte	0
 3626 0050 03       		.uleb128 0x3
 3627 0051 0E       		.uleb128 0xe
 3628 0052 3A       		.uleb128 0x3a
 3629 0053 0B       		.uleb128 0xb
 3630 0054 3B       		.uleb128 0x3b
 3631 0055 0B       		.uleb128 0xb
 3632 0056 49       		.uleb128 0x49
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 120


 3633 0057 13       		.uleb128 0x13
 3634 0058 00       		.byte	0
 3635 0059 00       		.byte	0
 3636 005a 09       		.uleb128 0x9
 3637 005b 2E       		.uleb128 0x2e
 3638 005c 00       		.byte	0
 3639 005d 3F       		.uleb128 0x3f
 3640 005e 19       		.uleb128 0x19
 3641 005f 03       		.uleb128 0x3
 3642 0060 0E       		.uleb128 0xe
 3643 0061 3A       		.uleb128 0x3a
 3644 0062 0B       		.uleb128 0xb
 3645 0063 3B       		.uleb128 0x3b
 3646 0064 0B       		.uleb128 0xb
 3647 0065 27       		.uleb128 0x27
 3648 0066 19       		.uleb128 0x19
 3649 0067 11       		.uleb128 0x11
 3650 0068 01       		.uleb128 0x1
 3651 0069 12       		.uleb128 0x12
 3652 006a 06       		.uleb128 0x6
 3653 006b 40       		.uleb128 0x40
 3654 006c 18       		.uleb128 0x18
 3655 006d 9742     		.uleb128 0x2117
 3656 006f 19       		.uleb128 0x19
 3657 0070 00       		.byte	0
 3658 0071 00       		.byte	0
 3659 0072 0A       		.uleb128 0xa
 3660 0073 2E       		.uleb128 0x2e
 3661 0074 00       		.byte	0
 3662 0075 3F       		.uleb128 0x3f
 3663 0076 19       		.uleb128 0x19
 3664 0077 03       		.uleb128 0x3
 3665 0078 0E       		.uleb128 0xe
 3666 0079 3A       		.uleb128 0x3a
 3667 007a 0B       		.uleb128 0xb
 3668 007b 3B       		.uleb128 0x3b
 3669 007c 05       		.uleb128 0x5
 3670 007d 27       		.uleb128 0x27
 3671 007e 19       		.uleb128 0x19
 3672 007f 11       		.uleb128 0x11
 3673 0080 01       		.uleb128 0x1
 3674 0081 12       		.uleb128 0x12
 3675 0082 06       		.uleb128 0x6
 3676 0083 40       		.uleb128 0x40
 3677 0084 18       		.uleb128 0x18
 3678 0085 9742     		.uleb128 0x2117
 3679 0087 19       		.uleb128 0x19
 3680 0088 00       		.byte	0
 3681 0089 00       		.byte	0
 3682 008a 0B       		.uleb128 0xb
 3683 008b 2E       		.uleb128 0x2e
 3684 008c 01       		.byte	0x1
 3685 008d 3F       		.uleb128 0x3f
 3686 008e 19       		.uleb128 0x19
 3687 008f 03       		.uleb128 0x3
 3688 0090 0E       		.uleb128 0xe
 3689 0091 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 121


 3690 0092 0B       		.uleb128 0xb
 3691 0093 3B       		.uleb128 0x3b
 3692 0094 0B       		.uleb128 0xb
 3693 0095 27       		.uleb128 0x27
 3694 0096 19       		.uleb128 0x19
 3695 0097 11       		.uleb128 0x11
 3696 0098 01       		.uleb128 0x1
 3697 0099 12       		.uleb128 0x12
 3698 009a 06       		.uleb128 0x6
 3699 009b 40       		.uleb128 0x40
 3700 009c 18       		.uleb128 0x18
 3701 009d 9742     		.uleb128 0x2117
 3702 009f 19       		.uleb128 0x19
 3703 00a0 01       		.uleb128 0x1
 3704 00a1 13       		.uleb128 0x13
 3705 00a2 00       		.byte	0
 3706 00a3 00       		.byte	0
 3707 00a4 0C       		.uleb128 0xc
 3708 00a5 898201   		.uleb128 0x4109
 3709 00a8 00       		.byte	0
 3710 00a9 11       		.uleb128 0x11
 3711 00aa 01       		.uleb128 0x1
 3712 00ab 31       		.uleb128 0x31
 3713 00ac 13       		.uleb128 0x13
 3714 00ad 00       		.byte	0
 3715 00ae 00       		.byte	0
 3716 00af 0D       		.uleb128 0xd
 3717 00b0 2E       		.uleb128 0x2e
 3718 00b1 00       		.byte	0
 3719 00b2 3F       		.uleb128 0x3f
 3720 00b3 19       		.uleb128 0x19
 3721 00b4 03       		.uleb128 0x3
 3722 00b5 0E       		.uleb128 0xe
 3723 00b6 3A       		.uleb128 0x3a
 3724 00b7 0B       		.uleb128 0xb
 3725 00b8 3B       		.uleb128 0x3b
 3726 00b9 05       		.uleb128 0x5
 3727 00ba 27       		.uleb128 0x27
 3728 00bb 19       		.uleb128 0x19
 3729 00bc 49       		.uleb128 0x49
 3730 00bd 13       		.uleb128 0x13
 3731 00be 11       		.uleb128 0x11
 3732 00bf 01       		.uleb128 0x1
 3733 00c0 12       		.uleb128 0x12
 3734 00c1 06       		.uleb128 0x6
 3735 00c2 40       		.uleb128 0x40
 3736 00c3 18       		.uleb128 0x18
 3737 00c4 9742     		.uleb128 0x2117
 3738 00c6 19       		.uleb128 0x19
 3739 00c7 00       		.byte	0
 3740 00c8 00       		.byte	0
 3741 00c9 0E       		.uleb128 0xe
 3742 00ca 2E       		.uleb128 0x2e
 3743 00cb 01       		.byte	0x1
 3744 00cc 3F       		.uleb128 0x3f
 3745 00cd 19       		.uleb128 0x19
 3746 00ce 03       		.uleb128 0x3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 122


 3747 00cf 0E       		.uleb128 0xe
 3748 00d0 3A       		.uleb128 0x3a
 3749 00d1 0B       		.uleb128 0xb
 3750 00d2 3B       		.uleb128 0x3b
 3751 00d3 05       		.uleb128 0x5
 3752 00d4 27       		.uleb128 0x27
 3753 00d5 19       		.uleb128 0x19
 3754 00d6 11       		.uleb128 0x11
 3755 00d7 01       		.uleb128 0x1
 3756 00d8 12       		.uleb128 0x12
 3757 00d9 06       		.uleb128 0x6
 3758 00da 40       		.uleb128 0x40
 3759 00db 18       		.uleb128 0x18
 3760 00dc 9742     		.uleb128 0x2117
 3761 00de 19       		.uleb128 0x19
 3762 00df 01       		.uleb128 0x1
 3763 00e0 13       		.uleb128 0x13
 3764 00e1 00       		.byte	0
 3765 00e2 00       		.byte	0
 3766 00e3 0F       		.uleb128 0xf
 3767 00e4 05       		.uleb128 0x5
 3768 00e5 00       		.byte	0
 3769 00e6 03       		.uleb128 0x3
 3770 00e7 0E       		.uleb128 0xe
 3771 00e8 3A       		.uleb128 0x3a
 3772 00e9 0B       		.uleb128 0xb
 3773 00ea 3B       		.uleb128 0x3b
 3774 00eb 05       		.uleb128 0x5
 3775 00ec 49       		.uleb128 0x49
 3776 00ed 13       		.uleb128 0x13
 3777 00ee 02       		.uleb128 0x2
 3778 00ef 17       		.uleb128 0x17
 3779 00f0 00       		.byte	0
 3780 00f1 00       		.byte	0
 3781 00f2 10       		.uleb128 0x10
 3782 00f3 34       		.uleb128 0x34
 3783 00f4 00       		.byte	0
 3784 00f5 03       		.uleb128 0x3
 3785 00f6 0E       		.uleb128 0xe
 3786 00f7 3A       		.uleb128 0x3a
 3787 00f8 0B       		.uleb128 0xb
 3788 00f9 3B       		.uleb128 0x3b
 3789 00fa 05       		.uleb128 0x5
 3790 00fb 49       		.uleb128 0x49
 3791 00fc 13       		.uleb128 0x13
 3792 00fd 02       		.uleb128 0x2
 3793 00fe 17       		.uleb128 0x17
 3794 00ff 00       		.byte	0
 3795 0100 00       		.byte	0
 3796 0101 11       		.uleb128 0x11
 3797 0102 05       		.uleb128 0x5
 3798 0103 00       		.byte	0
 3799 0104 03       		.uleb128 0x3
 3800 0105 0E       		.uleb128 0xe
 3801 0106 3A       		.uleb128 0x3a
 3802 0107 0B       		.uleb128 0xb
 3803 0108 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 123


 3804 0109 05       		.uleb128 0x5
 3805 010a 49       		.uleb128 0x49
 3806 010b 13       		.uleb128 0x13
 3807 010c 02       		.uleb128 0x2
 3808 010d 18       		.uleb128 0x18
 3809 010e 00       		.byte	0
 3810 010f 00       		.byte	0
 3811 0110 12       		.uleb128 0x12
 3812 0111 2E       		.uleb128 0x2e
 3813 0112 01       		.byte	0x1
 3814 0113 3F       		.uleb128 0x3f
 3815 0114 19       		.uleb128 0x19
 3816 0115 03       		.uleb128 0x3
 3817 0116 0E       		.uleb128 0xe
 3818 0117 3A       		.uleb128 0x3a
 3819 0118 0B       		.uleb128 0xb
 3820 0119 3B       		.uleb128 0x3b
 3821 011a 05       		.uleb128 0x5
 3822 011b 27       		.uleb128 0x27
 3823 011c 19       		.uleb128 0x19
 3824 011d 49       		.uleb128 0x49
 3825 011e 13       		.uleb128 0x13
 3826 011f 11       		.uleb128 0x11
 3827 0120 01       		.uleb128 0x1
 3828 0121 12       		.uleb128 0x12
 3829 0122 06       		.uleb128 0x6
 3830 0123 40       		.uleb128 0x40
 3831 0124 18       		.uleb128 0x18
 3832 0125 9742     		.uleb128 0x2117
 3833 0127 19       		.uleb128 0x19
 3834 0128 01       		.uleb128 0x1
 3835 0129 13       		.uleb128 0x13
 3836 012a 00       		.byte	0
 3837 012b 00       		.byte	0
 3838 012c 13       		.uleb128 0x13
 3839 012d 34       		.uleb128 0x34
 3840 012e 00       		.byte	0
 3841 012f 03       		.uleb128 0x3
 3842 0130 0E       		.uleb128 0xe
 3843 0131 3A       		.uleb128 0x3a
 3844 0132 0B       		.uleb128 0xb
 3845 0133 3B       		.uleb128 0x3b
 3846 0134 05       		.uleb128 0x5
 3847 0135 49       		.uleb128 0x49
 3848 0136 13       		.uleb128 0x13
 3849 0137 02       		.uleb128 0x2
 3850 0138 18       		.uleb128 0x18
 3851 0139 00       		.byte	0
 3852 013a 00       		.byte	0
 3853 013b 14       		.uleb128 0x14
 3854 013c 34       		.uleb128 0x34
 3855 013d 00       		.byte	0
 3856 013e 03       		.uleb128 0x3
 3857 013f 0E       		.uleb128 0xe
 3858 0140 3A       		.uleb128 0x3a
 3859 0141 0B       		.uleb128 0xb
 3860 0142 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 124


 3861 0143 05       		.uleb128 0x5
 3862 0144 49       		.uleb128 0x49
 3863 0145 13       		.uleb128 0x13
 3864 0146 1C       		.uleb128 0x1c
 3865 0147 06       		.uleb128 0x6
 3866 0148 00       		.byte	0
 3867 0149 00       		.byte	0
 3868 014a 15       		.uleb128 0x15
 3869 014b 898201   		.uleb128 0x4109
 3870 014e 01       		.byte	0x1
 3871 014f 11       		.uleb128 0x11
 3872 0150 01       		.uleb128 0x1
 3873 0151 31       		.uleb128 0x31
 3874 0152 13       		.uleb128 0x13
 3875 0153 00       		.byte	0
 3876 0154 00       		.byte	0
 3877 0155 16       		.uleb128 0x16
 3878 0156 8A8201   		.uleb128 0x410a
 3879 0159 00       		.byte	0
 3880 015a 02       		.uleb128 0x2
 3881 015b 18       		.uleb128 0x18
 3882 015c 9142     		.uleb128 0x2111
 3883 015e 18       		.uleb128 0x18
 3884 015f 00       		.byte	0
 3885 0160 00       		.byte	0
 3886 0161 17       		.uleb128 0x17
 3887 0162 898201   		.uleb128 0x4109
 3888 0165 01       		.byte	0x1
 3889 0166 11       		.uleb128 0x11
 3890 0167 01       		.uleb128 0x1
 3891 0168 31       		.uleb128 0x31
 3892 0169 13       		.uleb128 0x13
 3893 016a 01       		.uleb128 0x1
 3894 016b 13       		.uleb128 0x13
 3895 016c 00       		.byte	0
 3896 016d 00       		.byte	0
 3897 016e 18       		.uleb128 0x18
 3898 016f 34       		.uleb128 0x34
 3899 0170 00       		.byte	0
 3900 0171 03       		.uleb128 0x3
 3901 0172 0E       		.uleb128 0xe
 3902 0173 3A       		.uleb128 0x3a
 3903 0174 0B       		.uleb128 0xb
 3904 0175 3B       		.uleb128 0x3b
 3905 0176 0B       		.uleb128 0xb
 3906 0177 49       		.uleb128 0x49
 3907 0178 13       		.uleb128 0x13
 3908 0179 02       		.uleb128 0x2
 3909 017a 17       		.uleb128 0x17
 3910 017b 00       		.byte	0
 3911 017c 00       		.byte	0
 3912 017d 19       		.uleb128 0x19
 3913 017e 34       		.uleb128 0x34
 3914 017f 00       		.byte	0
 3915 0180 03       		.uleb128 0x3
 3916 0181 0E       		.uleb128 0xe
 3917 0182 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 125


 3918 0183 0B       		.uleb128 0xb
 3919 0184 3B       		.uleb128 0x3b
 3920 0185 0B       		.uleb128 0xb
 3921 0186 49       		.uleb128 0x49
 3922 0187 13       		.uleb128 0x13
 3923 0188 02       		.uleb128 0x2
 3924 0189 18       		.uleb128 0x18
 3925 018a 00       		.byte	0
 3926 018b 00       		.byte	0
 3927 018c 1A       		.uleb128 0x1a
 3928 018d 2E       		.uleb128 0x2e
 3929 018e 01       		.byte	0x1
 3930 018f 3F       		.uleb128 0x3f
 3931 0190 19       		.uleb128 0x19
 3932 0191 03       		.uleb128 0x3
 3933 0192 0E       		.uleb128 0xe
 3934 0193 3A       		.uleb128 0x3a
 3935 0194 0B       		.uleb128 0xb
 3936 0195 3B       		.uleb128 0x3b
 3937 0196 05       		.uleb128 0x5
 3938 0197 27       		.uleb128 0x27
 3939 0198 19       		.uleb128 0x19
 3940 0199 11       		.uleb128 0x11
 3941 019a 01       		.uleb128 0x1
 3942 019b 12       		.uleb128 0x12
 3943 019c 06       		.uleb128 0x6
 3944 019d 40       		.uleb128 0x40
 3945 019e 18       		.uleb128 0x18
 3946 019f 9642     		.uleb128 0x2116
 3947 01a1 19       		.uleb128 0x19
 3948 01a2 01       		.uleb128 0x1
 3949 01a3 13       		.uleb128 0x13
 3950 01a4 00       		.byte	0
 3951 01a5 00       		.byte	0
 3952 01a6 1B       		.uleb128 0x1b
 3953 01a7 2E       		.uleb128 0x2e
 3954 01a8 01       		.byte	0x1
 3955 01a9 03       		.uleb128 0x3
 3956 01aa 0E       		.uleb128 0xe
 3957 01ab 3A       		.uleb128 0x3a
 3958 01ac 0B       		.uleb128 0xb
 3959 01ad 3B       		.uleb128 0x3b
 3960 01ae 05       		.uleb128 0x5
 3961 01af 27       		.uleb128 0x27
 3962 01b0 19       		.uleb128 0x19
 3963 01b1 11       		.uleb128 0x11
 3964 01b2 01       		.uleb128 0x1
 3965 01b3 12       		.uleb128 0x12
 3966 01b4 06       		.uleb128 0x6
 3967 01b5 40       		.uleb128 0x40
 3968 01b6 18       		.uleb128 0x18
 3969 01b7 9642     		.uleb128 0x2116
 3970 01b9 19       		.uleb128 0x19
 3971 01ba 01       		.uleb128 0x1
 3972 01bb 13       		.uleb128 0x13
 3973 01bc 00       		.byte	0
 3974 01bd 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 126


 3975 01be 1C       		.uleb128 0x1c
 3976 01bf 34       		.uleb128 0x34
 3977 01c0 00       		.byte	0
 3978 01c1 03       		.uleb128 0x3
 3979 01c2 08       		.uleb128 0x8
 3980 01c3 3A       		.uleb128 0x3a
 3981 01c4 0B       		.uleb128 0xb
 3982 01c5 3B       		.uleb128 0x3b
 3983 01c6 05       		.uleb128 0x5
 3984 01c7 49       		.uleb128 0x49
 3985 01c8 13       		.uleb128 0x13
 3986 01c9 02       		.uleb128 0x2
 3987 01ca 17       		.uleb128 0x17
 3988 01cb 00       		.byte	0
 3989 01cc 00       		.byte	0
 3990 01cd 1D       		.uleb128 0x1d
 3991 01ce 01       		.uleb128 0x1
 3992 01cf 01       		.byte	0x1
 3993 01d0 49       		.uleb128 0x49
 3994 01d1 13       		.uleb128 0x13
 3995 01d2 01       		.uleb128 0x1
 3996 01d3 13       		.uleb128 0x13
 3997 01d4 00       		.byte	0
 3998 01d5 00       		.byte	0
 3999 01d6 1E       		.uleb128 0x1e
 4000 01d7 21       		.uleb128 0x21
 4001 01d8 00       		.byte	0
 4002 01d9 49       		.uleb128 0x49
 4003 01da 13       		.uleb128 0x13
 4004 01db 2F       		.uleb128 0x2f
 4005 01dc 0B       		.uleb128 0xb
 4006 01dd 00       		.byte	0
 4007 01de 00       		.byte	0
 4008 01df 1F       		.uleb128 0x1f
 4009 01e0 34       		.uleb128 0x34
 4010 01e1 00       		.byte	0
 4011 01e2 03       		.uleb128 0x3
 4012 01e3 0E       		.uleb128 0xe
 4013 01e4 3A       		.uleb128 0x3a
 4014 01e5 0B       		.uleb128 0xb
 4015 01e6 3B       		.uleb128 0x3b
 4016 01e7 0B       		.uleb128 0xb
 4017 01e8 49       		.uleb128 0x49
 4018 01e9 13       		.uleb128 0x13
 4019 01ea 3F       		.uleb128 0x3f
 4020 01eb 19       		.uleb128 0x19
 4021 01ec 02       		.uleb128 0x2
 4022 01ed 18       		.uleb128 0x18
 4023 01ee 00       		.byte	0
 4024 01ef 00       		.byte	0
 4025 01f0 20       		.uleb128 0x20
 4026 01f1 26       		.uleb128 0x26
 4027 01f2 00       		.byte	0
 4028 01f3 49       		.uleb128 0x49
 4029 01f4 13       		.uleb128 0x13
 4030 01f5 00       		.byte	0
 4031 01f6 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 127


 4032 01f7 21       		.uleb128 0x21
 4033 01f8 2E       		.uleb128 0x2e
 4034 01f9 00       		.byte	0
 4035 01fa 3F       		.uleb128 0x3f
 4036 01fb 19       		.uleb128 0x19
 4037 01fc 3C       		.uleb128 0x3c
 4038 01fd 19       		.uleb128 0x19
 4039 01fe 6E       		.uleb128 0x6e
 4040 01ff 0E       		.uleb128 0xe
 4041 0200 03       		.uleb128 0x3
 4042 0201 0E       		.uleb128 0xe
 4043 0202 3A       		.uleb128 0x3a
 4044 0203 0B       		.uleb128 0xb
 4045 0204 3B       		.uleb128 0x3b
 4046 0205 0B       		.uleb128 0xb
 4047 0206 00       		.byte	0
 4048 0207 00       		.byte	0
 4049 0208 00       		.byte	0
 4050              		.section	.debug_loc,"",%progbits
 4051              	.Ldebug_loc0:
 4052              	.LLST0:
 4053 0000 00000000 		.4byte	.LVL1
 4054 0004 07000000 		.4byte	.LVL2-1
 4055 0008 0100     		.2byte	0x1
 4056 000a 50       		.byte	0x50
 4057 000b 07000000 		.4byte	.LVL2-1
 4058 000f 12000000 		.4byte	.LVL4
 4059 0013 0100     		.2byte	0x1
 4060 0015 54       		.byte	0x54
 4061 0016 12000000 		.4byte	.LVL4
 4062 001a 20000000 		.4byte	.LFE6
 4063 001e 0400     		.2byte	0x4
 4064 0020 F3       		.byte	0xf3
 4065 0021 01       		.uleb128 0x1
 4066 0022 50       		.byte	0x50
 4067 0023 9F       		.byte	0x9f
 4068 0024 00000000 		.4byte	0
 4069 0028 00000000 		.4byte	0
 4070              	.LLST1:
 4071 002c 08000000 		.4byte	.LVL2
 4072 0030 19000000 		.4byte	.LVL6-1
 4073 0034 0100     		.2byte	0x1
 4074 0036 50       		.byte	0x50
 4075 0037 00000000 		.4byte	0
 4076 003b 00000000 		.4byte	0
 4077              	.LLST2:
 4078 003f 10000000 		.4byte	.LVL3
 4079 0043 14000000 		.4byte	.LVL5
 4080 0047 0100     		.2byte	0x1
 4081 0049 53       		.byte	0x53
 4082 004a 14000000 		.4byte	.LVL5
 4083 004e 1A000000 		.4byte	.LVL7
 4084 0052 0100     		.2byte	0x1
 4085 0054 54       		.byte	0x54
 4086 0055 00000000 		.4byte	0
 4087 0059 00000000 		.4byte	0
 4088              	.LLST3:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 128


 4089 005d 06000000 		.4byte	.LVL9
 4090 0061 11000000 		.4byte	.LVL11-1
 4091 0065 0100     		.2byte	0x1
 4092 0067 50       		.byte	0x50
 4093 0068 00000000 		.4byte	0
 4094 006c 00000000 		.4byte	0
 4095              	.LLST4:
 4096 0070 0E000000 		.4byte	.LVL10
 4097 0074 14000000 		.4byte	.LVL12
 4098 0078 0100     		.2byte	0x1
 4099 007a 54       		.byte	0x54
 4100 007b 14000000 		.4byte	.LVL12
 4101 007f 1C000000 		.4byte	.LFE8
 4102 0083 0100     		.2byte	0x1
 4103 0085 50       		.byte	0x50
 4104 0086 00000000 		.4byte	0
 4105 008a 00000000 		.4byte	0
 4106              	.LLST5:
 4107 008e 00000000 		.4byte	.LVL13
 4108 0092 07000000 		.4byte	.LVL14-1
 4109 0096 0100     		.2byte	0x1
 4110 0098 50       		.byte	0x50
 4111 0099 07000000 		.4byte	.LVL14-1
 4112 009d 0A000000 		.4byte	.LVL15
 4113 00a1 0100     		.2byte	0x1
 4114 00a3 54       		.byte	0x54
 4115 00a4 0A000000 		.4byte	.LVL15
 4116 00a8 24000000 		.4byte	.LFE9
 4117 00ac 0400     		.2byte	0x4
 4118 00ae F3       		.byte	0xf3
 4119 00af 01       		.uleb128 0x1
 4120 00b0 50       		.byte	0x50
 4121 00b1 9F       		.byte	0x9f
 4122 00b2 00000000 		.4byte	0
 4123 00b6 00000000 		.4byte	0
 4124              	.LLST6:
 4125 00ba 08000000 		.4byte	.LVL14
 4126 00be 1D000000 		.4byte	.LVL16-1
 4127 00c2 0100     		.2byte	0x1
 4128 00c4 50       		.byte	0x50
 4129 00c5 00000000 		.4byte	0
 4130 00c9 00000000 		.4byte	0
 4131              	.LLST7:
 4132 00cd 00000000 		.4byte	.LVL17
 4133 00d1 07000000 		.4byte	.LVL18-1
 4134 00d5 0100     		.2byte	0x1
 4135 00d7 50       		.byte	0x50
 4136 00d8 07000000 		.4byte	.LVL18-1
 4137 00dc 14000000 		.4byte	.LVL19
 4138 00e0 0100     		.2byte	0x1
 4139 00e2 54       		.byte	0x54
 4140 00e3 14000000 		.4byte	.LVL19
 4141 00e7 24000000 		.4byte	.LFE11
 4142 00eb 0400     		.2byte	0x4
 4143 00ed F3       		.byte	0xf3
 4144 00ee 01       		.uleb128 0x1
 4145 00ef 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 129


 4146 00f0 9F       		.byte	0x9f
 4147 00f1 00000000 		.4byte	0
 4148 00f5 00000000 		.4byte	0
 4149              	.LLST8:
 4150 00f9 08000000 		.4byte	.LVL18
 4151 00fd 1D000000 		.4byte	.LVL20-1
 4152 0101 0100     		.2byte	0x1
 4153 0103 50       		.byte	0x50
 4154 0104 00000000 		.4byte	0
 4155 0108 00000000 		.4byte	0
 4156              	.LLST9:
 4157 010c 00000000 		.4byte	.LVL21
 4158 0110 04000000 		.4byte	.LVL22
 4159 0114 0100     		.2byte	0x1
 4160 0116 50       		.byte	0x50
 4161 0117 04000000 		.4byte	.LVL22
 4162 011b 14000000 		.4byte	.LFE12
 4163 011f 0100     		.2byte	0x1
 4164 0121 52       		.byte	0x52
 4165 0122 00000000 		.4byte	0
 4166 0126 00000000 		.4byte	0
 4167              	.LLST10:
 4168 012a 00000000 		.4byte	.LVL27
 4169 012e 04000000 		.4byte	.LVL28
 4170 0132 0100     		.2byte	0x1
 4171 0134 50       		.byte	0x50
 4172 0135 04000000 		.4byte	.LVL28
 4173 0139 14000000 		.4byte	.LFE21
 4174 013d 0400     		.2byte	0x4
 4175 013f F3       		.byte	0xf3
 4176 0140 01       		.uleb128 0x1
 4177 0141 50       		.byte	0x50
 4178 0142 9F       		.byte	0x9f
 4179 0143 00000000 		.4byte	0
 4180 0147 00000000 		.4byte	0
 4181              	.LLST11:
 4182 014b 00000000 		.4byte	.LVL29
 4183 014f 08000000 		.4byte	.LVL30
 4184 0153 0100     		.2byte	0x1
 4185 0155 50       		.byte	0x50
 4186 0156 08000000 		.4byte	.LVL30
 4187 015a 18000000 		.4byte	.LFE22
 4188 015e 0400     		.2byte	0x4
 4189 0160 F3       		.byte	0xf3
 4190 0161 01       		.uleb128 0x1
 4191 0162 50       		.byte	0x50
 4192 0163 9F       		.byte	0x9f
 4193 0164 00000000 		.4byte	0
 4194 0168 00000000 		.4byte	0
 4195              	.LLST12:
 4196 016c 00000000 		.4byte	.LVL31
 4197 0170 04000000 		.4byte	.LVL32
 4198 0174 0100     		.2byte	0x1
 4199 0176 50       		.byte	0x50
 4200 0177 04000000 		.4byte	.LVL32
 4201 017b 14000000 		.4byte	.LFE23
 4202 017f 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 130


 4203 0181 F3       		.byte	0xf3
 4204 0182 01       		.uleb128 0x1
 4205 0183 50       		.byte	0x50
 4206 0184 9F       		.byte	0x9f
 4207 0185 00000000 		.4byte	0
 4208 0189 00000000 		.4byte	0
 4209              	.LLST13:
 4210 018d 00000000 		.4byte	.LVL33
 4211 0191 04000000 		.4byte	.LVL34
 4212 0195 0100     		.2byte	0x1
 4213 0197 50       		.byte	0x50
 4214 0198 04000000 		.4byte	.LVL34
 4215 019c 14000000 		.4byte	.LFE24
 4216 01a0 0400     		.2byte	0x4
 4217 01a2 F3       		.byte	0xf3
 4218 01a3 01       		.uleb128 0x1
 4219 01a4 50       		.byte	0x50
 4220 01a5 9F       		.byte	0x9f
 4221 01a6 00000000 		.4byte	0
 4222 01aa 00000000 		.4byte	0
 4223              	.LLST14:
 4224 01ae 00000000 		.4byte	.LVL35
 4225 01b2 04000000 		.4byte	.LVL36
 4226 01b6 0100     		.2byte	0x1
 4227 01b8 50       		.byte	0x50
 4228 01b9 04000000 		.4byte	.LVL36
 4229 01bd 14000000 		.4byte	.LFE25
 4230 01c1 0400     		.2byte	0x4
 4231 01c3 F3       		.byte	0xf3
 4232 01c4 01       		.uleb128 0x1
 4233 01c5 50       		.byte	0x50
 4234 01c6 9F       		.byte	0x9f
 4235 01c7 00000000 		.4byte	0
 4236 01cb 00000000 		.4byte	0
 4237              	.LLST15:
 4238 01cf 00000000 		.4byte	.LVL38
 4239 01d3 0C000000 		.4byte	.LVL40
 4240 01d7 0100     		.2byte	0x1
 4241 01d9 50       		.byte	0x50
 4242 01da 0C000000 		.4byte	.LVL40
 4243 01de 20000000 		.4byte	.LFE15
 4244 01e2 0400     		.2byte	0x4
 4245 01e4 F3       		.byte	0xf3
 4246 01e5 01       		.uleb128 0x1
 4247 01e6 50       		.byte	0x50
 4248 01e7 9F       		.byte	0x9f
 4249 01e8 00000000 		.4byte	0
 4250 01ec 00000000 		.4byte	0
 4251              	.LLST16:
 4252 01f0 00000000 		.4byte	.LVL38
 4253 01f4 0F000000 		.4byte	.LVL41-1
 4254 01f8 0100     		.2byte	0x1
 4255 01fa 51       		.byte	0x51
 4256 01fb 0F000000 		.4byte	.LVL41-1
 4257 01ff 1E000000 		.4byte	.LVL43
 4258 0203 0100     		.2byte	0x1
 4259 0205 55       		.byte	0x55
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 131


 4260 0206 1E000000 		.4byte	.LVL43
 4261 020a 20000000 		.4byte	.LFE15
 4262 020e 0400     		.2byte	0x4
 4263 0210 F3       		.byte	0xf3
 4264 0211 01       		.uleb128 0x1
 4265 0212 51       		.byte	0x51
 4266 0213 9F       		.byte	0x9f
 4267 0214 00000000 		.4byte	0
 4268 0218 00000000 		.4byte	0
 4269              	.LLST17:
 4270 021c 00000000 		.4byte	.LVL44
 4271 0220 0A000000 		.4byte	.LVL46
 4272 0224 0100     		.2byte	0x1
 4273 0226 50       		.byte	0x50
 4274 0227 0A000000 		.4byte	.LVL46
 4275 022b 1C000000 		.4byte	.LFE16
 4276 022f 0400     		.2byte	0x4
 4277 0231 F3       		.byte	0xf3
 4278 0232 01       		.uleb128 0x1
 4279 0233 50       		.byte	0x50
 4280 0234 9F       		.byte	0x9f
 4281 0235 00000000 		.4byte	0
 4282 0239 00000000 		.4byte	0
 4283              	.LLST18:
 4284 023d 00000000 		.4byte	.LVL48
 4285 0241 0C000000 		.4byte	.LVL50
 4286 0245 0100     		.2byte	0x1
 4287 0247 50       		.byte	0x50
 4288 0248 0C000000 		.4byte	.LVL50
 4289 024c 22000000 		.4byte	.LFE17
 4290 0250 0400     		.2byte	0x4
 4291 0252 F3       		.byte	0xf3
 4292 0253 01       		.uleb128 0x1
 4293 0254 50       		.byte	0x50
 4294 0255 9F       		.byte	0x9f
 4295 0256 00000000 		.4byte	0
 4296 025a 00000000 		.4byte	0
 4297              	.LLST19:
 4298 025e 00000000 		.4byte	.LVL48
 4299 0262 0F000000 		.4byte	.LVL51-1
 4300 0266 0100     		.2byte	0x1
 4301 0268 51       		.byte	0x51
 4302 0269 0F000000 		.4byte	.LVL51-1
 4303 026d 20000000 		.4byte	.LVL53
 4304 0271 0100     		.2byte	0x1
 4305 0273 55       		.byte	0x55
 4306 0274 20000000 		.4byte	.LVL53
 4307 0278 22000000 		.4byte	.LFE17
 4308 027c 0400     		.2byte	0x4
 4309 027e F3       		.byte	0xf3
 4310 027f 01       		.uleb128 0x1
 4311 0280 51       		.byte	0x51
 4312 0281 9F       		.byte	0x9f
 4313 0282 00000000 		.4byte	0
 4314 0286 00000000 		.4byte	0
 4315              	.LLST20:
 4316 028a 00000000 		.4byte	.LVL54
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 132


 4317 028e 0A000000 		.4byte	.LVL56
 4318 0292 0100     		.2byte	0x1
 4319 0294 50       		.byte	0x50
 4320 0295 0A000000 		.4byte	.LVL56
 4321 0299 1E000000 		.4byte	.LFE18
 4322 029d 0400     		.2byte	0x4
 4323 029f F3       		.byte	0xf3
 4324 02a0 01       		.uleb128 0x1
 4325 02a1 50       		.byte	0x50
 4326 02a2 9F       		.byte	0x9f
 4327 02a3 00000000 		.4byte	0
 4328 02a7 00000000 		.4byte	0
 4329              	.LLST21:
 4330 02ab 00000000 		.4byte	.LVL58
 4331 02af 0C000000 		.4byte	.LVL59
 4332 02b3 0100     		.2byte	0x1
 4333 02b5 50       		.byte	0x50
 4334 02b6 0C000000 		.4byte	.LVL59
 4335 02ba 4C000000 		.4byte	.LFE19
 4336 02be 0400     		.2byte	0x4
 4337 02c0 F3       		.byte	0xf3
 4338 02c1 01       		.uleb128 0x1
 4339 02c2 50       		.byte	0x50
 4340 02c3 9F       		.byte	0x9f
 4341 02c4 00000000 		.4byte	0
 4342 02c8 00000000 		.4byte	0
 4343              	.LLST22:
 4344 02cc 00000000 		.4byte	.LVL58
 4345 02d0 0F000000 		.4byte	.LVL60-1
 4346 02d4 0100     		.2byte	0x1
 4347 02d6 51       		.byte	0x51
 4348 02d7 0F000000 		.4byte	.LVL60-1
 4349 02db 4C000000 		.4byte	.LFE19
 4350 02df 0400     		.2byte	0x4
 4351 02e1 F3       		.byte	0xf3
 4352 02e2 01       		.uleb128 0x1
 4353 02e3 51       		.byte	0x51
 4354 02e4 9F       		.byte	0x9f
 4355 02e5 00000000 		.4byte	0
 4356 02e9 00000000 		.4byte	0
 4357              	.LLST23:
 4358 02ed 26000000 		.4byte	.LVL63
 4359 02f1 45000000 		.4byte	.LVL69-1
 4360 02f5 0100     		.2byte	0x1
 4361 02f7 50       		.byte	0x50
 4362 02f8 00000000 		.4byte	0
 4363 02fc 00000000 		.4byte	0
 4364              	.LLST24:
 4365 0300 22000000 		.4byte	.LVL62
 4366 0304 46000000 		.4byte	.LVL70
 4367 0308 0100     		.2byte	0x1
 4368 030a 55       		.byte	0x55
 4369 030b 00000000 		.4byte	0
 4370 030f 00000000 		.4byte	0
 4371              	.LLST25:
 4372 0313 32000000 		.4byte	.LVL64
 4373 0317 38000000 		.4byte	.LVL65
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 133


 4374 031b 0100     		.2byte	0x1
 4375 031d 51       		.byte	0x51
 4376 031e 3A000000 		.4byte	.LVL66
 4377 0322 3C000000 		.4byte	.LVL67
 4378 0326 0100     		.2byte	0x1
 4379 0328 51       		.byte	0x51
 4380 0329 3C000000 		.4byte	.LVL67
 4381 032d 40000000 		.4byte	.LVL68
 4382 0331 0100     		.2byte	0x1
 4383 0333 53       		.byte	0x53
 4384 0334 40000000 		.4byte	.LVL68
 4385 0338 45000000 		.4byte	.LVL69-1
 4386 033c 0100     		.2byte	0x1
 4387 033e 51       		.byte	0x51
 4388 033f 00000000 		.4byte	0
 4389 0343 00000000 		.4byte	0
 4390              	.LLST26:
 4391 0347 00000000 		.4byte	.LVL71
 4392 034b 0A000000 		.4byte	.LVL72
 4393 034f 0100     		.2byte	0x1
 4394 0351 50       		.byte	0x50
 4395 0352 0A000000 		.4byte	.LVL72
 4396 0356 2C000000 		.4byte	.LFE20
 4397 035a 0400     		.2byte	0x4
 4398 035c F3       		.byte	0xf3
 4399 035d 01       		.uleb128 0x1
 4400 035e 50       		.byte	0x50
 4401 035f 9F       		.byte	0x9f
 4402 0360 00000000 		.4byte	0
 4403 0364 00000000 		.4byte	0
 4404              	.LLST27:
 4405 0368 24000000 		.4byte	.LVL74
 4406 036c 26000000 		.4byte	.LVL75
 4407 0370 0100     		.2byte	0x1
 4408 0372 50       		.byte	0x50
 4409 0373 00000000 		.4byte	0
 4410 0377 00000000 		.4byte	0
 4411              	.LLST28:
 4412 037b 00000000 		.4byte	.LVL76
 4413 037f 06000000 		.4byte	.LVL77
 4414 0383 0100     		.2byte	0x1
 4415 0385 50       		.byte	0x50
 4416 0386 06000000 		.4byte	.LVL77
 4417 038a 26000000 		.4byte	.LVL81
 4418 038e 0100     		.2byte	0x1
 4419 0390 54       		.byte	0x54
 4420 0391 00000000 		.4byte	0
 4421 0395 00000000 		.4byte	0
 4422              	.LLST29:
 4423 0399 2A000000 		.4byte	.LVL86
 4424 039d 62000000 		.4byte	.LVL92
 4425 03a1 0100     		.2byte	0x1
 4426 03a3 51       		.byte	0x51
 4427 03a4 62000000 		.4byte	.LVL92
 4428 03a8 74000000 		.4byte	.LVL96
 4429 03ac 0300     		.2byte	0x3
 4430 03ae 71       		.byte	0x71
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 134


 4431 03af 1A       		.sleb128 26
 4432 03b0 9F       		.byte	0x9f
 4433 03b1 00000000 		.4byte	0
 4434 03b5 00000000 		.4byte	0
 4435              	.LLST30:
 4436 03b9 12000000 		.4byte	.LVL85
 4437 03bd A0000000 		.4byte	.LVL101
 4438 03c1 0100     		.2byte	0x1
 4439 03c3 54       		.byte	0x54
 4440 03c4 00000000 		.4byte	0
 4441 03c8 00000000 		.4byte	0
 4442              	.LLST31:
 4443 03cc 32000000 		.4byte	.LVL87
 4444 03d0 50000000 		.4byte	.LVL89
 4445 03d4 0100     		.2byte	0x1
 4446 03d6 53       		.byte	0x53
 4447 03d7 50000000 		.4byte	.LVL89
 4448 03db 58000000 		.4byte	.LVL90
 4449 03df 0100     		.2byte	0x1
 4450 03e1 50       		.byte	0x50
 4451 03e2 58000000 		.4byte	.LVL90
 4452 03e6 5A000000 		.4byte	.LVL91
 4453 03ea 0100     		.2byte	0x1
 4454 03ec 53       		.byte	0x53
 4455 03ed 5A000000 		.4byte	.LVL91
 4456 03f1 74000000 		.4byte	.LVL96
 4457 03f5 0100     		.2byte	0x1
 4458 03f7 50       		.byte	0x50
 4459 03f8 74000000 		.4byte	.LVL96
 4460 03fc 7C000000 		.4byte	.LVL97
 4461 0400 0100     		.2byte	0x1
 4462 0402 53       		.byte	0x53
 4463 0403 7C000000 		.4byte	.LVL97
 4464 0407 7E000000 		.4byte	.LVL98
 4465 040b 0200     		.2byte	0x2
 4466 040d 72       		.byte	0x72
 4467 040e 00       		.sleb128 0
 4468 040f 00000000 		.4byte	0
 4469 0413 00000000 		.4byte	0
 4470              	.LLST32:
 4471 0417 04000000 		.4byte	.LVL82
 4472 041b 68000000 		.4byte	.LVL93
 4473 041f 0200     		.2byte	0x2
 4474 0421 30       		.byte	0x30
 4475 0422 9F       		.byte	0x9f
 4476 0423 6E000000 		.4byte	.LVL94
 4477 0427 70000000 		.4byte	.LVL95
 4478 042b 0100     		.2byte	0x1
 4479 042d 52       		.byte	0x52
 4480 042e 00000000 		.4byte	0
 4481 0432 00000000 		.4byte	0
 4482              	.LLST33:
 4483 0436 00000000 		.4byte	.LVL102
 4484 043a 25000000 		.4byte	.LVL104-1
 4485 043e 0100     		.2byte	0x1
 4486 0440 50       		.byte	0x50
 4487 0441 25000000 		.4byte	.LVL104-1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 135


 4488 0445 A0000000 		.4byte	.LVL117
 4489 0449 0100     		.2byte	0x1
 4490 044b 54       		.byte	0x54
 4491 044c A0000000 		.4byte	.LVL117
 4492 0450 B6000000 		.4byte	.LVL120
 4493 0454 0400     		.2byte	0x4
 4494 0456 F3       		.byte	0xf3
 4495 0457 01       		.uleb128 0x1
 4496 0458 50       		.byte	0x50
 4497 0459 9F       		.byte	0x9f
 4498 045a B6000000 		.4byte	.LVL120
 4499 045e B8000000 		.4byte	.LVL121
 4500 0462 0100     		.2byte	0x1
 4501 0464 50       		.byte	0x50
 4502 0465 B8000000 		.4byte	.LVL121
 4503 0469 BC000000 		.4byte	.LVL122
 4504 046d 0100     		.2byte	0x1
 4505 046f 54       		.byte	0x54
 4506 0470 BC000000 		.4byte	.LVL122
 4507 0474 D8000000 		.4byte	.LFE10
 4508 0478 0400     		.2byte	0x4
 4509 047a F3       		.byte	0xf3
 4510 047b 01       		.uleb128 0x1
 4511 047c 50       		.byte	0x50
 4512 047d 9F       		.byte	0x9f
 4513 047e 00000000 		.4byte	0
 4514 0482 00000000 		.4byte	0
 4515              	.LLST34:
 4516 0486 28000000 		.4byte	.LVL105
 4517 048a 44000000 		.4byte	.LVL111
 4518 048e 0200     		.2byte	0x2
 4519 0490 91       		.byte	0x91
 4520 0491 64       		.sleb128 -28
 4521 0492 00000000 		.4byte	0
 4522 0496 00000000 		.4byte	0
 4523              	.LLST35:
 4524 049a 4C000000 		.4byte	.LVL112
 4525 049e 54000000 		.4byte	.LVL113
 4526 04a2 0100     		.2byte	0x1
 4527 04a4 53       		.byte	0x53
 4528 04a5 54000000 		.4byte	.LVL113
 4529 04a9 58000000 		.4byte	.LVL114
 4530 04ad 0700     		.2byte	0x7
 4531 04af 0C       		.byte	0xc
 4532 04b0 0C0F0340 		.4byte	0x40030f0c
 4533 04b4 06       		.byte	0x6
 4534 04b5 9F       		.byte	0x9f
 4535 04b6 00000000 		.4byte	0
 4536 04ba 00000000 		.4byte	0
 4537              	.LLST36:
 4538 04be 06000000 		.4byte	.LVL103
 4539 04c2 30000000 		.4byte	.LVL107
 4540 04c6 0200     		.2byte	0x2
 4541 04c8 30       		.byte	0x30
 4542 04c9 9F       		.byte	0x9f
 4543 04ca 30000000 		.4byte	.LVL107
 4544 04ce 38000000 		.4byte	.LVL109
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 136


 4545 04d2 0200     		.2byte	0x2
 4546 04d4 31       		.byte	0x31
 4547 04d5 9F       		.byte	0x9f
 4548 04d6 38000000 		.4byte	.LVL109
 4549 04da 3A000000 		.4byte	.LVL110
 4550 04de 0200     		.2byte	0x2
 4551 04e0 30       		.byte	0x30
 4552 04e1 9F       		.byte	0x9f
 4553 04e2 3A000000 		.4byte	.LVL110
 4554 04e6 B6000000 		.4byte	.LVL120
 4555 04ea 0100     		.2byte	0x1
 4556 04ec 56       		.byte	0x56
 4557 04ed B6000000 		.4byte	.LVL120
 4558 04f1 BC000000 		.4byte	.LVL122
 4559 04f5 0200     		.2byte	0x2
 4560 04f7 30       		.byte	0x30
 4561 04f8 9F       		.byte	0x9f
 4562 04f9 00000000 		.4byte	0
 4563 04fd 00000000 		.4byte	0
 4564              	.LLST37:
 4565 0501 00000000 		.4byte	.LVL123
 4566 0505 08000000 		.4byte	.LVL124
 4567 0509 0100     		.2byte	0x1
 4568 050b 50       		.byte	0x50
 4569 050c 08000000 		.4byte	.LVL124
 4570 0510 14000000 		.4byte	.LFE29
 4571 0514 0400     		.2byte	0x4
 4572 0516 F3       		.byte	0xf3
 4573 0517 01       		.uleb128 0x1
 4574 0518 50       		.byte	0x50
 4575 0519 9F       		.byte	0x9f
 4576 051a 00000000 		.4byte	0
 4577 051e 00000000 		.4byte	0
 4578              	.LLST38:
 4579 0522 00000000 		.4byte	.LVL126
 4580 0526 1A000000 		.4byte	.LVL127
 4581 052a 0100     		.2byte	0x1
 4582 052c 50       		.byte	0x50
 4583 052d 1A000000 		.4byte	.LVL127
 4584 0531 4C000000 		.4byte	.LFE30
 4585 0535 0400     		.2byte	0x4
 4586 0537 F3       		.byte	0xf3
 4587 0538 01       		.uleb128 0x1
 4588 0539 50       		.byte	0x50
 4589 053a 9F       		.byte	0x9f
 4590 053b 00000000 		.4byte	0
 4591 053f 00000000 		.4byte	0
 4592              	.LLST39:
 4593 0543 00000000 		.4byte	.LVL131
 4594 0547 02000000 		.4byte	.LVL132
 4595 054b 0100     		.2byte	0x1
 4596 054d 50       		.byte	0x50
 4597 054e 02000000 		.4byte	.LVL132
 4598 0552 10000000 		.4byte	.LFE37
 4599 0556 0400     		.2byte	0x4
 4600 0558 F3       		.byte	0xf3
 4601 0559 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 137


 4602 055a 50       		.byte	0x50
 4603 055b 9F       		.byte	0x9f
 4604 055c 00000000 		.4byte	0
 4605 0560 00000000 		.4byte	0
 4606              	.LLST40:
 4607 0564 0C000000 		.4byte	.LVL135
 4608 0568 1C000000 		.4byte	.LVL138
 4609 056c 0100     		.2byte	0x1
 4610 056e 54       		.byte	0x54
 4611 056f 1E000000 		.4byte	.LVL139
 4612 0573 22000000 		.4byte	.LVL140
 4613 0577 0100     		.2byte	0x1
 4614 0579 54       		.byte	0x54
 4615 057a 00000000 		.4byte	0
 4616 057e 00000000 		.4byte	0
 4617              	.LLST41:
 4618 0582 02000000 		.4byte	.LVL141
 4619 0586 06000000 		.4byte	.LVL142
 4620 058a 0200     		.2byte	0x2
 4621 058c 30       		.byte	0x30
 4622 058d 9F       		.byte	0x9f
 4623 058e 06000000 		.4byte	.LVL142
 4624 0592 1B000000 		.4byte	.LVL144-1
 4625 0596 0100     		.2byte	0x1
 4626 0598 53       		.byte	0x53
 4627 0599 00000000 		.4byte	0
 4628 059d 00000000 		.4byte	0
 4629              	.LLST42:
 4630 05a1 00000000 		.4byte	.LVL151
 4631 05a5 06000000 		.4byte	.LVL152
 4632 05a9 0100     		.2byte	0x1
 4633 05ab 50       		.byte	0x50
 4634 05ac 06000000 		.4byte	.LVL152
 4635 05b0 10000000 		.4byte	.LFE44
 4636 05b4 0400     		.2byte	0x4
 4637 05b6 F3       		.byte	0xf3
 4638 05b7 01       		.uleb128 0x1
 4639 05b8 50       		.byte	0x50
 4640 05b9 9F       		.byte	0x9f
 4641 05ba 00000000 		.4byte	0
 4642 05be 00000000 		.4byte	0
 4643              	.LLST43:
 4644 05c2 00000000 		.4byte	.LVL153
 4645 05c6 02000000 		.4byte	.LVL154
 4646 05ca 0100     		.2byte	0x1
 4647 05cc 50       		.byte	0x50
 4648 05cd 02000000 		.4byte	.LVL154
 4649 05d1 0C000000 		.4byte	.LFE45
 4650 05d5 0400     		.2byte	0x4
 4651 05d7 F3       		.byte	0xf3
 4652 05d8 01       		.uleb128 0x1
 4653 05d9 50       		.byte	0x50
 4654 05da 9F       		.byte	0x9f
 4655 05db 00000000 		.4byte	0
 4656 05df 00000000 		.4byte	0
 4657              		.section	.debug_aranges,"",%progbits
 4658 0000 8C010000 		.4byte	0x18c
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 138


 4659 0004 0200     		.2byte	0x2
 4660 0006 00000000 		.4byte	.Ldebug_info0
 4661 000a 04       		.byte	0x4
 4662 000b 00       		.byte	0
 4663 000c 0000     		.2byte	0
 4664 000e 0000     		.2byte	0
 4665 0010 00000000 		.4byte	.LFB1
 4666 0014 14000000 		.4byte	.LFE1-.LFB1
 4667 0018 00000000 		.4byte	.LFB4
 4668 001c 14000000 		.4byte	.LFE4-.LFB4
 4669 0020 00000000 		.4byte	.LFB2
 4670 0024 18000000 		.4byte	.LFE2-.LFB2
 4671 0028 00000000 		.4byte	.LFB5
 4672 002c 14000000 		.4byte	.LFE5-.LFB5
 4673 0030 00000000 		.4byte	.LFB6
 4674 0034 20000000 		.4byte	.LFE6-.LFB6
 4675 0038 00000000 		.4byte	.LFB7
 4676 003c 34000000 		.4byte	.LFE7-.LFB7
 4677 0040 00000000 		.4byte	.LFB8
 4678 0044 1C000000 		.4byte	.LFE8-.LFB8
 4679 0048 00000000 		.4byte	.LFB9
 4680 004c 24000000 		.4byte	.LFE9-.LFB9
 4681 0050 00000000 		.4byte	.LFB11
 4682 0054 24000000 		.4byte	.LFE11-.LFB11
 4683 0058 00000000 		.4byte	.LFB12
 4684 005c 14000000 		.4byte	.LFE12-.LFB12
 4685 0060 00000000 		.4byte	.LFB13
 4686 0064 10000000 		.4byte	.LFE13-.LFB13
 4687 0068 00000000 		.4byte	.LFB14
 4688 006c 0C000000 		.4byte	.LFE14-.LFB14
 4689 0070 00000000 		.4byte	.LFB21
 4690 0074 14000000 		.4byte	.LFE21-.LFB21
 4691 0078 00000000 		.4byte	.LFB22
 4692 007c 18000000 		.4byte	.LFE22-.LFB22
 4693 0080 00000000 		.4byte	.LFB23
 4694 0084 14000000 		.4byte	.LFE23-.LFB23
 4695 0088 00000000 		.4byte	.LFB24
 4696 008c 14000000 		.4byte	.LFE24-.LFB24
 4697 0090 00000000 		.4byte	.LFB25
 4698 0094 14000000 		.4byte	.LFE25-.LFB25
 4699 0098 00000000 		.4byte	.LFB26
 4700 009c 04000000 		.4byte	.LFE26-.LFB26
 4701 00a0 00000000 		.4byte	.LFB15
 4702 00a4 20000000 		.4byte	.LFE15-.LFB15
 4703 00a8 00000000 		.4byte	.LFB16
 4704 00ac 1C000000 		.4byte	.LFE16-.LFB16
 4705 00b0 00000000 		.4byte	.LFB17
 4706 00b4 22000000 		.4byte	.LFE17-.LFB17
 4707 00b8 00000000 		.4byte	.LFB18
 4708 00bc 1E000000 		.4byte	.LFE18-.LFB18
 4709 00c0 00000000 		.4byte	.LFB19
 4710 00c4 4C000000 		.4byte	.LFE19-.LFB19
 4711 00c8 00000000 		.4byte	.LFB20
 4712 00cc 2C000000 		.4byte	.LFE20-.LFB20
 4713 00d0 00000000 		.4byte	.LFB27
 4714 00d4 18000000 		.4byte	.LFE27-.LFB27
 4715 00d8 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 139


 4716 00dc 30000000 		.4byte	.LFE28-.LFB28
 4717 00e0 00000000 		.4byte	.LFB3
 4718 00e4 CC000000 		.4byte	.LFE3-.LFB3
 4719 00e8 00000000 		.4byte	.LFB10
 4720 00ec D8000000 		.4byte	.LFE10-.LFB10
 4721 00f0 00000000 		.4byte	.LFB29
 4722 00f4 14000000 		.4byte	.LFE29-.LFB29
 4723 00f8 00000000 		.4byte	.LFB30
 4724 00fc 4C000000 		.4byte	.LFE30-.LFB30
 4725 0100 00000000 		.4byte	.LFB34
 4726 0104 10000000 		.4byte	.LFE34-.LFB34
 4727 0108 00000000 		.4byte	.LFB35
 4728 010c 10000000 		.4byte	.LFE35-.LFB35
 4729 0110 00000000 		.4byte	.LFB33
 4730 0114 18000000 		.4byte	.LFE33-.LFB33
 4731 0118 00000000 		.4byte	.LFB36
 4732 011c 10000000 		.4byte	.LFE36-.LFB36
 4733 0120 00000000 		.4byte	.LFB37
 4734 0124 10000000 		.4byte	.LFE37-.LFB37
 4735 0128 00000000 		.4byte	.LFB38
 4736 012c 10000000 		.4byte	.LFE38-.LFB38
 4737 0130 00000000 		.4byte	.LFB39
 4738 0134 10000000 		.4byte	.LFE39-.LFB39
 4739 0138 00000000 		.4byte	.LFB40
 4740 013c 20000000 		.4byte	.LFE40-.LFB40
 4741 0140 00000000 		.4byte	.LFB41
 4742 0144 10000000 		.4byte	.LFE41-.LFB41
 4743 0148 00000000 		.4byte	.LFB42
 4744 014c 10000000 		.4byte	.LFE42-.LFB42
 4745 0150 00000000 		.4byte	.LFB46
 4746 0154 28000000 		.4byte	.LFE46-.LFB46
 4747 0158 00000000 		.4byte	.LFB43
 4748 015c 0C000000 		.4byte	.LFE43-.LFB43
 4749 0160 00000000 		.4byte	.LFB32
 4750 0164 44000000 		.4byte	.LFE32-.LFB32
 4751 0168 00000000 		.4byte	.LFB31
 4752 016c 20000000 		.4byte	.LFE31-.LFB31
 4753 0170 00000000 		.4byte	.LFB44
 4754 0174 10000000 		.4byte	.LFE44-.LFB44
 4755 0178 00000000 		.4byte	.LFB45
 4756 017c 0C000000 		.4byte	.LFE45-.LFB45
 4757 0180 00000000 		.4byte	.LFB47
 4758 0184 70000000 		.4byte	.LFE47-.LFB47
 4759 0188 00000000 		.4byte	0
 4760 018c 00000000 		.4byte	0
 4761              		.section	.debug_ranges,"",%progbits
 4762              	.Ldebug_ranges0:
 4763 0000 00000000 		.4byte	.LFB1
 4764 0004 14000000 		.4byte	.LFE1
 4765 0008 00000000 		.4byte	.LFB4
 4766 000c 14000000 		.4byte	.LFE4
 4767 0010 00000000 		.4byte	.LFB2
 4768 0014 18000000 		.4byte	.LFE2
 4769 0018 00000000 		.4byte	.LFB5
 4770 001c 14000000 		.4byte	.LFE5
 4771 0020 00000000 		.4byte	.LFB6
 4772 0024 20000000 		.4byte	.LFE6
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 140


 4773 0028 00000000 		.4byte	.LFB7
 4774 002c 34000000 		.4byte	.LFE7
 4775 0030 00000000 		.4byte	.LFB8
 4776 0034 1C000000 		.4byte	.LFE8
 4777 0038 00000000 		.4byte	.LFB9
 4778 003c 24000000 		.4byte	.LFE9
 4779 0040 00000000 		.4byte	.LFB11
 4780 0044 24000000 		.4byte	.LFE11
 4781 0048 00000000 		.4byte	.LFB12
 4782 004c 14000000 		.4byte	.LFE12
 4783 0050 00000000 		.4byte	.LFB13
 4784 0054 10000000 		.4byte	.LFE13
 4785 0058 00000000 		.4byte	.LFB14
 4786 005c 0C000000 		.4byte	.LFE14
 4787 0060 00000000 		.4byte	.LFB21
 4788 0064 14000000 		.4byte	.LFE21
 4789 0068 00000000 		.4byte	.LFB22
 4790 006c 18000000 		.4byte	.LFE22
 4791 0070 00000000 		.4byte	.LFB23
 4792 0074 14000000 		.4byte	.LFE23
 4793 0078 00000000 		.4byte	.LFB24
 4794 007c 14000000 		.4byte	.LFE24
 4795 0080 00000000 		.4byte	.LFB25
 4796 0084 14000000 		.4byte	.LFE25
 4797 0088 00000000 		.4byte	.LFB26
 4798 008c 04000000 		.4byte	.LFE26
 4799 0090 00000000 		.4byte	.LFB15
 4800 0094 20000000 		.4byte	.LFE15
 4801 0098 00000000 		.4byte	.LFB16
 4802 009c 1C000000 		.4byte	.LFE16
 4803 00a0 00000000 		.4byte	.LFB17
 4804 00a4 22000000 		.4byte	.LFE17
 4805 00a8 00000000 		.4byte	.LFB18
 4806 00ac 1E000000 		.4byte	.LFE18
 4807 00b0 00000000 		.4byte	.LFB19
 4808 00b4 4C000000 		.4byte	.LFE19
 4809 00b8 00000000 		.4byte	.LFB20
 4810 00bc 2C000000 		.4byte	.LFE20
 4811 00c0 00000000 		.4byte	.LFB27
 4812 00c4 18000000 		.4byte	.LFE27
 4813 00c8 00000000 		.4byte	.LFB28
 4814 00cc 30000000 		.4byte	.LFE28
 4815 00d0 00000000 		.4byte	.LFB3
 4816 00d4 CC000000 		.4byte	.LFE3
 4817 00d8 00000000 		.4byte	.LFB10
 4818 00dc D8000000 		.4byte	.LFE10
 4819 00e0 00000000 		.4byte	.LFB29
 4820 00e4 14000000 		.4byte	.LFE29
 4821 00e8 00000000 		.4byte	.LFB30
 4822 00ec 4C000000 		.4byte	.LFE30
 4823 00f0 00000000 		.4byte	.LFB34
 4824 00f4 10000000 		.4byte	.LFE34
 4825 00f8 00000000 		.4byte	.LFB35
 4826 00fc 10000000 		.4byte	.LFE35
 4827 0100 00000000 		.4byte	.LFB33
 4828 0104 18000000 		.4byte	.LFE33
 4829 0108 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 141


 4830 010c 10000000 		.4byte	.LFE36
 4831 0110 00000000 		.4byte	.LFB37
 4832 0114 10000000 		.4byte	.LFE37
 4833 0118 00000000 		.4byte	.LFB38
 4834 011c 10000000 		.4byte	.LFE38
 4835 0120 00000000 		.4byte	.LFB39
 4836 0124 10000000 		.4byte	.LFE39
 4837 0128 00000000 		.4byte	.LFB40
 4838 012c 20000000 		.4byte	.LFE40
 4839 0130 00000000 		.4byte	.LFB41
 4840 0134 10000000 		.4byte	.LFE41
 4841 0138 00000000 		.4byte	.LFB42
 4842 013c 10000000 		.4byte	.LFE42
 4843 0140 00000000 		.4byte	.LFB46
 4844 0144 28000000 		.4byte	.LFE46
 4845 0148 00000000 		.4byte	.LFB43
 4846 014c 0C000000 		.4byte	.LFE43
 4847 0150 00000000 		.4byte	.LFB32
 4848 0154 44000000 		.4byte	.LFE32
 4849 0158 00000000 		.4byte	.LFB31
 4850 015c 20000000 		.4byte	.LFE31
 4851 0160 00000000 		.4byte	.LFB44
 4852 0164 10000000 		.4byte	.LFE44
 4853 0168 00000000 		.4byte	.LFB45
 4854 016c 0C000000 		.4byte	.LFE45
 4855 0170 00000000 		.4byte	.LFB47
 4856 0174 70000000 		.4byte	.LFE47
 4857 0178 00000000 		.4byte	0
 4858 017c 00000000 		.4byte	0
 4859              		.section	.debug_line,"",%progbits
 4860              	.Ldebug_line0:
 4861 0000 C1040000 		.section	.debug_str,"MS",%progbits,1
 4861      02006700 
 4861      00000201 
 4861      FB0E0D00 
 4861      01010101 
 4862              	.LASF52:
 4863 0000 72616D56 		.ascii	"ramVectorTable\000"
 4863      6563746F 
 4863      72546162 
 4863      6C6500
 4864              	.LASF10:
 4865 000f 75696E74 		.ascii	"uint16\000"
 4865      313600
 4866              	.LASF39:
 4867 0016 696E7453 		.ascii	"intState\000"
 4867      74617465 
 4867      00
 4868              	.LASF24:
 4869 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4869      73436C6B 
 4869      57726974 
 4869      65486663 
 4869      6C6B4469 
 4870              	.LASF111:
 4871 0038 433A5C55 		.ascii	"C:\\Users\\Xwx47\\Documents\\Creator\\nRF24_Example"
 4871      73657273 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 142


 4871      5C587778 
 4871      34375C44 
 4871      6F63756D 
 4872 0066 5F50726F 		.ascii	"_Projects\\00_Basic_Rx.cydsn\000"
 4872      6A656374 
 4872      735C3030 
 4872      5F426173 
 4872      69635F52 
 4873              	.LASF103:
 4874 0082 43795379 		.ascii	"CySysClkPumpConfig\000"
 4874      73436C6B 
 4874      50756D70 
 4874      436F6E66 
 4874      696700
 4875              	.LASF27:
 4876 0095 43795379 		.ascii	"CySysEnablePumpClock\000"
 4876      73456E61 
 4876      626C6550 
 4876      756D7043 
 4876      6C6F636B 
 4877              	.LASF92:
 4878 00aa 72657456 		.ascii	"retVal\000"
 4878      616C00
 4879              	.LASF38:
 4880 00b1 43794469 		.ascii	"CyDisableInts\000"
 4880      7361626C 
 4880      65496E74 
 4880      7300
 4881              	.LASF7:
 4882 00bf 6C6F6E67 		.ascii	"long long unsigned int\000"
 4882      206C6F6E 
 4882      6720756E 
 4882      7369676E 
 4882      65642069 
 4883              	.LASF101:
 4884 00d6 43795379 		.ascii	"CySysTickInitVar\000"
 4884      73546963 
 4884      6B496E69 
 4884      74566172 
 4884      00
 4885              	.LASF40:
 4886 00e7 4379456E 		.ascii	"CyEnableInts\000"
 4886      61626C65 
 4886      496E7473 
 4886      00
 4887              	.LASF107:
 4888 00f4 43795379 		.ascii	"CySysClkWcoEnabled\000"
 4888      73436C6B 
 4888      57636F45 
 4888      6E61626C 
 4888      656400
 4889              	.LASF61:
 4890 0107 4379536F 		.ascii	"CySoftwareReset\000"
 4890      66747761 
 4890      72655265 
 4890      73657400 
 4891              	.LASF76:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 143


 4892 0117 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4892      73546963 
 4892      6B456E61 
 4892      626C6549 
 4892      6E746572 
 4893              	.LASF44:
 4894 0130 4379496E 		.ascii	"CyIntGetState\000"
 4894      74476574 
 4894      53746174 
 4894      6500
 4895              	.LASF6:
 4896 013e 6C6F6E67 		.ascii	"long long int\000"
 4896      206C6F6E 
 4896      6720696E 
 4896      7400
 4897              	.LASF0:
 4898 014c 7369676E 		.ascii	"signed char\000"
 4898      65642063 
 4898      68617200 
 4899              	.LASF65:
 4900 0158 66726571 		.ascii	"freq\000"
 4900      00
 4901              	.LASF74:
 4902 015d 43794465 		.ascii	"CyDelayFreq\000"
 4902      6C617946 
 4902      72657100 
 4903              	.LASF25:
 4904 0169 696E7465 		.ascii	"interruptState\000"
 4904      72727570 
 4904      74537461 
 4904      746500
 4905              	.LASF67:
 4906 0178 6C664C69 		.ascii	"lfLimit\000"
 4906      6D697400 
 4907              	.LASF81:
 4908 0180 43795379 		.ascii	"CySysTickGetReload\000"
 4908      73546963 
 4908      6B476574 
 4908      52656C6F 
 4908      616400
 4909              	.LASF80:
 4910 0193 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 4910      73436C6B 
 4910      496D6F47 
 4910      65745763 
 4910      6F4C6F63 
 4911              	.LASF71:
 4912 01a9 77636F4C 		.ascii	"wcoLock\000"
 4912      6F636B00 
 4913              	.LASF4:
 4914 01b1 6C6F6E67 		.ascii	"long int\000"
 4914      20696E74 
 4914      00
 4915              	.LASF45:
 4916 01ba 4379496E 		.ascii	"CyIntDisable\000"
 4916      74446973 
 4916      61626C65 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 144


 4916      00
 4917              	.LASF93:
 4918 01c7 43795379 		.ascii	"CySysTickGetCallback\000"
 4918      73546963 
 4918      6B476574 
 4918      43616C6C 
 4918      6261636B 
 4919              	.LASF9:
 4920 01dc 75696E74 		.ascii	"uint8\000"
 4920      3800
 4921              	.LASF98:
 4922 01e2 63796465 		.ascii	"cydelayFreqKhz\000"
 4922      6C617946 
 4922      7265714B 
 4922      687A00
 4923              	.LASF29:
 4924 01f1 656E6162 		.ascii	"enable\000"
 4924      6C6500
 4925              	.LASF13:
 4926 01f8 646F7562 		.ascii	"double\000"
 4926      6C6500
 4927              	.LASF58:
 4928 01ff 73686966 		.ascii	"shift\000"
 4928      7400
 4929              	.LASF11:
 4930 0205 75696E74 		.ascii	"uint32\000"
 4930      333200
 4931              	.LASF41:
 4932 020c 6D61736B 		.ascii	"mask\000"
 4932      00
 4933              	.LASF34:
 4934 0211 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4934      73436C6B 
 4934      47657453 
 4934      7973636C 
 4934      6B536F75 
 4935              	.LASF64:
 4936 0229 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 4936      73436C6B 
 4936      496D6F45 
 4936      6E61626C 
 4936      6557636F 
 4937              	.LASF60:
 4938 0242 4379496E 		.ascii	"CyIntGetPriority\000"
 4938      74476574 
 4938      5072696F 
 4938      72697479 
 4938      00
 4939              	.LASF100:
 4940 0253 63796465 		.ascii	"cydelay32kMs\000"
 4940      6C617933 
 4940      326B4D73 
 4940      00
 4941              	.LASF88:
 4942 0260 43795379 		.ascii	"CySysTickInit\000"
 4942      73546963 
 4942      6B496E69 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 145


 4942      7400
 4943              	.LASF59:
 4944 026e 76616C75 		.ascii	"value\000"
 4944      6500
 4945              	.LASF84:
 4946 0274 636C6F63 		.ascii	"clockSource\000"
 4946      6B536F75 
 4946      72636500 
 4947              	.LASF94:
 4948 0280 43794765 		.ascii	"CyGetUniqueId\000"
 4948      74556E69 
 4948      71756549 
 4948      6400
 4949              	.LASF86:
 4950 028e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4950      73546963 
 4950      6B476574 
 4950      436F756E 
 4950      74466C61 
 4951              	.LASF8:
 4952 02a4 756E7369 		.ascii	"unsigned int\000"
 4952      676E6564 
 4952      20696E74 
 4952      00
 4953              	.LASF87:
 4954 02b1 43795379 		.ascii	"CySysTickClear\000"
 4954      73546963 
 4954      6B436C65 
 4954      617200
 4955              	.LASF5:
 4956 02c0 6C6F6E67 		.ascii	"long unsigned int\000"
 4956      20756E73 
 4956      69676E65 
 4956      6420696E 
 4956      7400
 4957              	.LASF23:
 4958 02d2 43795379 		.ascii	"CySysClkImoStop\000"
 4958      73436C6B 
 4958      496D6F53 
 4958      746F7000 
 4959              	.LASF104:
 4960 02e2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4960      74657243 
 4960      72697469 
 4960      63616C53 
 4960      65637469 
 4961              	.LASF46:
 4962 02f9 4379496E 		.ascii	"CyIntSetPending\000"
 4962      74536574 
 4962      50656E64 
 4962      696E6700 
 4963              	.LASF35:
 4964 0309 43795379 		.ascii	"CySysGetResetReason\000"
 4964      73476574 
 4964      52657365 
 4964      74526561 
 4964      736F6E00 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 146


 4965              	.LASF3:
 4966 031d 73686F72 		.ascii	"short unsigned int\000"
 4966      7420756E 
 4966      7369676E 
 4966      65642069 
 4966      6E7400
 4967              	.LASF66:
 4968 0330 72656754 		.ascii	"regTmp\000"
 4968      6D7000
 4969              	.LASF83:
 4970 0337 43795379 		.ascii	"CySysTickSetClockSource\000"
 4970      73546963 
 4970      6B536574 
 4970      436C6F63 
 4970      6B536F75 
 4971              	.LASF54:
 4972 034f 4379496E 		.ascii	"CyIntSetVector\000"
 4972      74536574 
 4972      56656374 
 4972      6F7200
 4973              	.LASF43:
 4974 035e 6E756D62 		.ascii	"number\000"
 4974      657200
 4975              	.LASF57:
 4976 0365 7072696F 		.ascii	"priority\000"
 4976      72697479 
 4976      00
 4977              	.LASF69:
 4978 036e 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4978      73436C6B 
 4978      57726974 
 4978      65496D6F 
 4978      46726571 
 4979              	.LASF49:
 4980 0383 4379496E 		.ascii	"CyIntSetSysVector\000"
 4980      74536574 
 4980      53797356 
 4980      6563746F 
 4980      7200
 4981              	.LASF22:
 4982 0395 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 4982      73436C6B 
 4982      496D6F44 
 4982      69736162 
 4982      6C655763 
 4983              	.LASF16:
 4984 03af 72656733 		.ascii	"reg32\000"
 4984      3200
 4985              	.LASF89:
 4986 03b5 43795379 		.ascii	"CySysTickStart\000"
 4986      73546963 
 4986      6B537461 
 4986      727400
 4987              	.LASF37:
 4988 03c4 72657475 		.ascii	"returnStatus\000"
 4988      726E5374 
 4988      61747573 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 147


 4988      00
 4989              	.LASF19:
 4990 03d1 73697A65 		.ascii	"sizetype\000"
 4990      74797065 
 4990      00
 4991              	.LASF47:
 4992 03da 4379496E 		.ascii	"CyIntClearPending\000"
 4992      74436C65 
 4992      61725065 
 4992      6E64696E 
 4992      6700
 4993              	.LASF18:
 4994 03ec 6C6F6E67 		.ascii	"long double\000"
 4994      20646F75 
 4994      626C6500 
 4995              	.LASF50:
 4996 03f8 61646472 		.ascii	"address\000"
 4996      65737300 
 4997              	.LASF30:
 4998 0400 73797363 		.ascii	"sysclkSource\000"
 4998      6C6B536F 
 4998      75726365 
 4998      00
 4999              	.LASF91:
 5000 040d 66756E63 		.ascii	"function\000"
 5000      74696F6E 
 5000      00
 5001              	.LASF82:
 5002 0416 43795379 		.ascii	"CySysTickGetValue\000"
 5002      73546963 
 5002      6B476574 
 5002      56616C75 
 5002      6500
 5003              	.LASF97:
 5004 0428 63796465 		.ascii	"cydelayFreqHz\000"
 5004      6C617946 
 5004      72657148 
 5004      7A00
 5005              	.LASF56:
 5006 0436 4379496E 		.ascii	"CyIntSetPriority\000"
 5006      74536574 
 5006      5072696F 
 5006      72697479 
 5006      00
 5007              	.LASF12:
 5008 0447 666C6F61 		.ascii	"float\000"
 5008      7400
 5009              	.LASF105:
 5010 044d 43794578 		.ascii	"CyExitCriticalSection\000"
 5010      69744372 
 5010      69746963 
 5010      616C5365 
 5010      6374696F 
 5011              	.LASF20:
 5012 0463 63795379 		.ascii	"cySysTickCallback\000"
 5012      73546963 
 5012      6B43616C 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 148


 5012      6C626163 
 5012      6B00
 5013              	.LASF55:
 5014 0475 4379496E 		.ascii	"CyIntGetVector\000"
 5014      74476574 
 5014      56656374 
 5014      6F7200
 5015              	.LASF63:
 5016 0484 6D696C6C 		.ascii	"milliseconds\000"
 5016      69736563 
 5016      6F6E6473 
 5016      00
 5017              	.LASF106:
 5018 0491 43794465 		.ascii	"CyDelayCycles\000"
 5018      6C617943 
 5018      79636C65 
 5018      7300
 5019              	.LASF15:
 5020 049f 72656738 		.ascii	"reg8\000"
 5020      00
 5021              	.LASF48:
 5022 04a4 43794861 		.ascii	"CyHalt\000"
 5022      6C7400
 5023              	.LASF1:
 5024 04ab 756E7369 		.ascii	"unsigned char\000"
 5024      676E6564 
 5024      20636861 
 5024      7200
 5025              	.LASF2:
 5026 04b9 73686F72 		.ascii	"short int\000"
 5026      7420696E 
 5026      7400
 5027              	.LASF42:
 5028 04c3 4379496E 		.ascii	"CyIntEnable\000"
 5028      74456E61 
 5028      626C6500 
 5029              	.LASF53:
 5030 04cf 4379496E 		.ascii	"CyIntGetSysVector\000"
 5030      74476574 
 5030      53797356 
 5030      6563746F 
 5030      7200
 5031              	.LASF28:
 5032 04e1 636C6B53 		.ascii	"clkSelect\000"
 5032      656C6563 
 5032      7400
 5033              	.LASF72:
 5034 04eb 43794465 		.ascii	"CyDelayUs\000"
 5034      6C617955 
 5034      7300
 5035              	.LASF36:
 5036 04f5 72656173 		.ascii	"reason\000"
 5036      6F6E00
 5037              	.LASF109:
 5038 04fc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5038      43313120 
 5038      352E342E 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 149


 5038      31203230 
 5038      31363036 
 5039 052f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5039      20726576 
 5039      6973696F 
 5039      6E203233 
 5039      37373135 
 5040 0562 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5040      67202D66 
 5040      66756E63 
 5040      74696F6E 
 5040      2D736563 
 5041              	.LASF14:
 5042 058e 63686172 		.ascii	"char\000"
 5042      00
 5043              	.LASF102:
 5044 0593 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5044      6F467265 
 5044      714D687A 
 5044      3244706C 
 5044      6C4F6666 
 5045              	.LASF17:
 5046 05ab 63796973 		.ascii	"cyisraddress\000"
 5046      72616464 
 5046      72657373 
 5046      00
 5047              	.LASF77:
 5048 05b8 43795379 		.ascii	"CySysTickEnable\000"
 5048      73546963 
 5048      6B456E61 
 5048      626C6500 
 5049              	.LASF33:
 5050 05c8 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 5050      73436C6B 
 5050      57726974 
 5050      65486663 
 5050      6C6B4469 
 5051              	.LASF31:
 5052 05de 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5052      73436C6B 
 5052      57726974 
 5052      65537973 
 5052      636C6B44 
 5053              	.LASF90:
 5054 05f5 43795379 		.ascii	"CySysTickSetCallback\000"
 5054      73546963 
 5054      6B536574 
 5054      43616C6C 
 5054      6261636B 
 5055              	.LASF96:
 5056 060a 43795379 		.ascii	"CySysTickCallbacks\000"
 5056      73546963 
 5056      6B43616C 
 5056      6C626163 
 5056      6B7300
 5057              	.LASF70:
 5058 061d 696D6F54 		.ascii	"imoTrim1Value\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 150


 5058      72696D31 
 5058      56616C75 
 5058      6500
 5059              	.LASF95:
 5060 062b 756E6971 		.ascii	"uniqueId\000"
 5060      75654964 
 5060      00
 5061              	.LASF68:
 5062 0634 666C6173 		.ascii	"flashCtlReg\000"
 5062      6843746C 
 5062      52656700 
 5063              	.LASF62:
 5064 0640 43794465 		.ascii	"CyDelay\000"
 5064      6C617900 
 5065              	.LASF85:
 5066 0648 43795379 		.ascii	"CySysTickGetClockSource\000"
 5066      73546963 
 5066      6B476574 
 5066      436C6F63 
 5066      6B536F75 
 5067              	.LASF78:
 5068 0660 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5068      73546963 
 5068      6B446973 
 5068      61626C65 
 5068      496E7465 
 5069              	.LASF51:
 5070 067a 6F6C6449 		.ascii	"oldIsr\000"
 5070      737200
 5071              	.LASF99:
 5072 0681 63796465 		.ascii	"cydelayFreqMhz\000"
 5072      6C617946 
 5072      7265714D 
 5072      687A00
 5073              	.LASF75:
 5074 0690 43795379 		.ascii	"CySysTickStop\000"
 5074      73546963 
 5074      6B53746F 
 5074      7000
 5075              	.LASF32:
 5076 069e 64697669 		.ascii	"divider\000"
 5076      64657200 
 5077              	.LASF21:
 5078 06a6 43795379 		.ascii	"CySysClkImoStart\000"
 5078      73436C6B 
 5078      496D6F53 
 5078      74617274 
 5078      00
 5079              	.LASF108:
 5080 06b7 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5080      73466C61 
 5080      73685365 
 5080      74576169 
 5080      74437963 
 5081              	.LASF110:
 5082 06cf 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5082      72617465 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccdgSNAe.s 			page 151


 5082      645F536F 
 5082      75726365 
 5082      5C50536F 
 5083              	.LASF73:
 5084 06ee 6D696372 		.ascii	"microseconds\000"
 5084      6F736563 
 5084      6F6E6473 
 5084      00
 5085              	.LASF26:
 5086 06fb 746D7052 		.ascii	"tmpReg\000"
 5086      656700
 5087              	.LASF79:
 5088 0702 43795379 		.ascii	"CySysTickSetReload\000"
 5088      73546963 
 5088      6B536574 
 5088      52656C6F 
 5088      616400
 5089              	.LASF112:
 5090 0715 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5090      73546963 
 5090      6B536572 
 5090      76696365 
 5090      43616C6C 
 5091              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
