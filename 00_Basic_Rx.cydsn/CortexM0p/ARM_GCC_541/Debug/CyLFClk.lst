ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLFClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkIloStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkIloStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkIloStart, %function
  25              	CySysClkIloStart:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 2


  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
  28              		.loc 1 84 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 3


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  33              		.loc 1 85 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
  40              		.loc 1 86 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 2C000340 		.word	1073938476
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CySysClkIloStart, .-CySysClkIloStart
  50              		.section	.text.CySysClkIloStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkIloStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkIloStop, %function
  56              	CySysClkIloStop:
  57              	.LFB2:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
  58              		.loc 1 109 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 4


 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
  63              		.loc 1 141 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
  69              		.loc 1 143 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 2C000340 		.word	1073938476
  76              		.cfi_endproc
  77              	.LFE2:
  78              		.size	CySysClkIloStop, .-CySysClkIloStop
  79              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkIloStartMeasurement
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkIloStartMeasurement, %function
  85              	CySysClkIloStartMeasurement:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 5


  86              	.LFB3:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
  87              		.loc 1 169 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
  92              		.loc 1 182 0
  93 0000 074A     		ldr	r2, .L8
  94 0002 1168     		ldr	r1, [r2]
  95 0004 074B     		ldr	r3, .L8+4
  96 0006 0B40     		ands	r3, r1
  97 0008 8021     		movs	r1, #128
  98 000a 4900     		lsls	r1, r1, #1
  99 000c 0B43     		orrs	r3, r1
 100 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 6


 101              		.loc 1 185 0
 102 0010 054A     		ldr	r2, .L8+8
 103 0012 1168     		ldr	r1, [r2]
 104 0014 054B     		ldr	r3, .L8+12
 105 0016 0B40     		ands	r3, r1
 106 0018 0549     		ldr	r1, .L8+16
 107 001a 0B43     		orrs	r3, r1
 108 001c 1360     		str	r3, [r2]
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 109              		.loc 1 187 0
 110              		@ sp needed
 111 001e 7047     		bx	lr
 112              	.L9:
 113              		.align	2
 114              	.L8:
 115 0020 34000340 		.word	1073938484
 116 0024 FFF0FFFF 		.word	-3841
 117 0028 18000340 		.word	1073938456
 118 002c F0F0FFFF 		.word	-3856
 119 0030 08090000 		.word	2312
 120              		.cfi_endproc
 121              	.LFE3:
 122              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 123              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 124              		.align	2
 125              		.global	CySysClkIloStopMeasurement
 126              		.code	16
 127              		.thumb_func
 128              		.type	CySysClkIloStopMeasurement, %function
 129              	CySysClkIloStopMeasurement:
 130              	.LFB4:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 131              		.loc 1 202 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 136              		.loc 1 204 0
 137 0000 054A     		ldr	r2, .L11
 138 0002 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 7


 139 0004 054B     		ldr	r3, .L11+4
 140 0006 0B40     		ands	r3, r1
 141 0008 1360     		str	r3, [r2]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 142              		.loc 1 206 0
 143 000a 054A     		ldr	r2, .L11+8
 144 000c 1168     		ldr	r1, [r2]
 145 000e 054B     		ldr	r3, .L11+12
 146 0010 0B40     		ands	r3, r1
 147 0012 1360     		str	r3, [r2]
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 148              		.loc 1 208 0
 149              		@ sp needed
 150 0014 7047     		bx	lr
 151              	.L12:
 152 0016 C046     		.align	2
 153              	.L11:
 154 0018 34000340 		.word	1073938484
 155 001c FFF0FFFF 		.word	-3841
 156 0020 18000340 		.word	1073938456
 157 0024 0F0F0000 		.word	3855
 158              		.cfi_endproc
 159              	.LFE4:
 160              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 161              		.global	__aeabi_uidiv
 162              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 163              		.align	2
 164              		.global	CySysClkIloCompensate
 165              		.code	16
 166              		.thumb_func
 167              		.type	CySysClkIloCompensate, %function
 168              	CySysClkIloCompensate:
 169              	.LFB5:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 8


 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 170              		.loc 1 268 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL0:
 175 0000 70B5     		push	{r4, r5, r6, lr}
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 4, -16
 178              		.cfi_offset 5, -12
 179              		.cfi_offset 6, -8
 180              		.cfi_offset 14, -4
 181 0002 0C00     		movs	r4, r1
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 9


 182              		.loc 1 275 0
 183 0004 334B     		ldr	r3, .L25
 184 0006 1A68     		ldr	r2, [r3]
 185 0008 334B     		ldr	r3, .L25+4
 186 000a 1340     		ands	r3, r2
 187              	.LVL1:
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 188              		.loc 1 278 0
 189 000c 8022     		movs	r2, #128
 190 000e 5200     		lsls	r2, r2, #1
 191 0010 9342     		cmp	r3, r2
 192 0012 50D1     		bne	.L18
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 193              		.loc 1 279 0 discriminator 1
 194 0014 314B     		ldr	r3, .L25+8
 195              	.LVL2:
 196 0016 1A68     		ldr	r2, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 197              		.loc 1 278 0 discriminator 1
 198 0018 314B     		ldr	r3, .L25+12
 199 001a 9A42     		cmp	r2, r3
 200 001c 4DD1     		bne	.L19
 201              		.loc 1 279 0
 202 001e 314B     		ldr	r3, .L25+16
 203 0020 9842     		cmp	r0, r3
 204 0022 4CD8     		bhi	.L20
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 205              		.loc 1 280 0
 206 0024 6328     		cmp	r0, #99
 207 0026 4CD9     		bls	.L21
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 208              		.loc 1 281 0
 209 0028 0029     		cmp	r1, #0
 210 002a 4CD0     		beq	.L22
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 211              		.loc 1 284 0
 212 002c 2E4B     		ldr	r3, .L25+20
 213 002e 1B68     		ldr	r3, [r3]
 214 0030 002B     		cmp	r3, #0
 215 0032 36D0     		beq	.L15
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 216              		.loc 1 287 0
 217 0034 2D4B     		ldr	r3, .L25+24
 218 0036 1B68     		ldr	r3, [r3]
 219 0038 002B     		cmp	r3, #0
 220 003a 46DA     		bge	.L23
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 221              		.loc 1 289 0
 222 003c 2C4B     		ldr	r3, .L25+28
 223 003e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 10


 224 0040 002B     		cmp	r3, #0
 225 0042 44D0     		beq	.L24
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 226              		.loc 1 310 0
 227 0044 6425     		movs	r5, #100
 228 0046 6843     		muls	r0, r5
 229              	.LVL3:
 230 0048 2A4B     		ldr	r3, .L25+32
 231 004a C518     		adds	r5, r0, r3
 232 004c 2A49     		ldr	r1, .L25+36
 233              	.LVL4:
 234 004e 2800     		movs	r0, r5
 235 0050 FFF7FEFF 		bl	__aeabi_uidiv
 236              	.LVL5:
 237 0054 0600     		movs	r6, r0
 238              	.LVL6:
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 239              		.loc 1 312 0
 240 0056 294B     		ldr	r3, .L25+40
 241 0058 9842     		cmp	r0, r3
 242 005a 11D9     		bls	.L16
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 243              		.loc 1 314 0
 244 005c 244B     		ldr	r3, .L25+28
 245 005e 1868     		ldr	r0, [r3]
 246              	.LVL7:
 247 0060 274B     		ldr	r3, .L25+44
 248 0062 1968     		ldr	r1, [r3]
 249 0064 4843     		muls	r0, r1
 250 0066 890A     		lsrs	r1, r1, #10
 251 0068 FFF7FEFF 		bl	__aeabi_uidiv
 252              	.LVL8:
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 253              		.loc 1 315 0
 254 006c 2821     		movs	r1, #40
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 11


 255 006e FFF7FEFF 		bl	__aeabi_uidiv
 256              	.LVL9:
 257 0072 0600     		movs	r6, r0
 258              	.LVL10:
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 259              		.loc 1 316 0
 260 0074 2349     		ldr	r1, .L25+48
 261 0076 2800     		movs	r0, r5
 262 0078 FFF7FEFF 		bl	__aeabi_uidiv
 263              	.LVL11:
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 264              		.loc 1 314 0
 265 007c 7043     		muls	r0, r6
 266              	.LVL12:
 267 007e 0BE0     		b	.L17
 268              	.LVL13:
 269              	.L16:
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 270              		.loc 1 320 0
 271 0080 1B4B     		ldr	r3, .L25+28
 272 0082 1868     		ldr	r0, [r3]
 273              	.LVL14:
 274 0084 1E4B     		ldr	r3, .L25+44
 275 0086 1968     		ldr	r1, [r3]
 276 0088 4843     		muls	r0, r1
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 277              		.loc 1 321 0
 278 008a 890A     		lsrs	r1, r1, #10
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 279              		.loc 1 320 0
 280 008c FFF7FEFF 		bl	__aeabi_uidiv
 281              	.LVL15:
 282              		.loc 1 321 0
 283 0090 7043     		muls	r0, r6
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 284              		.loc 1 320 0
 285 0092 1D49     		ldr	r1, .L25+52
 286 0094 FFF7FEFF 		bl	__aeabi_uidiv
 287              	.LVL16:
 288              	.L17:
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 289              		.loc 1 326 0
 290 0098 2060     		str	r0, [r4]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 291              		.loc 1 327 0
 292 009a 0020     		movs	r0, #0
 293              	.LVL17:
 294 009c 124B     		ldr	r3, .L25+20
 295 009e 1860     		str	r0, [r3]
 296              	.LVL18:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 12


 297 00a0 16E0     		b	.L14
 298              	.LVL19:
 299              	.L15:
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 300              		.loc 1 343 0
 301 00a2 174B     		ldr	r3, .L25+44
 302 00a4 1B68     		ldr	r3, [r3]
 303 00a6 9B0A     		lsrs	r3, r3, #10
 304 00a8 104A     		ldr	r2, .L25+24
 305 00aa 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 306              		.loc 1 344 0
 307 00ac 0122     		movs	r2, #1
 308 00ae 0E4B     		ldr	r3, .L25+20
 309 00b0 1A60     		str	r2, [r3]
 310              	.LVL20:
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 311              		.loc 1 345 0
 312 00b2 0720     		movs	r0, #7
 313              	.LVL21:
 314 00b4 0CE0     		b	.L14
 315              	.LVL22:
 316              	.L18:
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 317              		.loc 1 350 0
 318 00b6 1120     		movs	r0, #17
 319              	.LVL23:
 320 00b8 0AE0     		b	.L14
 321              	.LVL24:
 322              	.L19:
 323 00ba 1120     		movs	r0, #17
 324              	.LVL25:
 325 00bc 08E0     		b	.L14
 326              	.LVL26:
 327              	.L20:
 328 00be 1120     		movs	r0, #17
 329              	.LVL27:
 330 00c0 06E0     		b	.L14
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 13


 331              	.LVL28:
 332              	.L21:
 333 00c2 1120     		movs	r0, #17
 334              	.LVL29:
 335 00c4 04E0     		b	.L14
 336              	.LVL30:
 337              	.L22:
 338 00c6 1120     		movs	r0, #17
 339              	.LVL31:
 340 00c8 02E0     		b	.L14
 341              	.LVL32:
 342              	.L23:
 337:Generated_Source\PSoC4/CyLFClk.c ****             }
 343              		.loc 1 337 0
 344 00ca 0720     		movs	r0, #7
 345              	.LVL33:
 346 00cc 00E0     		b	.L14
 347              	.LVL34:
 348              	.L24:
 332:Generated_Source\PSoC4/CyLFClk.c ****                 }
 349              		.loc 1 332 0
 350 00ce 1120     		movs	r0, #17
 351              	.LVL35:
 352              	.L14:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 353              		.loc 1 354 0
 354              		@ sp needed
 355              	.LVL36:
 356 00d0 70BD     		pop	{r4, r5, r6, pc}
 357              	.L26:
 358 00d2 C046     		.align	2
 359              	.L25:
 360 00d4 34000340 		.word	1073938484
 361 00d8 0F0F0000 		.word	3855
 362 00dc 18000340 		.word	1073938456
 363 00e0 08090000 		.word	2312
 364 00e4 80841E00 		.word	2000000
 365 00e8 00000000 		.word	.LANCHOR0
 366 00ec 1C000340 		.word	1073938460
 367 00f0 20000340 		.word	1073938464
 368 00f4 71020000 		.word	625
 369 00f8 C4090000 		.word	2500
 370 00fc 60D10000 		.word	53600
 371 0100 00000000 		.word	cydelayFreqHz
 372 0104 A0252600 		.word	2500000
 373 0108 409C0000 		.word	40000
 374              		.cfi_endproc
 375              	.LFE5:
 376              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 377              		.section	.text.CySysClkWcoStart,"ax",%progbits
 378              		.align	2
 379              		.global	CySysClkWcoStart
 380              		.code	16
 381              		.thumb_func
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 14


 382              		.type	CySysClkWcoStart, %function
 383              	CySysClkWcoStart:
 384              	.LFB6:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 15


 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 16


 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 17


 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 18


 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired frequency) * 1000 / iloDesired frequency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 19


 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c ****     *
 673:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 674:Generated_Source\PSoC4/CyLFClk.c ****     *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / 
 676:Generated_Source\PSoC4/CyLFClk.c ****     *  PSoC 4100M / PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c ****     *
 678:Generated_Source\PSoC4/CyLFClk.c ****     * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c ****     *
 682:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c ****     *
 684:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c **** 
 693:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 20


 694:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 697:Generated_Source\PSoC4/CyLFClk.c ****     *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c ****     *
 699:Generated_Source\PSoC4/CyLFClk.c ****     * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c ****     * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c ****     * changes.
 703:Generated_Source\PSoC4/CyLFClk.c ****     *
 704:Generated_Source\PSoC4/CyLFClk.c ****     * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c ****     * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c ****     * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c ****     * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c ****     *
 709:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c ****     *
 713:Generated_Source\PSoC4/CyLFClk.c ****     * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c ****     * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c ****     *
 716:Generated_Source\PSoC4/CyLFClk.c ****     * \param
 717:Generated_Source\PSoC4/CyLFClk.c ****     * source
 718:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c ****     * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c ****     *
 722:Generated_Source\PSoC4/CyLFClk.c ****     * \details
 723:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c ****     * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c ****     *
 726:Generated_Source\PSoC4/CyLFClk.c ****     * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c ****     * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c ****     *
 729:Generated_Source\PSoC4/CyLFClk.c ****     * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c ****     * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c ****     * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c ****     *
 733:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 21


 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 385              		.loc 1 772 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 10B5     		push	{r4, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 4, -8
 392              		.cfi_offset 14, -4
 393              	.LBB6:
 394              	.LBB7:
 395              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (-1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 22


  25:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  26:Generated_Source\PSoC4/CyLFClk.h **** {
  27:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  29:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  30:Generated_Source\PSoC4/CyLFClk.h **** 
  31:Generated_Source\PSoC4/CyLFClk.h **** 
  32:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  33:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  34:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  35:Generated_Source\PSoC4/CyLFClk.h **** /**
  36:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  37:Generated_Source\PSoC4/CyLFClk.h **** * @{
  38:Generated_Source\PSoC4/CyLFClk.h **** */
  39:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  40:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  43:Generated_Source\PSoC4/CyLFClk.h **** 
  44:Generated_Source\PSoC4/CyLFClk.h **** /**
  45:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  46:Generated_Source\PSoC4/CyLFClk.h **** * @{
  47:Generated_Source\PSoC4/CyLFClk.h **** */
  48:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  49:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  52:Generated_Source\PSoC4/CyLFClk.h **** 
  53:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  54:Generated_Source\PSoC4/CyLFClk.h ****     /**
  55:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_compensate
  56:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  57:Generated_Source\PSoC4/CyLFClk.h ****     */
  58:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  60:Generated_Source\PSoC4/CyLFClk.h ****     /** @} compensate */
  61:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  62:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  63:Generated_Source\PSoC4/CyLFClk.h **** 
  64:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  65:Generated_Source\PSoC4/CyLFClk.h ****     /**
  66:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_general
  67:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  68:Generated_Source\PSoC4/CyLFClk.h ****     */
  69:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  70:Generated_Source\PSoC4/CyLFClk.h ****     /** @} group_general */
  71:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  72:Generated_Source\PSoC4/CyLFClk.h **** 
  73:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  74:Generated_Source\PSoC4/CyLFClk.h ****     /**
  75:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wco
  76:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  77:Generated_Source\PSoC4/CyLFClk.h ****     */
  78:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  81:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 23


  82:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wco */
  83:Generated_Source\PSoC4/CyLFClk.h **** 
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h ****     /**
  97:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  99:Generated_Source\PSoC4/CyLFClk.h ****     */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h ****     /**
 131:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 133:Generated_Source\PSoC4/CyLFClk.h ****     */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 24


 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h ****     /**
 155:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 157:Generated_Source\PSoC4/CyLFClk.h ****     */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h ****     /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 25


 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h ****     /**********************************************************************************
 227:Generated_Source\PSoC4/CyLFClk.h ****     * CySysClkIloCompensate() - value to walk over oversamling in calculations with 
 228:Generated_Source\PSoC4/CyLFClk.h ****     * srsslite. The oversample can be obtained when ilo frequency in equal 80 KHz and
 229:Generated_Source\PSoC4/CyLFClk.h ****     * desired clocks are 80 000 clocks.
 230:Generated_Source\PSoC4/CyLFClk.h ****     **********************************************************************************/
 231:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 232:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 233:Generated_Source\PSoC4/CyLFClk.h **** 
 234:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 237:Generated_Source\PSoC4/CyLFClk.h **** 
 238:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 239:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 240:Generated_Source\PSoC4/CyLFClk.h **** 
 241:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)
 243:Generated_Source\PSoC4/CyLFClk.h **** 
 244:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 245:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))
 246:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 247:Generated_Source\PSoC4/CyLFClk.h **** 
 248:Generated_Source\PSoC4/CyLFClk.h **** 
 249:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 250:Generated_Source\PSoC4/CyLFClk.h **** 
 251:Generated_Source\PSoC4/CyLFClk.h ****     /* CySysClkSetLfclkSource() - implementation definitions */
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 26


 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 258:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 259:Generated_Source\PSoC4/CyLFClk.h **** 
 260:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 261:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 262:Generated_Source\PSoC4/CyLFClk.h **** 
 263:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)
 265:Generated_Source\PSoC4/CyLFClk.h **** 
 266:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 267:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))
 268:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 269:Generated_Source\PSoC4/CyLFClk.h **** 
 270:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 271:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External crystal as WCO’s clock source */
 274:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)
 275:Generated_Source\PSoC4/CyLFClk.h **** 
 276:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External clock input on wco_in pin as WCO’s clock source */
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 284:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 285:Generated_Source\PSoC4/CyLFClk.h **** 
 286:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 287:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 288:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 289:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 291:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 292:Generated_Source\PSoC4/CyLFClk.h **** 
 293:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 295:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 299:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 300:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 301:Generated_Source\PSoC4/CyLFClk.h **** 
 302:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 303:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 305:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 308:Generated_Source\PSoC4/CyLFClk.h **** 
 309:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 27


 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 313:Generated_Source\PSoC4/CyLFClk.h **** 
 314:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 315:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 316:Generated_Source\PSoC4/CyLFClk.h **** 
 317:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 320:Generated_Source\PSoC4/CyLFClk.h **** 
 321:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 322:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 323:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 324:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 325:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 326:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 327:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 329:Generated_Source\PSoC4/CyLFClk.h **** 
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 332:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 334:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 335:Generated_Source\PSoC4/CyLFClk.h **** 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 338:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 339:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 340:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 341:Generated_Source\PSoC4/CyLFClk.h **** 
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 344:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 346:Generated_Source\PSoC4/CyLFClk.h **** 
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 348:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 350:Generated_Source\PSoC4/CyLFClk.h **** 
 351:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 352:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 354:Generated_Source\PSoC4/CyLFClk.h **** 
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 356:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 358:Generated_Source\PSoC4/CyLFClk.h **** 
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 360:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 364:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 365:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 366:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 28


 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h **** 
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 372:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
 374:Generated_Source\PSoC4/CyLFClk.h **** 
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 379:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 380:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 381:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 382:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 383:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 384:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 385:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 386:Generated_Source\PSoC4/CyLFClk.h **** 
 387:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 388:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 389:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 392:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 393:Generated_Source\PSoC4/CyLFClk.h **** 
 394:Generated_Source\PSoC4/CyLFClk.h ****     #else
 395:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 396:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 397:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 398:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 399:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 400:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 401:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 402:Generated_Source\PSoC4/CyLFClk.h **** 
 403:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 404:Generated_Source\PSoC4/CyLFClk.h **** 
 405:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 406:Generated_Source\PSoC4/CyLFClk.h **** 
 407:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 408:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 409:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 410:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 411:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 414:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 415:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 416:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 419:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 420:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 421:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 422:Generated_Source\PSoC4/CyLFClk.h ****     #else
 423:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 29


 424:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 425:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 426:Generated_Source\PSoC4/CyLFClk.h **** 
 427:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 428:Generated_Source\PSoC4/CyLFClk.h **** 
 429:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
 431:Generated_Source\PSoC4/CyLFClk.h **** 
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 433:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 435:Generated_Source\PSoC4/CyLFClk.h **** 
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 437:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 439:Generated_Source\PSoC4/CyLFClk.h **** 
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 441:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 442:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 447:Generated_Source\PSoC4/CyLFClk.h **** 
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 451:Generated_Source\PSoC4/CyLFClk.h **** 
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 453:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 457:Generated_Source\PSoC4/CyLFClk.h **** 
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 459:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 463:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 469:Generated_Source\PSoC4/CyLFClk.h **** 
 470:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 471:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 472:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 473:Generated_Source\PSoC4/CyLFClk.h **** 
 474:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 475:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 476:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 479:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 480:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 30


 481:Generated_Source\PSoC4/CyLFClk.h **** 
 482:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 483:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 484:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 486:Generated_Source\PSoC4/CyLFClk.h **** 
 487:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
 488:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 489:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 490:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 491:Generated_Source\PSoC4/CyLFClk.h **** 
 492:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 493:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 494:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 495:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 498:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 499:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 500:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 501:Generated_Source\PSoC4/CyLFClk.h **** 
 502:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 503:Generated_Source\PSoC4/CyLFClk.h **** 
 504:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 505:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< WCO High power mode */
 506:Generated_Source\PSoC4/CyLFClk.h **** 
 507:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_BLESS)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< WCO Low power mode */
 509:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_BLESS) */
 510:Generated_Source\PSoC4/CyLFClk.h **** 
 511:Generated_Source\PSoC4/CyLFClk.h **** 
 512:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 513:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 514:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 515:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                  ((uint32)0x0Au)
 516:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE               ((uint32)0x00000100u)
 517:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                     (( int32)0x0f)
 518:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                     (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >> 1u)
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (32000u)
 522:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x3F)
 523:Generated_Source\PSoC4/CyLFClk.h **** #else
 524:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 529:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_SELECT_CLK1              ((uint32) ((uint32) CYDEV_DFT_SELECT_CLK1 << 8u))
 530:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1       ((uint32) (CY_SYS_TST_DDFT_SELECT_CLK1 | CYDEV_DFT
 531:Generated_Source\PSoC4/CyLFClk.h **** 
 532:Generated_Source\PSoC4/CyLFClk.h **** 
 533:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 535:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 536:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Control Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 31


 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 1 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 2 Register*/
 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h **** /* DFT Muxes Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Configuration Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 554:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 555:Generated_Source\PSoC4/CyLFClk.h **** 
 556:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Trim Register*/
 557:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 558:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 560:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 561:Generated_Source\PSoC4/CyLFClk.h **** 
 562:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 563:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_IP_BLESS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 572:Generated_Source\PSoC4/CyLFClk.h **** 
 573:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 574:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 576:Generated_Source\PSoC4/CyLFClk.h ****     #else
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 585:Generated_Source\PSoC4/CyLFClk.h **** 
 586:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 587:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 588:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 589:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_IP_BLESS) */
 590:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 591:Generated_Source\PSoC4/CyLFClk.h **** 
 592:Generated_Source\PSoC4/CyLFClk.h **** 
 593:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 594:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 32


 595:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 596:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 608:Generated_Source\PSoC4/CyLFClk.h **** 
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 611:Generated_Source\PSoC4/CyLFClk.h **** #else
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 623:Generated_Source\PSoC4/CyLFClk.h **** 
 624:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 625:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 626:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 627:Generated_Source\PSoC4/CyLFClk.h **** 
 628:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 643:Generated_Source\PSoC4/CyLFClk.h **** 
 644:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 645:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 646:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 649:Generated_Source\PSoC4/CyLFClk.h **** 
 650:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 33


 652:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 653:Generated_Source\PSoC4/CyLFClk.h ****     *
 654:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 655:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 656:Generated_Source\PSoC4/CyLFClk.h ****     *
 657:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 658:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
 659:Generated_Source\PSoC4/CyLFClk.h ****     {
 660:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 661:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 396              		.loc 2 661 0
 397 0002 0D4B     		ldr	r3, .L28
 398 0004 1A68     		ldr	r2, [r3]
 399 0006 0121     		movs	r1, #1
 400 0008 8A43     		bics	r2, r1
 401 000a 1A60     		str	r2, [r3]
 662:Generated_Source\PSoC4/CyLFClk.h **** 
 663:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 664:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
 402              		.loc 2 664 0
 403 000c 1A68     		ldr	r2, [r3]
 404 000e 0220     		movs	r0, #2
 405 0010 8243     		bics	r2, r0
 406 0012 1A60     		str	r2, [r3]
 665:Generated_Source\PSoC4/CyLFClk.h **** 
 666:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
 407              		.loc 2 667 0
 408 0014 094A     		ldr	r2, .L28+4
 409 0016 1068     		ldr	r0, [r2]
 410 0018 3024     		movs	r4, #48
 411 001a A043     		bics	r0, r4
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 412              		.loc 2 668 0
 413 001c 203C     		subs	r4, r4, #32
 414 001e 2043     		orrs	r0, r4
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 415              		.loc 2 667 0
 416 0020 1060     		str	r0, [r2]
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 417              		.loc 2 669 0
 418 0022 1068     		ldr	r0, [r2]
 419 0024 093C     		subs	r4, r4, #9
 420 0026 A043     		bics	r0, r4
 670:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 421              		.loc 2 670 0
 422 0028 0143     		orrs	r1, r0
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 423              		.loc 2 669 0
 424 002a 1160     		str	r1, [r2]
 425              	.LBE7:
 426              	.LBE6:
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 427              		.loc 1 774 0
 428 002c 1A68     		ldr	r2, [r3]
 429 002e 8021     		movs	r1, #128
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 34


 430 0030 0906     		lsls	r1, r1, #24
 431 0032 0A43     		orrs	r2, r1
 432 0034 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 433              		.loc 1 775 0
 434              		@ sp needed
 435 0036 10BD     		pop	{r4, pc}
 436              	.L29:
 437              		.align	2
 438              	.L28:
 439 0038 00000740 		.word	1074200576
 440 003c 000F0740 		.word	1074204416
 441              		.cfi_endproc
 442              	.LFE6:
 443              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 444              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 445              		.align	2
 446              		.global	CySysClkWcoEnabled
 447              		.code	16
 448              		.thumb_func
 449              		.type	CySysClkWcoEnabled, %function
 450              	CySysClkWcoEnabled:
 451              	.LFB8:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 35


 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 452              		.loc 1 825 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 457              		.loc 1 826 0
 458 0000 034B     		ldr	r3, .L33
 459 0002 1B68     		ldr	r3, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 460              		.loc 1 827 0
 461 0004 002B     		cmp	r3, #0
 462 0006 01DA     		bge	.L32
 463 0008 0120     		movs	r0, #1
 464 000a 00E0     		b	.L31
 465              	.L32:
 466 000c 0020     		movs	r0, #0
 467              	.L31:
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 468              		.loc 1 829 0
 469              		@ sp needed
 470 000e 7047     		bx	lr
 471              	.L34:
 472              		.align	2
 473              	.L33:
 474 0010 00000740 		.word	1074200576
 475              		.cfi_endproc
 476              	.LFE8:
 477              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 478              		.section	.text.CySysClkWcoStop,"ax",%progbits
 479              		.align	2
 480              		.global	CySysClkWcoStop
 481              		.code	16
 482              		.thumb_func
 483              		.type	CySysClkWcoStop, %function
 484              	CySysClkWcoStop:
 485              	.LFB7:
 790:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 486              		.loc 1 790 0
 487              		.cfi_startproc
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 36


 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490 0000 10B5     		push	{r4, lr}
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 4, -8
 493              		.cfi_offset 14, -4
 795:Generated_Source\PSoC4/CyLFClk.c ****         {
 494              		.loc 1 795 0
 495 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 496              	.LVL37:
 497 0006 0028     		cmp	r0, #0
 498 0008 04D0     		beq	.L35
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 499              		.loc 1 809 0
 500 000a 034A     		ldr	r2, .L37
 501 000c 1368     		ldr	r3, [r2]
 502 000e 5B00     		lsls	r3, r3, #1
 503 0010 5B08     		lsrs	r3, r3, #1
 504 0012 1360     		str	r3, [r2]
 505              	.L35:
 812:Generated_Source\PSoC4/CyLFClk.c **** 
 506              		.loc 1 812 0
 507              		@ sp needed
 508 0014 10BD     		pop	{r4, pc}
 509              	.L38:
 510 0016 C046     		.align	2
 511              	.L37:
 512 0018 00000740 		.word	1074200576
 513              		.cfi_endproc
 514              	.LFE7:
 515              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 516              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 517              		.align	2
 518              		.global	CySysClkWcoSetPowerMode
 519              		.code	16
 520              		.thumb_func
 521              		.type	CySysClkWcoSetPowerMode, %function
 522              	CySysClkWcoSetPowerMode:
 523              	.LFB9:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 37


 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 524              		.loc 1 852 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              	.LVL38:
 529 0000 10B5     		push	{r4, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 4, -8
 532              		.cfi_offset 14, -4
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 533              		.loc 1 855 0
 534 0002 104B     		ldr	r3, .L44
 535 0004 1B68     		ldr	r3, [r3]
 536 0006 0124     		movs	r4, #1
 537 0008 1C40     		ands	r4, r3
 538              	.LVL39:
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 539              		.loc 1 857 0
 540 000a 0028     		cmp	r0, #0
 541 000c 15D1     		bne	.L43
 542              	.LBB8:
 543              	.LBB9:
 661:Generated_Source\PSoC4/CyLFClk.h **** 
 544              		.loc 2 661 0
 545 000e 0D4B     		ldr	r3, .L44
 546 0010 1968     		ldr	r1, [r3]
 547 0012 0122     		movs	r2, #1
 548 0014 9143     		bics	r1, r2
 549 0016 1960     		str	r1, [r3]
 664:Generated_Source\PSoC4/CyLFClk.h **** 
 550              		.loc 2 664 0
 551 0018 1968     		ldr	r1, [r3]
 552 001a 0230     		adds	r0, r0, #2
 553              	.LVL40:
 554 001c 8143     		bics	r1, r0
 555 001e 1960     		str	r1, [r3]
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 556              		.loc 2 667 0
 557 0020 094B     		ldr	r3, .L44+4
 558 0022 1968     		ldr	r1, [r3]
 559 0024 2E30     		adds	r0, r0, #46
 560              	.LVL41:
 561 0026 8143     		bics	r1, r0
 668:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 562              		.loc 2 668 0
 563 0028 2038     		subs	r0, r0, #32
 564              	.LVL42:
 565 002a 0143     		orrs	r1, r0
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 38


 566              		.loc 2 667 0
 567 002c 1960     		str	r1, [r3]
 669:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 568              		.loc 2 669 0
 569 002e 1968     		ldr	r1, [r3]
 570 0030 0938     		subs	r0, r0, #9
 571              	.LVL43:
 572 0032 8143     		bics	r1, r0
 573              		.loc 2 670 0
 574 0034 0A43     		orrs	r2, r1
 669:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 575              		.loc 2 669 0
 576 0036 1A60     		str	r2, [r3]
 577 0038 02E0     		b	.L42
 578              	.LVL44:
 579              	.L43:
 580              	.LBE9:
 581              	.LBE8:
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_BLESS)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_BLESS) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 582              		.loc 1 870 0 discriminator 1
 583 003a 0020     		movs	r0, #0
 584              	.LVL45:
 585 003c FFF7FEFF 		bl	CyHalt
 586              	.LVL46:
 587              	.L42:
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 588              		.loc 1 875 0
 589 0040 2000     		movs	r0, r4
 590              		@ sp needed
 591              	.LVL47:
 592 0042 10BD     		pop	{r4, pc}
 593              	.L45:
 594              		.align	2
 595              	.L44:
 596 0044 00000740 		.word	1074200576
 597 0048 000F0740 		.word	1074204416
 598              		.cfi_endproc
 599              	.LFE9:
 600              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 601              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 602              		.align	2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 39


 603              		.global	CySysClkWcoClockOutSelect
 604              		.code	16
 605              		.thumb_func
 606              		.type	CySysClkWcoClockOutSelect, %function
 607              	CySysClkWcoClockOutSelect:
 608              	.LFB10:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 882:Generated_Source\PSoC4/CyLFClk.c ****     * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c ****     *
 884:Generated_Source\PSoC4/CyLFClk.c ****     * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c ****     * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c ****     * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c ****     *
 888:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c ****     * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c ****     * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c ****     *
 896:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c ****     *
 902:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c ****     * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c ****     * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c ****     * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c ****     * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c ****     * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c ****     * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c ****     *
 911:Generated_Source\PSoC4/CyLFClk.c ****     * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c ****     * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c ****     * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c ****     *
 917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 609              		.loc 1 919 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL48:
 614 0000 10B5     		push	{r4, lr}
 615              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 40


 616              		.cfi_offset 4, -8
 617              		.cfi_offset 14, -4
 618 0002 0400     		movs	r4, r0
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 619              		.loc 1 920 0
 620 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 621              	.LVL49:
 622 0008 0028     		cmp	r0, #0
 623 000a 0CD0     		beq	.L46
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 624              		.loc 1 922 0
 625 000c 012C     		cmp	r4, #1
 626 000e 07D8     		bhi	.L48
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 627              		.loc 1 924 0
 628 0010 054A     		ldr	r2, .L49
 629 0012 1368     		ldr	r3, [r2]
 630 0014 0421     		movs	r1, #4
 631 0016 8B43     		bics	r3, r1
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 632              		.loc 1 925 0
 633 0018 A400     		lsls	r4, r4, #2
 634              	.LVL50:
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 635              		.loc 1 924 0
 636 001a 1C43     		orrs	r4, r3
 637 001c 1460     		str	r4, [r2]
 638 001e 02E0     		b	.L46
 639              	.LVL51:
 640              	.L48:
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 641              		.loc 1 929 0 discriminator 1
 642 0020 0020     		movs	r0, #0
 643 0022 FFF7FEFF 		bl	CyHalt
 644              	.LVL52:
 645              	.L46:
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 646              		.loc 1 932 0
 647              		@ sp needed
 648 0026 10BD     		pop	{r4, pc}
 649              	.L50:
 650              		.align	2
 651              	.L49:
 652 0028 00000740 		.word	1074200576
 653              		.cfi_endproc
 654              	.LFE10:
 655              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 656              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 657              		.align	2
 658              		.global	CySysWdtGetEnabledStatus
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 41


 659              		.code	16
 660              		.thumb_func
 661              		.type	CySysWdtGetEnabledStatus, %function
 662              	CySysWdtGetEnabledStatus:
 663              	.LFB11:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 42


 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 43


1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 44


1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 45


1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 46


1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 47


1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 48


1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 49


1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 50


1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 51


1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 52


1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 53


1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 54


1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 55


1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 56


1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 57


1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 58


1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
 664              		.loc 1 1919 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 669              		.loc 1 1920 0
 670 0000 044B     		ldr	r3, .L52
 671 0002 1868     		ldr	r0, [r3]
 672 0004 044B     		ldr	r3, .L52+4
 673 0006 9C46     		mov	ip, r3
 674 0008 6044     		add	r0, r0, ip
 675 000a 431E     		subs	r3, r0, #1
 676 000c 9841     		sbcs	r0, r0, r3
 677 000e C0B2     		uxtb	r0, r0
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
 678              		.loc 1 1921 0
 679              		@ sp needed
 680 0010 7047     		bx	lr
 681              	.L53:
 682 0012 C046     		.align	2
 683              	.L52:
 684 0014 38000340 		.word	1073938488
 685 0018 9B771253 		.word	1393719195
 686              		.cfi_endproc
 687              	.LFE11:
 688              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 689              		.section	.text.CySysWdtEnable,"ax",%progbits
 690              		.align	2
 691              		.global	CySysWdtEnable
 692              		.code	16
 693              		.thumb_func
 694              		.type	CySysWdtEnable, %function
 695              	CySysWdtEnable:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 59


 696              	.LFB12:
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
 697              		.loc 1 1938 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 702              		.loc 1 1939 0
 703 0000 0022     		movs	r2, #0
 704 0002 014B     		ldr	r3, .L55
 705 0004 1A60     		str	r2, [r3]
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
 706              		.loc 1 1940 0
 707              		@ sp needed
 708 0006 7047     		bx	lr
 709              	.L56:
 710              		.align	2
 711              	.L55:
 712 0008 38000340 		.word	1073938488
 713              		.cfi_endproc
 714              	.LFE12:
 715              		.size	CySysWdtEnable, .-CySysWdtEnable
 716              		.section	.text.CySysWdtDisable,"ax",%progbits
 717              		.align	2
 718              		.global	CySysWdtDisable
 719              		.code	16
 720              		.thumb_func
 721              		.type	CySysWdtDisable, %function
 722              	CySysWdtDisable:
 723              	.LFB13:
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 60


1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
 724              		.loc 1 1954 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 729              		.loc 1 1955 0
 730 0000 014A     		ldr	r2, .L58
 731 0002 024B     		ldr	r3, .L58+4
 732 0004 1A60     		str	r2, [r3]
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
 733              		.loc 1 1956 0
 734              		@ sp needed
 735 0006 7047     		bx	lr
 736              	.L59:
 737              		.align	2
 738              	.L58:
 739 0008 6588EDAC 		.word	-1393719195
 740 000c 38000340 		.word	1073938488
 741              		.cfi_endproc
 742              	.LFE13:
 743              		.size	CySysWdtDisable, .-CySysWdtDisable
 744              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 745              		.align	2
 746              		.global	CySysWdtSetMatch
 747              		.code	16
 748              		.thumb_func
 749              		.type	CySysWdtSetMatch, %function
 750              	CySysWdtSetMatch:
 751              	.LFB14:
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
 752              		.loc 1 1970 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757              	.LVL53:
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
 758              		.loc 1 1971 0
 759 0000 0004     		lsls	r0, r0, #16
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 61


 760              	.LVL54:
 761 0002 000C     		lsrs	r0, r0, #16
 762              	.LVL55:
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
 763              		.loc 1 1972 0
 764 0004 034A     		ldr	r2, .L61
 765 0006 1368     		ldr	r3, [r2]
 766 0008 1B0C     		lsrs	r3, r3, #16
 767 000a 1B04     		lsls	r3, r3, #16
 768 000c 1843     		orrs	r0, r3
 769              	.LVL56:
 770 000e 1060     		str	r0, [r2]
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
 771              		.loc 1 1973 0
 772              		@ sp needed
 773 0010 7047     		bx	lr
 774              	.L62:
 775 0012 C046     		.align	2
 776              	.L61:
 777 0014 40000340 		.word	1073938496
 778              		.cfi_endproc
 779              	.LFE14:
 780              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 781              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 782              		.align	2
 783              		.global	CySysWdtGetMatch
 784              		.code	16
 785              		.thumb_func
 786              		.type	CySysWdtGetMatch, %function
 787              	CySysWdtGetMatch:
 788              	.LFB15:
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
 789              		.loc 1 1986 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 794              		.loc 1 1987 0
 795 0000 024B     		ldr	r3, .L64
 796 0002 1868     		ldr	r0, [r3]
 797 0004 0004     		lsls	r0, r0, #16
 798 0006 000C     		lsrs	r0, r0, #16
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
 799              		.loc 1 1988 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 62


 800              		@ sp needed
 801 0008 7047     		bx	lr
 802              	.L65:
 803 000a C046     		.align	2
 804              	.L64:
 805 000c 40000340 		.word	1073938496
 806              		.cfi_endproc
 807              	.LFE15:
 808              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 809              		.section	.text.CySysWdtGetCount,"ax",%progbits
 810              		.align	2
 811              		.global	CySysWdtGetCount
 812              		.code	16
 813              		.thumb_func
 814              		.type	CySysWdtGetCount, %function
 815              	CySysWdtGetCount:
 816              	.LFB16:
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
 817              		.loc 1 2001 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 822              		.loc 1 2002 0
 823 0000 014B     		ldr	r3, .L67
 824 0002 1868     		ldr	r0, [r3]
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
 825              		.loc 1 2003 0
 826              		@ sp needed
 827 0004 7047     		bx	lr
 828              	.L68:
 829 0006 C046     		.align	2
 830              	.L67:
 831 0008 3C000340 		.word	1073938492
 832              		.cfi_endproc
 833              	.LFE16:
 834              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 835              		.section	.text.CySysWdtSetIgnoreBits,"ax",%progbits
 836              		.align	2
 837              		.global	CySysWdtSetIgnoreBits
 838              		.code	16
 839              		.thumb_func
 840              		.type	CySysWdtSetIgnoreBits, %function
 841              	CySysWdtSetIgnoreBits:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 63


 842              	.LFB17:
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
 843              		.loc 1 2021 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 848              	.LVL57:
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 849              		.loc 1 2022 0
 850 0000 0004     		lsls	r0, r0, #16
 851              	.LVL58:
 852 0002 F023     		movs	r3, #240
 853 0004 1B03     		lsls	r3, r3, #12
 854 0006 0200     		movs	r2, r0
 855 0008 1A40     		ands	r2, r3
 856              	.LVL59:
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
 857              		.loc 1 2023 0
 858 000a 0349     		ldr	r1, .L70
 859 000c 0868     		ldr	r0, [r1]
 860 000e 034B     		ldr	r3, .L70+4
 861 0010 0340     		ands	r3, r0
 862 0012 1A43     		orrs	r2, r3
 863              	.LVL60:
 864 0014 0A60     		str	r2, [r1]
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
 865              		.loc 1 2024 0
 866              		@ sp needed
 867 0016 7047     		bx	lr
 868              	.L71:
 869              		.align	2
 870              	.L70:
 871 0018 40000340 		.word	1073938496
 872 001c FFFFF0FF 		.word	-983041
 873              		.cfi_endproc
 874              	.LFE17:
 875              		.size	CySysWdtSetIgnoreBits, .-CySysWdtSetIgnoreBits
 876              		.section	.text.CySysWdtGetIgnoreBits,"ax",%progbits
 877              		.align	2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 64


 878              		.global	CySysWdtGetIgnoreBits
 879              		.code	16
 880              		.thumb_func
 881              		.type	CySysWdtGetIgnoreBits, %function
 882              	CySysWdtGetIgnoreBits:
 883              	.LFB18:
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
 884              		.loc 1 2039 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 889              		.loc 1 2040 0
 890 0000 024B     		ldr	r3, .L73
 891 0002 1868     		ldr	r0, [r3]
 892 0004 000C     		lsrs	r0, r0, #16
 893 0006 0F23     		movs	r3, #15
 894 0008 1840     		ands	r0, r3
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
 895              		.loc 1 2041 0
 896              		@ sp needed
 897 000a 7047     		bx	lr
 898              	.L74:
 899              		.align	2
 900              	.L73:
 901 000c 40000340 		.word	1073938496
 902              		.cfi_endproc
 903              	.LFE18:
 904              		.size	CySysWdtGetIgnoreBits, .-CySysWdtGetIgnoreBits
 905              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 906              		.align	2
 907              		.global	CySysWdtClearInterrupt
 908              		.code	16
 909              		.thumb_func
 910              		.type	CySysWdtClearInterrupt, %function
 911              	CySysWdtClearInterrupt:
 912              	.LFB19:
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 65


2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
 913              		.loc 1 2056 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 918              		.loc 1 2057 0
 919 0000 024A     		ldr	r2, .L76
 920 0002 1168     		ldr	r1, [r2]
 921 0004 0123     		movs	r3, #1
 922 0006 0B43     		orrs	r3, r1
 923 0008 1360     		str	r3, [r2]
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
 924              		.loc 1 2058 0
 925              		@ sp needed
 926 000a 7047     		bx	lr
 927              	.L77:
 928              		.align	2
 929              	.L76:
 930 000c 44000340 		.word	1073938500
 931              		.cfi_endproc
 932              	.LFE19:
 933              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 934              		.section	.text.CySysWdtMaskInterrupt,"ax",%progbits
 935              		.align	2
 936              		.global	CySysWdtMaskInterrupt
 937              		.code	16
 938              		.thumb_func
 939              		.type	CySysWdtMaskInterrupt, %function
 940              	CySysWdtMaskInterrupt:
 941              	.LFB20:
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
 942              		.loc 1 2071 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 66


 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 947              		.loc 1 2072 0
 948 0000 024A     		ldr	r2, .L79
 949 0002 1368     		ldr	r3, [r2]
 950 0004 0121     		movs	r1, #1
 951 0006 8B43     		bics	r3, r1
 952 0008 1360     		str	r3, [r2]
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
 953              		.loc 1 2073 0
 954              		@ sp needed
 955 000a 7047     		bx	lr
 956              	.L80:
 957              		.align	2
 958              	.L79:
 959 000c 4C000340 		.word	1073938508
 960              		.cfi_endproc
 961              	.LFE20:
 962              		.size	CySysWdtMaskInterrupt, .-CySysWdtMaskInterrupt
 963              		.section	.text.CySysWdtUnmaskInterrupt,"ax",%progbits
 964              		.align	2
 965              		.global	CySysWdtUnmaskInterrupt
 966              		.code	16
 967              		.thumb_func
 968              		.type	CySysWdtUnmaskInterrupt, %function
 969              	CySysWdtUnmaskInterrupt:
 970              	.LFB21:
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
 971              		.loc 1 2086 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              		@ link register save eliminated.
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 976              		.loc 1 2087 0
 977 0000 024A     		ldr	r2, .L82
 978 0002 1168     		ldr	r1, [r2]
 979 0004 0123     		movs	r3, #1
 980 0006 0B43     		orrs	r3, r1
 981 0008 1360     		str	r3, [r2]
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
 982              		.loc 1 2088 0
 983              		@ sp needed
 984 000a 7047     		bx	lr
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 67


 985              	.L83:
 986              		.align	2
 987              	.L82:
 988 000c 4C000340 		.word	1073938508
 989              		.cfi_endproc
 990              	.LFE21:
 991              		.size	CySysWdtUnmaskInterrupt, .-CySysWdtUnmaskInterrupt
 992              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 993              		.align	2
 994              		.global	CySysWdtSetInterruptCallback
 995              		.code	16
 996              		.thumb_func
 997              		.type	CySysWdtSetInterruptCallback, %function
 998              	CySysWdtSetInterruptCallback:
 999              	.LFB22:
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
 1000              		.loc 1 2104 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              		@ link register save eliminated.
 1005              	.LVL61:
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
 1006              		.loc 1 2107 0
 1007 0000 024B     		ldr	r3, .L85
 1008 0002 5A68     		ldr	r2, [r3, #4]
 1009              	.LVL62:
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 1010              		.loc 1 2108 0
 1011 0004 5860     		str	r0, [r3, #4]
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
 1012              		.loc 1 2111 0
 1013 0006 1000     		movs	r0, r2
 1014              	.LVL63:
 1015              		@ sp needed
 1016 0008 7047     		bx	lr
 1017              	.L86:
 1018 000a C046     		.align	2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 68


 1019              	.L85:
 1020 000c 00000000 		.word	.LANCHOR0
 1021              		.cfi_endproc
 1022              	.LFE22:
 1023              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 1024              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 1025              		.align	2
 1026              		.global	CySysWdtGetInterruptCallback
 1027              		.code	16
 1028              		.thumb_func
 1029              		.type	CySysWdtGetInterruptCallback, %function
 1030              	CySysWdtGetInterruptCallback:
 1031              	.LFB23:
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
 1032              		.loc 1 2125 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 1037              		.loc 1 2126 0
 1038 0000 014B     		ldr	r3, .L88
 1039 0002 5868     		ldr	r0, [r3, #4]
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
 1040              		.loc 1 2127 0
 1041              		@ sp needed
 1042 0004 7047     		bx	lr
 1043              	.L89:
 1044 0006 C046     		.align	2
 1045              	.L88:
 1046 0008 00000000 		.word	.LANCHOR0
 1047              		.cfi_endproc
 1048              	.LFE23:
 1049              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1050              		.section	.text.CySysWdtIsr,"ax",%progbits
 1051              		.align	2
 1052              		.global	CySysWdtIsr
 1053              		.code	16
 1054              		.thumb_func
 1055              		.type	CySysWdtIsr, %function
 1056              	CySysWdtIsr:
 1057              	.LFB24:
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 69


2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
 1058              		.loc 1 2149 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062 0000 10B5     		push	{r4, lr}
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 4, -8
 1065              		.cfi_offset 14, -4
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 1066              		.loc 1 2150 0
 1067 0002 044B     		ldr	r3, .L92
 1068 0004 5B68     		ldr	r3, [r3, #4]
 1069 0006 002B     		cmp	r3, #0
 1070 0008 00D0     		beq	.L91
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
 1071              		.loc 1 2152 0
 1072 000a 9847     		blx	r3
 1073              	.LVL64:
 1074              	.L91:
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
 1075              		.loc 1 2155 0
 1076 000c FFF7FEFF 		bl	CySysWdtClearInterrupt
 1077              	.LVL65:
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
 1078              		.loc 1 2156 0
 1079              		@ sp needed
 1080 0010 10BD     		pop	{r4, pc}
 1081              	.L93:
 1082 0012 C046     		.align	2
 1083              	.L92:
 1084 0014 00000000 		.word	.LANCHOR0
 1085              		.cfi_endproc
 1086              	.LFE24:
 1087              		.size	CySysWdtIsr, .-CySysWdtIsr
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 70


 1088              		.bss
 1089              		.align	2
 1090              		.set	.LANCHOR0,. + 0
 1091              		.type	compensateRunningStatus.4804, %object
 1092              		.size	compensateRunningStatus.4804, 4
 1093              	compensateRunningStatus.4804:
 1094 0000 00000000 		.space	4
 1095              		.type	cySysWdtCallback, %object
 1096              		.size	cySysWdtCallback, 4
 1097              	cySysWdtCallback:
 1098 0004 00000000 		.space	4
 1099              		.text
 1100              	.Letext0:
 1101              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 1102              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 1103              		.section	.debug_info,"",%progbits
 1104              	.Ldebug_info0:
 1105 0000 40040000 		.4byte	0x440
 1106 0004 0400     		.2byte	0x4
 1107 0006 00000000 		.4byte	.Ldebug_abbrev0
 1108 000a 04       		.byte	0x4
 1109 000b 01       		.uleb128 0x1
 1110 000c 9F030000 		.4byte	.LASF58
 1111 0010 0C       		.byte	0xc
 1112 0011 6E030000 		.4byte	.LASF59
 1113 0015 DD020000 		.4byte	.LASF60
 1114 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1115 001d 00000000 		.4byte	0
 1116 0021 00000000 		.4byte	.Ldebug_line0
 1117 0025 02       		.uleb128 0x2
 1118 0026 01       		.byte	0x1
 1119 0027 06       		.byte	0x6
 1120 0028 81000000 		.4byte	.LASF0
 1121 002c 02       		.uleb128 0x2
 1122 002d 01       		.byte	0x1
 1123 002e 08       		.byte	0x8
 1124 002f 2E030000 		.4byte	.LASF1
 1125 0033 02       		.uleb128 0x2
 1126 0034 02       		.byte	0x2
 1127 0035 05       		.byte	0x5
 1128 0036 54030000 		.4byte	.LASF2
 1129 003a 02       		.uleb128 0x2
 1130 003b 02       		.byte	0x2
 1131 003c 07       		.byte	0x7
 1132 003d E0010000 		.4byte	.LASF3
 1133 0041 02       		.uleb128 0x2
 1134 0042 04       		.byte	0x4
 1135 0043 05       		.byte	0x5
 1136 0044 C6000000 		.4byte	.LASF4
 1137 0048 02       		.uleb128 0x2
 1138 0049 04       		.byte	0x4
 1139 004a 07       		.byte	0x7
 1140 004b B8010000 		.4byte	.LASF5
 1141 004f 02       		.uleb128 0x2
 1142 0050 08       		.byte	0x8
 1143 0051 05       		.byte	0x5
 1144 0052 73000000 		.4byte	.LASF6
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 71


 1145 0056 02       		.uleb128 0x2
 1146 0057 08       		.byte	0x8
 1147 0058 07       		.byte	0x7
 1148 0059 2D000000 		.4byte	.LASF7
 1149 005d 03       		.uleb128 0x3
 1150 005e 04       		.byte	0x4
 1151 005f 05       		.byte	0x5
 1152 0060 696E7400 		.ascii	"int\000"
 1153 0064 02       		.uleb128 0x2
 1154 0065 04       		.byte	0x4
 1155 0066 07       		.byte	0x7
 1156 0067 88010000 		.4byte	.LASF8
 1157 006b 04       		.uleb128 0x4
 1158 006c D8000000 		.4byte	.LASF9
 1159 0070 03       		.byte	0x3
 1160 0071 E401     		.2byte	0x1e4
 1161 0073 2C000000 		.4byte	0x2c
 1162 0077 04       		.uleb128 0x4
 1163 0078 1C010000 		.4byte	.LASF10
 1164 007c 03       		.byte	0x3
 1165 007d E601     		.2byte	0x1e6
 1166 007f 48000000 		.4byte	0x48
 1167 0083 02       		.uleb128 0x2
 1168 0084 04       		.byte	0x4
 1169 0085 04       		.byte	0x4
 1170 0086 B7020000 		.4byte	.LASF11
 1171 008a 02       		.uleb128 0x2
 1172 008b 08       		.byte	0x8
 1173 008c 04       		.byte	0x4
 1174 008d DE000000 		.4byte	.LASF12
 1175 0091 02       		.uleb128 0x2
 1176 0092 01       		.byte	0x1
 1177 0093 08       		.byte	0x8
 1178 0094 49040000 		.4byte	.LASF13
 1179 0098 04       		.uleb128 0x4
 1180 0099 8A040000 		.4byte	.LASF14
 1181 009d 03       		.byte	0x3
 1182 009e 8602     		.2byte	0x286
 1183 00a0 48000000 		.4byte	0x48
 1184 00a4 04       		.uleb128 0x4
 1185 00a5 39020000 		.4byte	.LASF15
 1186 00a9 03       		.byte	0x3
 1187 00aa 9002     		.2byte	0x290
 1188 00ac B0000000 		.4byte	0xb0
 1189 00b0 05       		.uleb128 0x5
 1190 00b1 77000000 		.4byte	0x77
 1191 00b5 06       		.uleb128 0x6
 1192 00b6 04       		.byte	0x4
 1193 00b7 BB000000 		.4byte	0xbb
 1194 00bb 07       		.uleb128 0x7
 1195 00bc 08       		.uleb128 0x8
 1196 00bd AC000000 		.4byte	.LASF16
 1197 00c1 02       		.byte	0x2
 1198 00c2 58       		.byte	0x58
 1199 00c3 B5000000 		.4byte	0xb5
 1200 00c7 02       		.uleb128 0x2
 1201 00c8 08       		.byte	0x8
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 72


 1202 00c9 04       		.byte	0x4
 1203 00ca 6F020000 		.4byte	.LASF17
 1204 00ce 02       		.uleb128 0x2
 1205 00cf 04       		.byte	0x4
 1206 00d0 07       		.byte	0x7
 1207 00d1 66020000 		.4byte	.LASF18
 1208 00d5 09       		.uleb128 0x9
 1209 00d6 57000000 		.4byte	.LASF61
 1210 00da 02       		.byte	0x2
 1211 00db 9202     		.2byte	0x292
 1212 00dd 03       		.byte	0x3
 1213 00de 0A       		.uleb128 0xa
 1214 00df 18020000 		.4byte	.LASF19
 1215 00e3 01       		.byte	0x1
 1216 00e4 53       		.byte	0x53
 1217 00e5 00000000 		.4byte	.LFB1
 1218 00e9 14000000 		.4byte	.LFE1-.LFB1
 1219 00ed 01       		.uleb128 0x1
 1220 00ee 9C       		.byte	0x9c
 1221 00ef 0A       		.uleb128 0xa
 1222 00f0 F7000000 		.4byte	.LASF20
 1223 00f4 01       		.byte	0x1
 1224 00f5 6C       		.byte	0x6c
 1225 00f6 00000000 		.4byte	.LFB2
 1226 00fa 10000000 		.4byte	.LFE2-.LFB2
 1227 00fe 01       		.uleb128 0x1
 1228 00ff 9C       		.byte	0x9c
 1229 0100 0A       		.uleb128 0xa
 1230 0101 11000000 		.4byte	.LASF21
 1231 0105 01       		.byte	0x1
 1232 0106 A8       		.byte	0xa8
 1233 0107 00000000 		.4byte	.LFB3
 1234 010b 34000000 		.4byte	.LFE3-.LFB3
 1235 010f 01       		.uleb128 0x1
 1236 0110 9C       		.byte	0x9c
 1237 0111 0A       		.uleb128 0xa
 1238 0112 23010000 		.4byte	.LASF22
 1239 0116 01       		.byte	0x1
 1240 0117 C9       		.byte	0xc9
 1241 0118 00000000 		.4byte	.LFB4
 1242 011c 28000000 		.4byte	.LFE4-.LFB4
 1243 0120 01       		.uleb128 0x1
 1244 0121 9C       		.byte	0x9c
 1245 0122 0B       		.uleb128 0xb
 1246 0123 93040000 		.4byte	.LASF32
 1247 0127 01       		.byte	0x1
 1248 0128 0B01     		.2byte	0x10b
 1249 012a 98000000 		.4byte	0x98
 1250 012e 00000000 		.4byte	.LFB5
 1251 0132 0C010000 		.4byte	.LFE5-.LFB5
 1252 0136 01       		.uleb128 0x1
 1253 0137 9C       		.byte	0x9c
 1254 0138 AF010000 		.4byte	0x1af
 1255 013c 0C       		.uleb128 0xc
 1256 013d AB010000 		.4byte	.LASF23
 1257 0141 01       		.byte	0x1
 1258 0142 0B01     		.2byte	0x10b
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 73


 1259 0144 77000000 		.4byte	0x77
 1260 0148 00000000 		.4byte	.LLST0
 1261 014c 0C       		.uleb128 0xc
 1262 014d E5000000 		.4byte	.LASF24
 1263 0151 01       		.byte	0x1
 1264 0152 0B01     		.2byte	0x10b
 1265 0154 AF010000 		.4byte	0x1af
 1266 0158 E9000000 		.4byte	.LLST1
 1267 015c 0D       		.uleb128 0xd
 1268 015d 07010000 		.4byte	.LASF25
 1269 0161 01       		.byte	0x1
 1270 0162 0D01     		.2byte	0x10d
 1271 0164 77000000 		.4byte	0x77
 1272 0168 2B010000 		.4byte	.LLST2
 1273 016c 0D       		.uleb128 0xd
 1274 016d 64040000 		.4byte	.LASF26
 1275 0171 01       		.byte	0x1
 1276 0172 0E01     		.2byte	0x10e
 1277 0174 77000000 		.4byte	0x77
 1278 0178 55010000 		.4byte	.LLST3
 1279 017c 0E       		.uleb128 0xe
 1280 017d 3C030000 		.4byte	.LASF27
 1281 0181 01       		.byte	0x1
 1282 0182 0F01     		.2byte	0x10f
 1283 0184 77000000 		.4byte	0x77
 1284 0188 05       		.uleb128 0x5
 1285 0189 03       		.byte	0x3
 1286 018a 00000000 		.4byte	compensateRunningStatus.4804
 1287 018e 0D       		.uleb128 0xd
 1288 018f BA000000 		.4byte	.LASF28
 1289 0193 01       		.byte	0x1
 1290 0194 1001     		.2byte	0x110
 1291 0196 77000000 		.4byte	0x77
 1292 019a 89010000 		.4byte	.LLST4
 1293 019e 0D       		.uleb128 0xd
 1294 019f 3F020000 		.4byte	.LASF29
 1295 01a3 01       		.byte	0x1
 1296 01a4 1101     		.2byte	0x111
 1297 01a6 98000000 		.4byte	0x98
 1298 01aa A7010000 		.4byte	.LLST5
 1299 01ae 00       		.byte	0
 1300 01af 06       		.uleb128 0x6
 1301 01b0 04       		.byte	0x4
 1302 01b1 77000000 		.4byte	0x77
 1303 01b5 0F       		.uleb128 0xf
 1304 01b6 79040000 		.4byte	.LASF30
 1305 01ba 01       		.byte	0x1
 1306 01bb 0303     		.2byte	0x303
 1307 01bd 00000000 		.4byte	.LFB6
 1308 01c1 40000000 		.4byte	.LFE6-.LFB6
 1309 01c5 01       		.uleb128 0x1
 1310 01c6 9C       		.byte	0x9c
 1311 01c7 DC010000 		.4byte	0x1dc
 1312 01cb 10       		.uleb128 0x10
 1313 01cc D5000000 		.4byte	0xd5
 1314 01d0 02000000 		.4byte	.LBB6
 1315 01d4 2A000000 		.4byte	.LBE6-.LBB6
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 74


 1316 01d8 01       		.byte	0x1
 1317 01d9 0503     		.2byte	0x305
 1318 01db 00       		.byte	0
 1319 01dc 11       		.uleb128 0x11
 1320 01dd 44000000 		.4byte	.LASF38
 1321 01e1 01       		.byte	0x1
 1322 01e2 3803     		.2byte	0x338
 1323 01e4 77000000 		.4byte	0x77
 1324 01e8 00000000 		.4byte	.LFB8
 1325 01ec 14000000 		.4byte	.LFE8-.LFB8
 1326 01f0 01       		.uleb128 0x1
 1327 01f1 9C       		.byte	0x9c
 1328 01f2 0F       		.uleb128 0xf
 1329 01f3 8F030000 		.4byte	.LASF31
 1330 01f7 01       		.byte	0x1
 1331 01f8 1503     		.2byte	0x315
 1332 01fa 00000000 		.4byte	.LFB7
 1333 01fe 1C000000 		.4byte	.LFE7-.LFB7
 1334 0202 01       		.uleb128 0x1
 1335 0203 9C       		.byte	0x9c
 1336 0204 12020000 		.4byte	0x212
 1337 0208 12       		.uleb128 0x12
 1338 0209 06000000 		.4byte	.LVL37
 1339 020d DC010000 		.4byte	0x1dc
 1340 0211 00       		.byte	0
 1341 0212 13       		.uleb128 0x13
 1342 0213 31040000 		.4byte	.LASF33
 1343 0217 01       		.byte	0x1
 1344 0218 5303     		.2byte	0x353
 1345 021a 77000000 		.4byte	0x77
 1346 021e 00000000 		.4byte	.LFB9
 1347 0222 4C000000 		.4byte	.LFE9-.LFB9
 1348 0226 01       		.uleb128 0x1
 1349 0227 9C       		.byte	0x9c
 1350 0228 6C020000 		.4byte	0x26c
 1351 022c 0C       		.uleb128 0xc
 1352 022d 4E040000 		.4byte	.LASF34
 1353 0231 01       		.byte	0x1
 1354 0232 5303     		.2byte	0x353
 1355 0234 77000000 		.4byte	0x77
 1356 0238 D2010000 		.4byte	.LLST6
 1357 023c 0D       		.uleb128 0xd
 1358 023d 29020000 		.4byte	.LASF35
 1359 0241 01       		.byte	0x1
 1360 0242 5503     		.2byte	0x355
 1361 0244 77000000 		.4byte	0x77
 1362 0248 32020000 		.4byte	.LLST7
 1363 024c 10       		.uleb128 0x10
 1364 024d D5000000 		.4byte	0xd5
 1365 0251 0E000000 		.4byte	.LBB8
 1366 0255 2C000000 		.4byte	.LBE8-.LBB8
 1367 0259 01       		.byte	0x1
 1368 025a 5C03     		.2byte	0x35c
 1369 025c 14       		.uleb128 0x14
 1370 025d 40000000 		.4byte	.LVL46
 1371 0261 38040000 		.4byte	0x438
 1372 0265 15       		.uleb128 0x15
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 75


 1373 0266 01       		.uleb128 0x1
 1374 0267 50       		.byte	0x50
 1375 0268 01       		.uleb128 0x1
 1376 0269 30       		.byte	0x30
 1377 026a 00       		.byte	0
 1378 026b 00       		.byte	0
 1379 026c 0F       		.uleb128 0xf
 1380 026d 4C020000 		.4byte	.LASF36
 1381 0271 01       		.byte	0x1
 1382 0272 9603     		.2byte	0x396
 1383 0274 00000000 		.4byte	.LFB10
 1384 0278 2C000000 		.4byte	.LFE10-.LFB10
 1385 027c 01       		.uleb128 0x1
 1386 027d 9C       		.byte	0x9c
 1387 027e AB020000 		.4byte	0x2ab
 1388 0282 0C       		.uleb128 0xc
 1389 0283 CF000000 		.4byte	.LASF37
 1390 0287 01       		.byte	0x1
 1391 0288 9603     		.2byte	0x396
 1392 028a 77000000 		.4byte	0x77
 1393 028e 50020000 		.4byte	.LLST8
 1394 0292 12       		.uleb128 0x12
 1395 0293 08000000 		.4byte	.LVL49
 1396 0297 DC010000 		.4byte	0x1dc
 1397 029b 14       		.uleb128 0x14
 1398 029c 26000000 		.4byte	.LVL52
 1399 02a0 38040000 		.4byte	0x438
 1400 02a4 15       		.uleb128 0x15
 1401 02a5 01       		.uleb128 0x1
 1402 02a6 50       		.byte	0x50
 1403 02a7 01       		.uleb128 0x1
 1404 02a8 30       		.byte	0x30
 1405 02a9 00       		.byte	0
 1406 02aa 00       		.byte	0
 1407 02ab 11       		.uleb128 0x11
 1408 02ac F3010000 		.4byte	.LASF39
 1409 02b0 01       		.byte	0x1
 1410 02b1 7E07     		.2byte	0x77e
 1411 02b3 77000000 		.4byte	0x77
 1412 02b7 00000000 		.4byte	.LFB11
 1413 02bb 1C000000 		.4byte	.LFE11-.LFB11
 1414 02bf 01       		.uleb128 0x1
 1415 02c0 9C       		.byte	0x9c
 1416 02c1 16       		.uleb128 0x16
 1417 02c2 5C010000 		.4byte	.LASF40
 1418 02c6 01       		.byte	0x1
 1419 02c7 9107     		.2byte	0x791
 1420 02c9 00000000 		.4byte	.LFB12
 1421 02cd 0C000000 		.4byte	.LFE12-.LFB12
 1422 02d1 01       		.uleb128 0x1
 1423 02d2 9C       		.byte	0x9c
 1424 02d3 16       		.uleb128 0x16
 1425 02d4 5E030000 		.4byte	.LASF41
 1426 02d8 01       		.byte	0x1
 1427 02d9 A107     		.2byte	0x7a1
 1428 02db 00000000 		.4byte	.LFB13
 1429 02df 10000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 76


 1430 02e3 01       		.uleb128 0x1
 1431 02e4 9C       		.byte	0x9c
 1432 02e5 0F       		.uleb128 0xf
 1433 02e6 4B010000 		.4byte	.LASF42
 1434 02ea 01       		.byte	0x1
 1435 02eb B107     		.2byte	0x7b1
 1436 02ed 00000000 		.4byte	.LFB14
 1437 02f1 18000000 		.4byte	.LFE14-.LFB14
 1438 02f5 01       		.uleb128 0x1
 1439 02f6 9C       		.byte	0x9c
 1440 02f7 0C030000 		.4byte	0x30c
 1441 02fb 0C       		.uleb128 0xc
 1442 02fc 8C020000 		.4byte	.LASF43
 1443 0300 01       		.byte	0x1
 1444 0301 B107     		.2byte	0x7b1
 1445 0303 77000000 		.4byte	0x77
 1446 0307 95020000 		.4byte	.LLST9
 1447 030b 00       		.byte	0
 1448 030c 11       		.uleb128 0x11
 1449 030d 7B020000 		.4byte	.LASF44
 1450 0311 01       		.byte	0x1
 1451 0312 C107     		.2byte	0x7c1
 1452 0314 77000000 		.4byte	0x77
 1453 0318 00000000 		.4byte	.LFB15
 1454 031c 10000000 		.4byte	.LFE15-.LFB15
 1455 0320 01       		.uleb128 0x1
 1456 0321 9C       		.byte	0x9c
 1457 0322 11       		.uleb128 0x11
 1458 0323 53040000 		.4byte	.LASF45
 1459 0327 01       		.byte	0x1
 1460 0328 D007     		.2byte	0x7d0
 1461 032a 77000000 		.4byte	0x77
 1462 032e 00000000 		.4byte	.LFB16
 1463 0332 0C000000 		.4byte	.LFE16-.LFB16
 1464 0336 01       		.uleb128 0x1
 1465 0337 9C       		.byte	0x9c
 1466 0338 0F       		.uleb128 0xf
 1467 0339 95010000 		.4byte	.LASF46
 1468 033d 01       		.byte	0x1
 1469 033e E407     		.2byte	0x7e4
 1470 0340 00000000 		.4byte	.LFB17
 1471 0344 20000000 		.4byte	.LFE17-.LFB17
 1472 0348 01       		.uleb128 0x1
 1473 0349 9C       		.byte	0x9c
 1474 034a 5F030000 		.4byte	0x35f
 1475 034e 0C       		.uleb128 0xc
 1476 034f D5020000 		.4byte	.LASF47
 1477 0353 01       		.byte	0x1
 1478 0354 E407     		.2byte	0x7e4
 1479 0356 77000000 		.4byte	0x77
 1480 035a D3020000 		.4byte	.LLST10
 1481 035e 00       		.byte	0
 1482 035f 11       		.uleb128 0x11
 1483 0360 96000000 		.4byte	.LASF48
 1484 0364 01       		.byte	0x1
 1485 0365 F607     		.2byte	0x7f6
 1486 0367 77000000 		.4byte	0x77
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 77


 1487 036b 00000000 		.4byte	.LFB18
 1488 036f 10000000 		.4byte	.LFE18-.LFB18
 1489 0373 01       		.uleb128 0x1
 1490 0374 9C       		.byte	0x9c
 1491 0375 16       		.uleb128 0x16
 1492 0376 A0020000 		.4byte	.LASF49
 1493 037a 01       		.byte	0x1
 1494 037b 0708     		.2byte	0x807
 1495 037d 00000000 		.4byte	.LFB19
 1496 0381 10000000 		.4byte	.LFE19-.LFB19
 1497 0385 01       		.uleb128 0x1
 1498 0386 9C       		.byte	0x9c
 1499 0387 16       		.uleb128 0x16
 1500 0388 CA010000 		.4byte	.LASF50
 1501 038c 01       		.byte	0x1
 1502 038d 1608     		.2byte	0x816
 1503 038f 00000000 		.4byte	.LFB20
 1504 0393 10000000 		.4byte	.LFE20-.LFB20
 1505 0397 01       		.uleb128 0x1
 1506 0398 9C       		.byte	0x9c
 1507 0399 16       		.uleb128 0x16
 1508 039a BD020000 		.4byte	.LASF51
 1509 039e 01       		.byte	0x1
 1510 039f 2508     		.2byte	0x825
 1511 03a1 00000000 		.4byte	.LFB21
 1512 03a5 10000000 		.4byte	.LFE21-.LFB21
 1513 03a9 01       		.uleb128 0x1
 1514 03aa 9C       		.byte	0x9c
 1515 03ab 13       		.uleb128 0x13
 1516 03ac 6B010000 		.4byte	.LASF52
 1517 03b0 01       		.byte	0x1
 1518 03b1 3708     		.2byte	0x837
 1519 03b3 BC000000 		.4byte	0xbc
 1520 03b7 00000000 		.4byte	.LFB22
 1521 03bb 10000000 		.4byte	.LFE22-.LFB22
 1522 03bf 01       		.uleb128 0x1
 1523 03c0 9C       		.byte	0x9c
 1524 03c1 E6030000 		.4byte	0x3e6
 1525 03c5 0C       		.uleb128 0xc
 1526 03c6 8D000000 		.4byte	.LASF53
 1527 03ca 01       		.byte	0x1
 1528 03cb 3708     		.2byte	0x837
 1529 03cd BC000000 		.4byte	0xbc
 1530 03d1 13030000 		.4byte	.LLST11
 1531 03d5 0D       		.uleb128 0xd
 1532 03d6 3E010000 		.4byte	.LASF54
 1533 03da 01       		.byte	0x1
 1534 03db 3908     		.2byte	0x839
 1535 03dd BC000000 		.4byte	0xbc
 1536 03e1 35030000 		.4byte	.LLST12
 1537 03e5 00       		.byte	0
 1538 03e6 11       		.uleb128 0x11
 1539 03e7 A9040000 		.4byte	.LASF55
 1540 03eb 01       		.byte	0x1
 1541 03ec 4C08     		.2byte	0x84c
 1542 03ee BC000000 		.4byte	0xbc
 1543 03f2 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 78


 1544 03f6 0C000000 		.4byte	.LFE23-.LFB23
 1545 03fa 01       		.uleb128 0x1
 1546 03fb 9C       		.byte	0x9c
 1547 03fc 17       		.uleb128 0x17
 1548 03fd 0C020000 		.4byte	.LASF56
 1549 0401 01       		.byte	0x1
 1550 0402 6408     		.2byte	0x864
 1551 0404 00000000 		.4byte	.LFB24
 1552 0408 18000000 		.4byte	.LFE24-.LFB24
 1553 040c 01       		.uleb128 0x1
 1554 040d 9C       		.byte	0x9c
 1555 040e 1C040000 		.4byte	0x41c
 1556 0412 12       		.uleb128 0x12
 1557 0413 10000000 		.4byte	.LVL65
 1558 0417 75030000 		.4byte	0x375
 1559 041b 00       		.byte	0
 1560 041c 18       		.uleb128 0x18
 1561 041d 00000000 		.4byte	.LASF57
 1562 0421 01       		.byte	0x1
 1563 0422 46       		.byte	0x46
 1564 0423 BC000000 		.4byte	0xbc
 1565 0427 05       		.uleb128 0x5
 1566 0428 03       		.byte	0x3
 1567 0429 04000000 		.4byte	cySysWdtCallback
 1568 042d 19       		.uleb128 0x19
 1569 042e 92020000 		.4byte	.LASF62
 1570 0432 04       		.byte	0x4
 1571 0433 D4       		.byte	0xd4
 1572 0434 77000000 		.4byte	0x77
 1573 0438 1A       		.uleb128 0x1a
 1574 0439 27030000 		.4byte	.LASF63
 1575 043d 27030000 		.4byte	.LASF63
 1576 0441 04       		.byte	0x4
 1577 0442 E7       		.byte	0xe7
 1578 0443 00       		.byte	0
 1579              		.section	.debug_abbrev,"",%progbits
 1580              	.Ldebug_abbrev0:
 1581 0000 01       		.uleb128 0x1
 1582 0001 11       		.uleb128 0x11
 1583 0002 01       		.byte	0x1
 1584 0003 25       		.uleb128 0x25
 1585 0004 0E       		.uleb128 0xe
 1586 0005 13       		.uleb128 0x13
 1587 0006 0B       		.uleb128 0xb
 1588 0007 03       		.uleb128 0x3
 1589 0008 0E       		.uleb128 0xe
 1590 0009 1B       		.uleb128 0x1b
 1591 000a 0E       		.uleb128 0xe
 1592 000b 55       		.uleb128 0x55
 1593 000c 17       		.uleb128 0x17
 1594 000d 11       		.uleb128 0x11
 1595 000e 01       		.uleb128 0x1
 1596 000f 10       		.uleb128 0x10
 1597 0010 17       		.uleb128 0x17
 1598 0011 00       		.byte	0
 1599 0012 00       		.byte	0
 1600 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 79


 1601 0014 24       		.uleb128 0x24
 1602 0015 00       		.byte	0
 1603 0016 0B       		.uleb128 0xb
 1604 0017 0B       		.uleb128 0xb
 1605 0018 3E       		.uleb128 0x3e
 1606 0019 0B       		.uleb128 0xb
 1607 001a 03       		.uleb128 0x3
 1608 001b 0E       		.uleb128 0xe
 1609 001c 00       		.byte	0
 1610 001d 00       		.byte	0
 1611 001e 03       		.uleb128 0x3
 1612 001f 24       		.uleb128 0x24
 1613 0020 00       		.byte	0
 1614 0021 0B       		.uleb128 0xb
 1615 0022 0B       		.uleb128 0xb
 1616 0023 3E       		.uleb128 0x3e
 1617 0024 0B       		.uleb128 0xb
 1618 0025 03       		.uleb128 0x3
 1619 0026 08       		.uleb128 0x8
 1620 0027 00       		.byte	0
 1621 0028 00       		.byte	0
 1622 0029 04       		.uleb128 0x4
 1623 002a 16       		.uleb128 0x16
 1624 002b 00       		.byte	0
 1625 002c 03       		.uleb128 0x3
 1626 002d 0E       		.uleb128 0xe
 1627 002e 3A       		.uleb128 0x3a
 1628 002f 0B       		.uleb128 0xb
 1629 0030 3B       		.uleb128 0x3b
 1630 0031 05       		.uleb128 0x5
 1631 0032 49       		.uleb128 0x49
 1632 0033 13       		.uleb128 0x13
 1633 0034 00       		.byte	0
 1634 0035 00       		.byte	0
 1635 0036 05       		.uleb128 0x5
 1636 0037 35       		.uleb128 0x35
 1637 0038 00       		.byte	0
 1638 0039 49       		.uleb128 0x49
 1639 003a 13       		.uleb128 0x13
 1640 003b 00       		.byte	0
 1641 003c 00       		.byte	0
 1642 003d 06       		.uleb128 0x6
 1643 003e 0F       		.uleb128 0xf
 1644 003f 00       		.byte	0
 1645 0040 0B       		.uleb128 0xb
 1646 0041 0B       		.uleb128 0xb
 1647 0042 49       		.uleb128 0x49
 1648 0043 13       		.uleb128 0x13
 1649 0044 00       		.byte	0
 1650 0045 00       		.byte	0
 1651 0046 07       		.uleb128 0x7
 1652 0047 15       		.uleb128 0x15
 1653 0048 00       		.byte	0
 1654 0049 27       		.uleb128 0x27
 1655 004a 19       		.uleb128 0x19
 1656 004b 00       		.byte	0
 1657 004c 00       		.byte	0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 80


 1658 004d 08       		.uleb128 0x8
 1659 004e 16       		.uleb128 0x16
 1660 004f 00       		.byte	0
 1661 0050 03       		.uleb128 0x3
 1662 0051 0E       		.uleb128 0xe
 1663 0052 3A       		.uleb128 0x3a
 1664 0053 0B       		.uleb128 0xb
 1665 0054 3B       		.uleb128 0x3b
 1666 0055 0B       		.uleb128 0xb
 1667 0056 49       		.uleb128 0x49
 1668 0057 13       		.uleb128 0x13
 1669 0058 00       		.byte	0
 1670 0059 00       		.byte	0
 1671 005a 09       		.uleb128 0x9
 1672 005b 2E       		.uleb128 0x2e
 1673 005c 00       		.byte	0
 1674 005d 03       		.uleb128 0x3
 1675 005e 0E       		.uleb128 0xe
 1676 005f 3A       		.uleb128 0x3a
 1677 0060 0B       		.uleb128 0xb
 1678 0061 3B       		.uleb128 0x3b
 1679 0062 05       		.uleb128 0x5
 1680 0063 27       		.uleb128 0x27
 1681 0064 19       		.uleb128 0x19
 1682 0065 20       		.uleb128 0x20
 1683 0066 0B       		.uleb128 0xb
 1684 0067 00       		.byte	0
 1685 0068 00       		.byte	0
 1686 0069 0A       		.uleb128 0xa
 1687 006a 2E       		.uleb128 0x2e
 1688 006b 00       		.byte	0
 1689 006c 3F       		.uleb128 0x3f
 1690 006d 19       		.uleb128 0x19
 1691 006e 03       		.uleb128 0x3
 1692 006f 0E       		.uleb128 0xe
 1693 0070 3A       		.uleb128 0x3a
 1694 0071 0B       		.uleb128 0xb
 1695 0072 3B       		.uleb128 0x3b
 1696 0073 0B       		.uleb128 0xb
 1697 0074 27       		.uleb128 0x27
 1698 0075 19       		.uleb128 0x19
 1699 0076 11       		.uleb128 0x11
 1700 0077 01       		.uleb128 0x1
 1701 0078 12       		.uleb128 0x12
 1702 0079 06       		.uleb128 0x6
 1703 007a 40       		.uleb128 0x40
 1704 007b 18       		.uleb128 0x18
 1705 007c 9742     		.uleb128 0x2117
 1706 007e 19       		.uleb128 0x19
 1707 007f 00       		.byte	0
 1708 0080 00       		.byte	0
 1709 0081 0B       		.uleb128 0xb
 1710 0082 2E       		.uleb128 0x2e
 1711 0083 01       		.byte	0x1
 1712 0084 3F       		.uleb128 0x3f
 1713 0085 19       		.uleb128 0x19
 1714 0086 03       		.uleb128 0x3
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 81


 1715 0087 0E       		.uleb128 0xe
 1716 0088 3A       		.uleb128 0x3a
 1717 0089 0B       		.uleb128 0xb
 1718 008a 3B       		.uleb128 0x3b
 1719 008b 05       		.uleb128 0x5
 1720 008c 27       		.uleb128 0x27
 1721 008d 19       		.uleb128 0x19
 1722 008e 49       		.uleb128 0x49
 1723 008f 13       		.uleb128 0x13
 1724 0090 11       		.uleb128 0x11
 1725 0091 01       		.uleb128 0x1
 1726 0092 12       		.uleb128 0x12
 1727 0093 06       		.uleb128 0x6
 1728 0094 40       		.uleb128 0x40
 1729 0095 18       		.uleb128 0x18
 1730 0096 9642     		.uleb128 0x2116
 1731 0098 19       		.uleb128 0x19
 1732 0099 01       		.uleb128 0x1
 1733 009a 13       		.uleb128 0x13
 1734 009b 00       		.byte	0
 1735 009c 00       		.byte	0
 1736 009d 0C       		.uleb128 0xc
 1737 009e 05       		.uleb128 0x5
 1738 009f 00       		.byte	0
 1739 00a0 03       		.uleb128 0x3
 1740 00a1 0E       		.uleb128 0xe
 1741 00a2 3A       		.uleb128 0x3a
 1742 00a3 0B       		.uleb128 0xb
 1743 00a4 3B       		.uleb128 0x3b
 1744 00a5 05       		.uleb128 0x5
 1745 00a6 49       		.uleb128 0x49
 1746 00a7 13       		.uleb128 0x13
 1747 00a8 02       		.uleb128 0x2
 1748 00a9 17       		.uleb128 0x17
 1749 00aa 00       		.byte	0
 1750 00ab 00       		.byte	0
 1751 00ac 0D       		.uleb128 0xd
 1752 00ad 34       		.uleb128 0x34
 1753 00ae 00       		.byte	0
 1754 00af 03       		.uleb128 0x3
 1755 00b0 0E       		.uleb128 0xe
 1756 00b1 3A       		.uleb128 0x3a
 1757 00b2 0B       		.uleb128 0xb
 1758 00b3 3B       		.uleb128 0x3b
 1759 00b4 05       		.uleb128 0x5
 1760 00b5 49       		.uleb128 0x49
 1761 00b6 13       		.uleb128 0x13
 1762 00b7 02       		.uleb128 0x2
 1763 00b8 17       		.uleb128 0x17
 1764 00b9 00       		.byte	0
 1765 00ba 00       		.byte	0
 1766 00bb 0E       		.uleb128 0xe
 1767 00bc 34       		.uleb128 0x34
 1768 00bd 00       		.byte	0
 1769 00be 03       		.uleb128 0x3
 1770 00bf 0E       		.uleb128 0xe
 1771 00c0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 82


 1772 00c1 0B       		.uleb128 0xb
 1773 00c2 3B       		.uleb128 0x3b
 1774 00c3 05       		.uleb128 0x5
 1775 00c4 49       		.uleb128 0x49
 1776 00c5 13       		.uleb128 0x13
 1777 00c6 02       		.uleb128 0x2
 1778 00c7 18       		.uleb128 0x18
 1779 00c8 00       		.byte	0
 1780 00c9 00       		.byte	0
 1781 00ca 0F       		.uleb128 0xf
 1782 00cb 2E       		.uleb128 0x2e
 1783 00cc 01       		.byte	0x1
 1784 00cd 3F       		.uleb128 0x3f
 1785 00ce 19       		.uleb128 0x19
 1786 00cf 03       		.uleb128 0x3
 1787 00d0 0E       		.uleb128 0xe
 1788 00d1 3A       		.uleb128 0x3a
 1789 00d2 0B       		.uleb128 0xb
 1790 00d3 3B       		.uleb128 0x3b
 1791 00d4 05       		.uleb128 0x5
 1792 00d5 27       		.uleb128 0x27
 1793 00d6 19       		.uleb128 0x19
 1794 00d7 11       		.uleb128 0x11
 1795 00d8 01       		.uleb128 0x1
 1796 00d9 12       		.uleb128 0x12
 1797 00da 06       		.uleb128 0x6
 1798 00db 40       		.uleb128 0x40
 1799 00dc 18       		.uleb128 0x18
 1800 00dd 9742     		.uleb128 0x2117
 1801 00df 19       		.uleb128 0x19
 1802 00e0 01       		.uleb128 0x1
 1803 00e1 13       		.uleb128 0x13
 1804 00e2 00       		.byte	0
 1805 00e3 00       		.byte	0
 1806 00e4 10       		.uleb128 0x10
 1807 00e5 1D       		.uleb128 0x1d
 1808 00e6 00       		.byte	0
 1809 00e7 31       		.uleb128 0x31
 1810 00e8 13       		.uleb128 0x13
 1811 00e9 11       		.uleb128 0x11
 1812 00ea 01       		.uleb128 0x1
 1813 00eb 12       		.uleb128 0x12
 1814 00ec 06       		.uleb128 0x6
 1815 00ed 58       		.uleb128 0x58
 1816 00ee 0B       		.uleb128 0xb
 1817 00ef 59       		.uleb128 0x59
 1818 00f0 05       		.uleb128 0x5
 1819 00f1 00       		.byte	0
 1820 00f2 00       		.byte	0
 1821 00f3 11       		.uleb128 0x11
 1822 00f4 2E       		.uleb128 0x2e
 1823 00f5 00       		.byte	0
 1824 00f6 3F       		.uleb128 0x3f
 1825 00f7 19       		.uleb128 0x19
 1826 00f8 03       		.uleb128 0x3
 1827 00f9 0E       		.uleb128 0xe
 1828 00fa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 83


 1829 00fb 0B       		.uleb128 0xb
 1830 00fc 3B       		.uleb128 0x3b
 1831 00fd 05       		.uleb128 0x5
 1832 00fe 27       		.uleb128 0x27
 1833 00ff 19       		.uleb128 0x19
 1834 0100 49       		.uleb128 0x49
 1835 0101 13       		.uleb128 0x13
 1836 0102 11       		.uleb128 0x11
 1837 0103 01       		.uleb128 0x1
 1838 0104 12       		.uleb128 0x12
 1839 0105 06       		.uleb128 0x6
 1840 0106 40       		.uleb128 0x40
 1841 0107 18       		.uleb128 0x18
 1842 0108 9742     		.uleb128 0x2117
 1843 010a 19       		.uleb128 0x19
 1844 010b 00       		.byte	0
 1845 010c 00       		.byte	0
 1846 010d 12       		.uleb128 0x12
 1847 010e 898201   		.uleb128 0x4109
 1848 0111 00       		.byte	0
 1849 0112 11       		.uleb128 0x11
 1850 0113 01       		.uleb128 0x1
 1851 0114 31       		.uleb128 0x31
 1852 0115 13       		.uleb128 0x13
 1853 0116 00       		.byte	0
 1854 0117 00       		.byte	0
 1855 0118 13       		.uleb128 0x13
 1856 0119 2E       		.uleb128 0x2e
 1857 011a 01       		.byte	0x1
 1858 011b 3F       		.uleb128 0x3f
 1859 011c 19       		.uleb128 0x19
 1860 011d 03       		.uleb128 0x3
 1861 011e 0E       		.uleb128 0xe
 1862 011f 3A       		.uleb128 0x3a
 1863 0120 0B       		.uleb128 0xb
 1864 0121 3B       		.uleb128 0x3b
 1865 0122 05       		.uleb128 0x5
 1866 0123 27       		.uleb128 0x27
 1867 0124 19       		.uleb128 0x19
 1868 0125 49       		.uleb128 0x49
 1869 0126 13       		.uleb128 0x13
 1870 0127 11       		.uleb128 0x11
 1871 0128 01       		.uleb128 0x1
 1872 0129 12       		.uleb128 0x12
 1873 012a 06       		.uleb128 0x6
 1874 012b 40       		.uleb128 0x40
 1875 012c 18       		.uleb128 0x18
 1876 012d 9742     		.uleb128 0x2117
 1877 012f 19       		.uleb128 0x19
 1878 0130 01       		.uleb128 0x1
 1879 0131 13       		.uleb128 0x13
 1880 0132 00       		.byte	0
 1881 0133 00       		.byte	0
 1882 0134 14       		.uleb128 0x14
 1883 0135 898201   		.uleb128 0x4109
 1884 0138 01       		.byte	0x1
 1885 0139 11       		.uleb128 0x11
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 84


 1886 013a 01       		.uleb128 0x1
 1887 013b 31       		.uleb128 0x31
 1888 013c 13       		.uleb128 0x13
 1889 013d 00       		.byte	0
 1890 013e 00       		.byte	0
 1891 013f 15       		.uleb128 0x15
 1892 0140 8A8201   		.uleb128 0x410a
 1893 0143 00       		.byte	0
 1894 0144 02       		.uleb128 0x2
 1895 0145 18       		.uleb128 0x18
 1896 0146 9142     		.uleb128 0x2111
 1897 0148 18       		.uleb128 0x18
 1898 0149 00       		.byte	0
 1899 014a 00       		.byte	0
 1900 014b 16       		.uleb128 0x16
 1901 014c 2E       		.uleb128 0x2e
 1902 014d 00       		.byte	0
 1903 014e 3F       		.uleb128 0x3f
 1904 014f 19       		.uleb128 0x19
 1905 0150 03       		.uleb128 0x3
 1906 0151 0E       		.uleb128 0xe
 1907 0152 3A       		.uleb128 0x3a
 1908 0153 0B       		.uleb128 0xb
 1909 0154 3B       		.uleb128 0x3b
 1910 0155 05       		.uleb128 0x5
 1911 0156 27       		.uleb128 0x27
 1912 0157 19       		.uleb128 0x19
 1913 0158 11       		.uleb128 0x11
 1914 0159 01       		.uleb128 0x1
 1915 015a 12       		.uleb128 0x12
 1916 015b 06       		.uleb128 0x6
 1917 015c 40       		.uleb128 0x40
 1918 015d 18       		.uleb128 0x18
 1919 015e 9742     		.uleb128 0x2117
 1920 0160 19       		.uleb128 0x19
 1921 0161 00       		.byte	0
 1922 0162 00       		.byte	0
 1923 0163 17       		.uleb128 0x17
 1924 0164 2E       		.uleb128 0x2e
 1925 0165 01       		.byte	0x1
 1926 0166 3F       		.uleb128 0x3f
 1927 0167 19       		.uleb128 0x19
 1928 0168 03       		.uleb128 0x3
 1929 0169 0E       		.uleb128 0xe
 1930 016a 3A       		.uleb128 0x3a
 1931 016b 0B       		.uleb128 0xb
 1932 016c 3B       		.uleb128 0x3b
 1933 016d 05       		.uleb128 0x5
 1934 016e 27       		.uleb128 0x27
 1935 016f 19       		.uleb128 0x19
 1936 0170 11       		.uleb128 0x11
 1937 0171 01       		.uleb128 0x1
 1938 0172 12       		.uleb128 0x12
 1939 0173 06       		.uleb128 0x6
 1940 0174 40       		.uleb128 0x40
 1941 0175 18       		.uleb128 0x18
 1942 0176 9642     		.uleb128 0x2116
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 85


 1943 0178 19       		.uleb128 0x19
 1944 0179 01       		.uleb128 0x1
 1945 017a 13       		.uleb128 0x13
 1946 017b 00       		.byte	0
 1947 017c 00       		.byte	0
 1948 017d 18       		.uleb128 0x18
 1949 017e 34       		.uleb128 0x34
 1950 017f 00       		.byte	0
 1951 0180 03       		.uleb128 0x3
 1952 0181 0E       		.uleb128 0xe
 1953 0182 3A       		.uleb128 0x3a
 1954 0183 0B       		.uleb128 0xb
 1955 0184 3B       		.uleb128 0x3b
 1956 0185 0B       		.uleb128 0xb
 1957 0186 49       		.uleb128 0x49
 1958 0187 13       		.uleb128 0x13
 1959 0188 02       		.uleb128 0x2
 1960 0189 18       		.uleb128 0x18
 1961 018a 00       		.byte	0
 1962 018b 00       		.byte	0
 1963 018c 19       		.uleb128 0x19
 1964 018d 34       		.uleb128 0x34
 1965 018e 00       		.byte	0
 1966 018f 03       		.uleb128 0x3
 1967 0190 0E       		.uleb128 0xe
 1968 0191 3A       		.uleb128 0x3a
 1969 0192 0B       		.uleb128 0xb
 1970 0193 3B       		.uleb128 0x3b
 1971 0194 0B       		.uleb128 0xb
 1972 0195 49       		.uleb128 0x49
 1973 0196 13       		.uleb128 0x13
 1974 0197 3F       		.uleb128 0x3f
 1975 0198 19       		.uleb128 0x19
 1976 0199 3C       		.uleb128 0x3c
 1977 019a 19       		.uleb128 0x19
 1978 019b 00       		.byte	0
 1979 019c 00       		.byte	0
 1980 019d 1A       		.uleb128 0x1a
 1981 019e 2E       		.uleb128 0x2e
 1982 019f 00       		.byte	0
 1983 01a0 3F       		.uleb128 0x3f
 1984 01a1 19       		.uleb128 0x19
 1985 01a2 3C       		.uleb128 0x3c
 1986 01a3 19       		.uleb128 0x19
 1987 01a4 6E       		.uleb128 0x6e
 1988 01a5 0E       		.uleb128 0xe
 1989 01a6 03       		.uleb128 0x3
 1990 01a7 0E       		.uleb128 0xe
 1991 01a8 3A       		.uleb128 0x3a
 1992 01a9 0B       		.uleb128 0xb
 1993 01aa 3B       		.uleb128 0x3b
 1994 01ab 0B       		.uleb128 0xb
 1995 01ac 00       		.byte	0
 1996 01ad 00       		.byte	0
 1997 01ae 00       		.byte	0
 1998              		.section	.debug_loc,"",%progbits
 1999              	.Ldebug_loc0:
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 86


 2000              	.LLST0:
 2001 0000 00000000 		.4byte	.LVL0
 2002 0004 48000000 		.4byte	.LVL3
 2003 0008 0100     		.2byte	0x1
 2004 000a 50       		.byte	0x50
 2005 000b 48000000 		.4byte	.LVL3
 2006 000f A2000000 		.4byte	.LVL19
 2007 0013 0400     		.2byte	0x4
 2008 0015 F3       		.byte	0xf3
 2009 0016 01       		.uleb128 0x1
 2010 0017 50       		.byte	0x50
 2011 0018 9F       		.byte	0x9f
 2012 0019 A2000000 		.4byte	.LVL19
 2013 001d B4000000 		.4byte	.LVL21
 2014 0021 0100     		.2byte	0x1
 2015 0023 50       		.byte	0x50
 2016 0024 B4000000 		.4byte	.LVL21
 2017 0028 B6000000 		.4byte	.LVL22
 2018 002c 0400     		.2byte	0x4
 2019 002e F3       		.byte	0xf3
 2020 002f 01       		.uleb128 0x1
 2021 0030 50       		.byte	0x50
 2022 0031 9F       		.byte	0x9f
 2023 0032 B6000000 		.4byte	.LVL22
 2024 0036 B8000000 		.4byte	.LVL23
 2025 003a 0100     		.2byte	0x1
 2026 003c 50       		.byte	0x50
 2027 003d B8000000 		.4byte	.LVL23
 2028 0041 BA000000 		.4byte	.LVL24
 2029 0045 0400     		.2byte	0x4
 2030 0047 F3       		.byte	0xf3
 2031 0048 01       		.uleb128 0x1
 2032 0049 50       		.byte	0x50
 2033 004a 9F       		.byte	0x9f
 2034 004b BA000000 		.4byte	.LVL24
 2035 004f BC000000 		.4byte	.LVL25
 2036 0053 0100     		.2byte	0x1
 2037 0055 50       		.byte	0x50
 2038 0056 BC000000 		.4byte	.LVL25
 2039 005a BE000000 		.4byte	.LVL26
 2040 005e 0400     		.2byte	0x4
 2041 0060 F3       		.byte	0xf3
 2042 0061 01       		.uleb128 0x1
 2043 0062 50       		.byte	0x50
 2044 0063 9F       		.byte	0x9f
 2045 0064 BE000000 		.4byte	.LVL26
 2046 0068 C0000000 		.4byte	.LVL27
 2047 006c 0100     		.2byte	0x1
 2048 006e 50       		.byte	0x50
 2049 006f C0000000 		.4byte	.LVL27
 2050 0073 C2000000 		.4byte	.LVL28
 2051 0077 0400     		.2byte	0x4
 2052 0079 F3       		.byte	0xf3
 2053 007a 01       		.uleb128 0x1
 2054 007b 50       		.byte	0x50
 2055 007c 9F       		.byte	0x9f
 2056 007d C2000000 		.4byte	.LVL28
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 87


 2057 0081 C4000000 		.4byte	.LVL29
 2058 0085 0100     		.2byte	0x1
 2059 0087 50       		.byte	0x50
 2060 0088 C4000000 		.4byte	.LVL29
 2061 008c C6000000 		.4byte	.LVL30
 2062 0090 0400     		.2byte	0x4
 2063 0092 F3       		.byte	0xf3
 2064 0093 01       		.uleb128 0x1
 2065 0094 50       		.byte	0x50
 2066 0095 9F       		.byte	0x9f
 2067 0096 C6000000 		.4byte	.LVL30
 2068 009a C8000000 		.4byte	.LVL31
 2069 009e 0100     		.2byte	0x1
 2070 00a0 50       		.byte	0x50
 2071 00a1 C8000000 		.4byte	.LVL31
 2072 00a5 CA000000 		.4byte	.LVL32
 2073 00a9 0400     		.2byte	0x4
 2074 00ab F3       		.byte	0xf3
 2075 00ac 01       		.uleb128 0x1
 2076 00ad 50       		.byte	0x50
 2077 00ae 9F       		.byte	0x9f
 2078 00af CA000000 		.4byte	.LVL32
 2079 00b3 CC000000 		.4byte	.LVL33
 2080 00b7 0100     		.2byte	0x1
 2081 00b9 50       		.byte	0x50
 2082 00ba CC000000 		.4byte	.LVL33
 2083 00be CE000000 		.4byte	.LVL34
 2084 00c2 0400     		.2byte	0x4
 2085 00c4 F3       		.byte	0xf3
 2086 00c5 01       		.uleb128 0x1
 2087 00c6 50       		.byte	0x50
 2088 00c7 9F       		.byte	0x9f
 2089 00c8 CE000000 		.4byte	.LVL34
 2090 00cc D0000000 		.4byte	.LVL35
 2091 00d0 0100     		.2byte	0x1
 2092 00d2 50       		.byte	0x50
 2093 00d3 D0000000 		.4byte	.LVL35
 2094 00d7 0C010000 		.4byte	.LFE5
 2095 00db 0400     		.2byte	0x4
 2096 00dd F3       		.byte	0xf3
 2097 00de 01       		.uleb128 0x1
 2098 00df 50       		.byte	0x50
 2099 00e0 9F       		.byte	0x9f
 2100 00e1 00000000 		.4byte	0
 2101 00e5 00000000 		.4byte	0
 2102              	.LLST1:
 2103 00e9 00000000 		.4byte	.LVL0
 2104 00ed 4E000000 		.4byte	.LVL4
 2105 00f1 0100     		.2byte	0x1
 2106 00f3 51       		.byte	0x51
 2107 00f4 4E000000 		.4byte	.LVL4
 2108 00f8 A2000000 		.4byte	.LVL19
 2109 00fc 0100     		.2byte	0x1
 2110 00fe 54       		.byte	0x54
 2111 00ff A2000000 		.4byte	.LVL19
 2112 0103 D0000000 		.4byte	.LVL35
 2113 0107 0100     		.2byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 88


 2114 0109 51       		.byte	0x51
 2115 010a D0000000 		.4byte	.LVL35
 2116 010e D0000000 		.4byte	.LVL36
 2117 0112 0100     		.2byte	0x1
 2118 0114 54       		.byte	0x54
 2119 0115 D0000000 		.4byte	.LVL36
 2120 0119 0C010000 		.4byte	.LFE5
 2121 011d 0400     		.2byte	0x4
 2122 011f F3       		.byte	0xf3
 2123 0120 01       		.uleb128 0x1
 2124 0121 51       		.byte	0x51
 2125 0122 9F       		.byte	0x9f
 2126 0123 00000000 		.4byte	0
 2127 0127 00000000 		.4byte	0
 2128              	.LLST2:
 2129 012b 7E000000 		.4byte	.LVL12
 2130 012f 80000000 		.4byte	.LVL13
 2131 0133 0100     		.2byte	0x1
 2132 0135 50       		.byte	0x50
 2133 0136 98000000 		.4byte	.LVL16
 2134 013a 9C000000 		.4byte	.LVL17
 2135 013e 0100     		.2byte	0x1
 2136 0140 50       		.byte	0x50
 2137 0141 9C000000 		.4byte	.LVL17
 2138 0145 A2000000 		.4byte	.LVL19
 2139 0149 0200     		.2byte	0x2
 2140 014b 74       		.byte	0x74
 2141 014c 00       		.sleb128 0
 2142 014d 00000000 		.4byte	0
 2143 0151 00000000 		.4byte	0
 2144              	.LLST3:
 2145 0155 56000000 		.4byte	.LVL6
 2146 0159 60000000 		.4byte	.LVL7
 2147 015d 0100     		.2byte	0x1
 2148 015f 50       		.byte	0x50
 2149 0160 60000000 		.4byte	.LVL7
 2150 0164 74000000 		.4byte	.LVL10
 2151 0168 0100     		.2byte	0x1
 2152 016a 56       		.byte	0x56
 2153 016b 80000000 		.4byte	.LVL13
 2154 016f 84000000 		.4byte	.LVL14
 2155 0173 0100     		.2byte	0x1
 2156 0175 50       		.byte	0x50
 2157 0176 84000000 		.4byte	.LVL14
 2158 017a 98000000 		.4byte	.LVL16
 2159 017e 0100     		.2byte	0x1
 2160 0180 56       		.byte	0x56
 2161 0181 00000000 		.4byte	0
 2162 0185 00000000 		.4byte	0
 2163              	.LLST4:
 2164 0189 0C000000 		.4byte	.LVL1
 2165 018d 16000000 		.4byte	.LVL2
 2166 0191 0100     		.2byte	0x1
 2167 0193 53       		.byte	0x53
 2168 0194 B6000000 		.4byte	.LVL22
 2169 0198 BA000000 		.4byte	.LVL24
 2170 019c 0100     		.2byte	0x1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 89


 2171 019e 53       		.byte	0x53
 2172 019f 00000000 		.4byte	0
 2173 01a3 00000000 		.4byte	0
 2174              	.LLST5:
 2175 01a7 A0000000 		.4byte	.LVL18
 2176 01ab A2000000 		.4byte	.LVL19
 2177 01af 0200     		.2byte	0x2
 2178 01b1 30       		.byte	0x30
 2179 01b2 9F       		.byte	0x9f
 2180 01b3 B2000000 		.4byte	.LVL20
 2181 01b7 B6000000 		.4byte	.LVL22
 2182 01bb 0200     		.2byte	0x2
 2183 01bd 37       		.byte	0x37
 2184 01be 9F       		.byte	0x9f
 2185 01bf D0000000 		.4byte	.LVL35
 2186 01c3 0C010000 		.4byte	.LFE5
 2187 01c7 0100     		.2byte	0x1
 2188 01c9 50       		.byte	0x50
 2189 01ca 00000000 		.4byte	0
 2190 01ce 00000000 		.4byte	0
 2191              	.LLST6:
 2192 01d2 00000000 		.4byte	.LVL38
 2193 01d6 1C000000 		.4byte	.LVL40
 2194 01da 0100     		.2byte	0x1
 2195 01dc 50       		.byte	0x50
 2196 01dd 1C000000 		.4byte	.LVL40
 2197 01e1 26000000 		.4byte	.LVL41
 2198 01e5 0300     		.2byte	0x3
 2199 01e7 70       		.byte	0x70
 2200 01e8 7E       		.sleb128 -2
 2201 01e9 9F       		.byte	0x9f
 2202 01ea 26000000 		.4byte	.LVL41
 2203 01ee 2A000000 		.4byte	.LVL42
 2204 01f2 0300     		.2byte	0x3
 2205 01f4 70       		.byte	0x70
 2206 01f5 50       		.sleb128 -48
 2207 01f6 9F       		.byte	0x9f
 2208 01f7 2A000000 		.4byte	.LVL42
 2209 01fb 32000000 		.4byte	.LVL43
 2210 01ff 0300     		.2byte	0x3
 2211 0201 70       		.byte	0x70
 2212 0202 70       		.sleb128 -16
 2213 0203 9F       		.byte	0x9f
 2214 0204 32000000 		.4byte	.LVL43
 2215 0208 3A000000 		.4byte	.LVL44
 2216 020c 0300     		.2byte	0x3
 2217 020e 70       		.byte	0x70
 2218 020f 79       		.sleb128 -7
 2219 0210 9F       		.byte	0x9f
 2220 0211 3A000000 		.4byte	.LVL44
 2221 0215 3C000000 		.4byte	.LVL45
 2222 0219 0100     		.2byte	0x1
 2223 021b 50       		.byte	0x50
 2224 021c 3C000000 		.4byte	.LVL45
 2225 0220 4C000000 		.4byte	.LFE9
 2226 0224 0400     		.2byte	0x4
 2227 0226 F3       		.byte	0xf3
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 90


 2228 0227 01       		.uleb128 0x1
 2229 0228 50       		.byte	0x50
 2230 0229 9F       		.byte	0x9f
 2231 022a 00000000 		.4byte	0
 2232 022e 00000000 		.4byte	0
 2233              	.LLST7:
 2234 0232 0A000000 		.4byte	.LVL39
 2235 0236 42000000 		.4byte	.LVL47
 2236 023a 0100     		.2byte	0x1
 2237 023c 54       		.byte	0x54
 2238 023d 42000000 		.4byte	.LVL47
 2239 0241 4C000000 		.4byte	.LFE9
 2240 0245 0100     		.2byte	0x1
 2241 0247 50       		.byte	0x50
 2242 0248 00000000 		.4byte	0
 2243 024c 00000000 		.4byte	0
 2244              	.LLST8:
 2245 0250 00000000 		.4byte	.LVL48
 2246 0254 07000000 		.4byte	.LVL49-1
 2247 0258 0100     		.2byte	0x1
 2248 025a 50       		.byte	0x50
 2249 025b 07000000 		.4byte	.LVL49-1
 2250 025f 1A000000 		.4byte	.LVL50
 2251 0263 0100     		.2byte	0x1
 2252 0265 54       		.byte	0x54
 2253 0266 1A000000 		.4byte	.LVL50
 2254 026a 20000000 		.4byte	.LVL51
 2255 026e 0400     		.2byte	0x4
 2256 0270 F3       		.byte	0xf3
 2257 0271 01       		.uleb128 0x1
 2258 0272 50       		.byte	0x50
 2259 0273 9F       		.byte	0x9f
 2260 0274 20000000 		.4byte	.LVL51
 2261 0278 26000000 		.4byte	.LVL52
 2262 027c 0100     		.2byte	0x1
 2263 027e 54       		.byte	0x54
 2264 027f 26000000 		.4byte	.LVL52
 2265 0283 2C000000 		.4byte	.LFE10
 2266 0287 0400     		.2byte	0x4
 2267 0289 F3       		.byte	0xf3
 2268 028a 01       		.uleb128 0x1
 2269 028b 50       		.byte	0x50
 2270 028c 9F       		.byte	0x9f
 2271 028d 00000000 		.4byte	0
 2272 0291 00000000 		.4byte	0
 2273              	.LLST9:
 2274 0295 00000000 		.4byte	.LVL53
 2275 0299 02000000 		.4byte	.LVL54
 2276 029d 0100     		.2byte	0x1
 2277 029f 50       		.byte	0x50
 2278 02a0 02000000 		.4byte	.LVL54
 2279 02a4 04000000 		.4byte	.LVL55
 2280 02a8 0400     		.2byte	0x4
 2281 02aa F3       		.byte	0xf3
 2282 02ab 01       		.uleb128 0x1
 2283 02ac 50       		.byte	0x50
 2284 02ad 9F       		.byte	0x9f
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 91


 2285 02ae 04000000 		.4byte	.LVL55
 2286 02b2 0E000000 		.4byte	.LVL56
 2287 02b6 0100     		.2byte	0x1
 2288 02b8 50       		.byte	0x50
 2289 02b9 0E000000 		.4byte	.LVL56
 2290 02bd 18000000 		.4byte	.LFE14
 2291 02c1 0800     		.2byte	0x8
 2292 02c3 F3       		.byte	0xf3
 2293 02c4 01       		.uleb128 0x1
 2294 02c5 50       		.byte	0x50
 2295 02c6 40       		.byte	0x40
 2296 02c7 24       		.byte	0x24
 2297 02c8 40       		.byte	0x40
 2298 02c9 25       		.byte	0x25
 2299 02ca 9F       		.byte	0x9f
 2300 02cb 00000000 		.4byte	0
 2301 02cf 00000000 		.4byte	0
 2302              	.LLST10:
 2303 02d3 00000000 		.4byte	.LVL57
 2304 02d7 02000000 		.4byte	.LVL58
 2305 02db 0100     		.2byte	0x1
 2306 02dd 50       		.byte	0x50
 2307 02de 02000000 		.4byte	.LVL58
 2308 02e2 0A000000 		.4byte	.LVL59
 2309 02e6 0400     		.2byte	0x4
 2310 02e8 F3       		.byte	0xf3
 2311 02e9 01       		.uleb128 0x1
 2312 02ea 50       		.byte	0x50
 2313 02eb 9F       		.byte	0x9f
 2314 02ec 0A000000 		.4byte	.LVL59
 2315 02f0 14000000 		.4byte	.LVL60
 2316 02f4 0100     		.2byte	0x1
 2317 02f6 52       		.byte	0x52
 2318 02f7 14000000 		.4byte	.LVL60
 2319 02fb 20000000 		.4byte	.LFE17
 2320 02ff 0A00     		.2byte	0xa
 2321 0301 F3       		.byte	0xf3
 2322 0302 01       		.uleb128 0x1
 2323 0303 50       		.byte	0x50
 2324 0304 40       		.byte	0x40
 2325 0305 24       		.byte	0x24
 2326 0306 4E       		.byte	0x4e
 2327 0307 3F       		.byte	0x3f
 2328 0308 24       		.byte	0x24
 2329 0309 1A       		.byte	0x1a
 2330 030a 9F       		.byte	0x9f
 2331 030b 00000000 		.4byte	0
 2332 030f 00000000 		.4byte	0
 2333              	.LLST11:
 2334 0313 00000000 		.4byte	.LVL61
 2335 0317 08000000 		.4byte	.LVL63
 2336 031b 0100     		.2byte	0x1
 2337 031d 50       		.byte	0x50
 2338 031e 08000000 		.4byte	.LVL63
 2339 0322 10000000 		.4byte	.LFE22
 2340 0326 0500     		.2byte	0x5
 2341 0328 03       		.byte	0x3
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 92


 2342 0329 04000000 		.4byte	cySysWdtCallback
 2343 032d 00000000 		.4byte	0
 2344 0331 00000000 		.4byte	0
 2345              	.LLST12:
 2346 0335 00000000 		.4byte	.LVL61
 2347 0339 04000000 		.4byte	.LVL62
 2348 033d 0200     		.2byte	0x2
 2349 033f 30       		.byte	0x30
 2350 0340 9F       		.byte	0x9f
 2351 0341 04000000 		.4byte	.LVL62
 2352 0345 10000000 		.4byte	.LFE22
 2353 0349 0100     		.2byte	0x1
 2354 034b 52       		.byte	0x52
 2355 034c 00000000 		.4byte	0
 2356 0350 00000000 		.4byte	0
 2357              		.section	.debug_aranges,"",%progbits
 2358 0000 D4000000 		.4byte	0xd4
 2359 0004 0200     		.2byte	0x2
 2360 0006 00000000 		.4byte	.Ldebug_info0
 2361 000a 04       		.byte	0x4
 2362 000b 00       		.byte	0
 2363 000c 0000     		.2byte	0
 2364 000e 0000     		.2byte	0
 2365 0010 00000000 		.4byte	.LFB1
 2366 0014 14000000 		.4byte	.LFE1-.LFB1
 2367 0018 00000000 		.4byte	.LFB2
 2368 001c 10000000 		.4byte	.LFE2-.LFB2
 2369 0020 00000000 		.4byte	.LFB3
 2370 0024 34000000 		.4byte	.LFE3-.LFB3
 2371 0028 00000000 		.4byte	.LFB4
 2372 002c 28000000 		.4byte	.LFE4-.LFB4
 2373 0030 00000000 		.4byte	.LFB5
 2374 0034 0C010000 		.4byte	.LFE5-.LFB5
 2375 0038 00000000 		.4byte	.LFB6
 2376 003c 40000000 		.4byte	.LFE6-.LFB6
 2377 0040 00000000 		.4byte	.LFB8
 2378 0044 14000000 		.4byte	.LFE8-.LFB8
 2379 0048 00000000 		.4byte	.LFB7
 2380 004c 1C000000 		.4byte	.LFE7-.LFB7
 2381 0050 00000000 		.4byte	.LFB9
 2382 0054 4C000000 		.4byte	.LFE9-.LFB9
 2383 0058 00000000 		.4byte	.LFB10
 2384 005c 2C000000 		.4byte	.LFE10-.LFB10
 2385 0060 00000000 		.4byte	.LFB11
 2386 0064 1C000000 		.4byte	.LFE11-.LFB11
 2387 0068 00000000 		.4byte	.LFB12
 2388 006c 0C000000 		.4byte	.LFE12-.LFB12
 2389 0070 00000000 		.4byte	.LFB13
 2390 0074 10000000 		.4byte	.LFE13-.LFB13
 2391 0078 00000000 		.4byte	.LFB14
 2392 007c 18000000 		.4byte	.LFE14-.LFB14
 2393 0080 00000000 		.4byte	.LFB15
 2394 0084 10000000 		.4byte	.LFE15-.LFB15
 2395 0088 00000000 		.4byte	.LFB16
 2396 008c 0C000000 		.4byte	.LFE16-.LFB16
 2397 0090 00000000 		.4byte	.LFB17
 2398 0094 20000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 93


 2399 0098 00000000 		.4byte	.LFB18
 2400 009c 10000000 		.4byte	.LFE18-.LFB18
 2401 00a0 00000000 		.4byte	.LFB19
 2402 00a4 10000000 		.4byte	.LFE19-.LFB19
 2403 00a8 00000000 		.4byte	.LFB20
 2404 00ac 10000000 		.4byte	.LFE20-.LFB20
 2405 00b0 00000000 		.4byte	.LFB21
 2406 00b4 10000000 		.4byte	.LFE21-.LFB21
 2407 00b8 00000000 		.4byte	.LFB22
 2408 00bc 10000000 		.4byte	.LFE22-.LFB22
 2409 00c0 00000000 		.4byte	.LFB23
 2410 00c4 0C000000 		.4byte	.LFE23-.LFB23
 2411 00c8 00000000 		.4byte	.LFB24
 2412 00cc 18000000 		.4byte	.LFE24-.LFB24
 2413 00d0 00000000 		.4byte	0
 2414 00d4 00000000 		.4byte	0
 2415              		.section	.debug_ranges,"",%progbits
 2416              	.Ldebug_ranges0:
 2417 0000 00000000 		.4byte	.LFB1
 2418 0004 14000000 		.4byte	.LFE1
 2419 0008 00000000 		.4byte	.LFB2
 2420 000c 10000000 		.4byte	.LFE2
 2421 0010 00000000 		.4byte	.LFB3
 2422 0014 34000000 		.4byte	.LFE3
 2423 0018 00000000 		.4byte	.LFB4
 2424 001c 28000000 		.4byte	.LFE4
 2425 0020 00000000 		.4byte	.LFB5
 2426 0024 0C010000 		.4byte	.LFE5
 2427 0028 00000000 		.4byte	.LFB6
 2428 002c 40000000 		.4byte	.LFE6
 2429 0030 00000000 		.4byte	.LFB8
 2430 0034 14000000 		.4byte	.LFE8
 2431 0038 00000000 		.4byte	.LFB7
 2432 003c 1C000000 		.4byte	.LFE7
 2433 0040 00000000 		.4byte	.LFB9
 2434 0044 4C000000 		.4byte	.LFE9
 2435 0048 00000000 		.4byte	.LFB10
 2436 004c 2C000000 		.4byte	.LFE10
 2437 0050 00000000 		.4byte	.LFB11
 2438 0054 1C000000 		.4byte	.LFE11
 2439 0058 00000000 		.4byte	.LFB12
 2440 005c 0C000000 		.4byte	.LFE12
 2441 0060 00000000 		.4byte	.LFB13
 2442 0064 10000000 		.4byte	.LFE13
 2443 0068 00000000 		.4byte	.LFB14
 2444 006c 18000000 		.4byte	.LFE14
 2445 0070 00000000 		.4byte	.LFB15
 2446 0074 10000000 		.4byte	.LFE15
 2447 0078 00000000 		.4byte	.LFB16
 2448 007c 0C000000 		.4byte	.LFE16
 2449 0080 00000000 		.4byte	.LFB17
 2450 0084 20000000 		.4byte	.LFE17
 2451 0088 00000000 		.4byte	.LFB18
 2452 008c 10000000 		.4byte	.LFE18
 2453 0090 00000000 		.4byte	.LFB19
 2454 0094 10000000 		.4byte	.LFE19
 2455 0098 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 94


 2456 009c 10000000 		.4byte	.LFE20
 2457 00a0 00000000 		.4byte	.LFB21
 2458 00a4 10000000 		.4byte	.LFE21
 2459 00a8 00000000 		.4byte	.LFB22
 2460 00ac 10000000 		.4byte	.LFE22
 2461 00b0 00000000 		.4byte	.LFB23
 2462 00b4 0C000000 		.4byte	.LFE23
 2463 00b8 00000000 		.4byte	.LFB24
 2464 00bc 18000000 		.4byte	.LFE24
 2465 00c0 00000000 		.4byte	0
 2466 00c4 00000000 		.4byte	0
 2467              		.section	.debug_line,"",%progbits
 2468              	.Ldebug_line0:
 2469 0000 80020000 		.section	.debug_str,"MS",%progbits,1
 2469      02005C00 
 2469      00000201 
 2469      FB0E0D00 
 2469      01010101 
 2470              	.LASF57:
 2471 0000 63795379 		.ascii	"cySysWdtCallback\000"
 2471      73576474 
 2471      43616C6C 
 2471      6261636B 
 2471      00
 2472              	.LASF21:
 2473 0011 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 2473      73436C6B 
 2473      496C6F53 
 2473      74617274 
 2473      4D656173 
 2474              	.LASF7:
 2475 002d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2475      206C6F6E 
 2475      6720756E 
 2475      7369676E 
 2475      65642069 
 2476              	.LASF38:
 2477 0044 43795379 		.ascii	"CySysClkWcoEnabled\000"
 2477      73436C6B 
 2477      57636F45 
 2477      6E61626C 
 2477      656400
 2478              	.LASF61:
 2479 0057 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 2479      73436C6B 
 2479      57636F53 
 2479      65744869 
 2479      6768506F 
 2480              	.LASF6:
 2481 0073 6C6F6E67 		.ascii	"long long int\000"
 2481      206C6F6E 
 2481      6720696E 
 2481      7400
 2482              	.LASF0:
 2483 0081 7369676E 		.ascii	"signed char\000"
 2483      65642063 
 2483      68617200 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 95


 2484              	.LASF53:
 2485 008d 66756E63 		.ascii	"function\000"
 2485      74696F6E 
 2485      00
 2486              	.LASF48:
 2487 0096 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 2487      73576474 
 2487      47657449 
 2487      676E6F72 
 2487      65426974 
 2488              	.LASF16:
 2489 00ac 63795764 		.ascii	"cyWdtCallback\000"
 2489      7443616C 
 2489      6C626163 
 2489      6B00
 2490              	.LASF28:
 2491 00ba 63686563 		.ascii	"checkStatus\000"
 2491      6B537461 
 2491      74757300 
 2492              	.LASF4:
 2493 00c6 6C6F6E67 		.ascii	"long int\000"
 2493      20696E74 
 2493      00
 2494              	.LASF37:
 2495 00cf 636C6F63 		.ascii	"clockSel\000"
 2495      6B53656C 
 2495      00
 2496              	.LASF9:
 2497 00d8 75696E74 		.ascii	"uint8\000"
 2497      3800
 2498              	.LASF12:
 2499 00de 646F7562 		.ascii	"double\000"
 2499      6C6500
 2500              	.LASF24:
 2501 00e5 636F6D70 		.ascii	"compensatedCycles\000"
 2501      656E7361 
 2501      74656443 
 2501      79636C65 
 2501      7300
 2502              	.LASF20:
 2503 00f7 43795379 		.ascii	"CySysClkIloStop\000"
 2503      73436C6B 
 2503      496C6F53 
 2503      746F7000 
 2504              	.LASF25:
 2505 0107 696C6F43 		.ascii	"iloCompensatedCycles\000"
 2505      6F6D7065 
 2505      6E736174 
 2505      65644379 
 2505      636C6573 
 2506              	.LASF10:
 2507 011c 75696E74 		.ascii	"uint32\000"
 2507      333200
 2508              	.LASF22:
 2509 0123 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 2509      73436C6B 
 2509      496C6F53 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 96


 2509      746F704D 
 2509      65617375 
 2510              	.LASF54:
 2511 013e 70726576 		.ascii	"prevCallback\000"
 2511      43616C6C 
 2511      6261636B 
 2511      00
 2512              	.LASF42:
 2513 014b 43795379 		.ascii	"CySysWdtSetMatch\000"
 2513      73576474 
 2513      5365744D 
 2513      61746368 
 2513      00
 2514              	.LASF40:
 2515 015c 43795379 		.ascii	"CySysWdtEnable\000"
 2515      73576474 
 2515      456E6162 
 2515      6C6500
 2516              	.LASF52:
 2517 016b 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 2517      73576474 
 2517      53657449 
 2517      6E746572 
 2517      72757074 
 2518              	.LASF8:
 2519 0188 756E7369 		.ascii	"unsigned int\000"
 2519      676E6564 
 2519      20696E74 
 2519      00
 2520              	.LASF46:
 2521 0195 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 2521      73576474 
 2521      53657449 
 2521      676E6F72 
 2521      65426974 
 2522              	.LASF23:
 2523 01ab 64657369 		.ascii	"desiredDelay\000"
 2523      72656444 
 2523      656C6179 
 2523      00
 2524              	.LASF5:
 2525 01b8 6C6F6E67 		.ascii	"long unsigned int\000"
 2525      20756E73 
 2525      69676E65 
 2525      6420696E 
 2525      7400
 2526              	.LASF50:
 2527 01ca 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 2527      73576474 
 2527      4D61736B 
 2527      496E7465 
 2527      72727570 
 2528              	.LASF3:
 2529 01e0 73686F72 		.ascii	"short unsigned int\000"
 2529      7420756E 
 2529      7369676E 
 2529      65642069 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 97


 2529      6E7400
 2530              	.LASF39:
 2531 01f3 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 2531      73576474 
 2531      47657445 
 2531      6E61626C 
 2531      65645374 
 2532              	.LASF56:
 2533 020c 43795379 		.ascii	"CySysWdtIsr\000"
 2533      73576474 
 2533      49737200 
 2534              	.LASF19:
 2535 0218 43795379 		.ascii	"CySysClkIloStart\000"
 2535      73436C6B 
 2535      496C6F53 
 2535      74617274 
 2535      00
 2536              	.LASF35:
 2537 0229 706F7765 		.ascii	"powerModeStatus\000"
 2537      724D6F64 
 2537      65537461 
 2537      74757300 
 2538              	.LASF15:
 2539 0239 72656733 		.ascii	"reg32\000"
 2539      3200
 2540              	.LASF29:
 2541 023f 72657475 		.ascii	"returnStatus\000"
 2541      726E5374 
 2541      61747573 
 2541      00
 2542              	.LASF36:
 2543 024c 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 2543      73436C6B 
 2543      57636F43 
 2543      6C6F636B 
 2543      4F757453 
 2544              	.LASF18:
 2545 0266 73697A65 		.ascii	"sizetype\000"
 2545      74797065 
 2545      00
 2546              	.LASF17:
 2547 026f 6C6F6E67 		.ascii	"long double\000"
 2547      20646F75 
 2547      626C6500 
 2548              	.LASF44:
 2549 027b 43795379 		.ascii	"CySysWdtGetMatch\000"
 2549      73576474 
 2549      4765744D 
 2549      61746368 
 2549      00
 2550              	.LASF43:
 2551 028c 6D617463 		.ascii	"match\000"
 2551      6800
 2552              	.LASF62:
 2553 0292 63796465 		.ascii	"cydelayFreqHz\000"
 2553      6C617946 
 2553      72657148 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 98


 2553      7A00
 2554              	.LASF49:
 2555 02a0 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 2555      73576474 
 2555      436C6561 
 2555      72496E74 
 2555      65727275 
 2556              	.LASF11:
 2557 02b7 666C6F61 		.ascii	"float\000"
 2557      7400
 2558              	.LASF51:
 2559 02bd 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 2559      73576474 
 2559      556E6D61 
 2559      736B496E 
 2559      74657272 
 2560              	.LASF47:
 2561 02d5 62697473 		.ascii	"bitsNum\000"
 2561      4E756D00 
 2562              	.LASF60:
 2563 02dd 433A5C55 		.ascii	"C:\\Users\\d3bug\\Documents\\Creator\\nRF24_Example"
 2563      73657273 
 2563      5C643362 
 2563      75675C44 
 2563      6F63756D 
 2564 030b 5F50726F 		.ascii	"_Projects\\00_Basic_Rx.cydsn\000"
 2564      6A656374 
 2564      735C3030 
 2564      5F426173 
 2564      69635F52 
 2565              	.LASF63:
 2566 0327 43794861 		.ascii	"CyHalt\000"
 2566      6C7400
 2567              	.LASF1:
 2568 032e 756E7369 		.ascii	"unsigned char\000"
 2568      676E6564 
 2568      20636861 
 2568      7200
 2569              	.LASF27:
 2570 033c 636F6D70 		.ascii	"compensateRunningStatus\000"
 2570      656E7361 
 2570      74655275 
 2570      6E6E696E 
 2570      67537461 
 2571              	.LASF2:
 2572 0354 73686F72 		.ascii	"short int\000"
 2572      7420696E 
 2572      7400
 2573              	.LASF41:
 2574 035e 43795379 		.ascii	"CySysWdtDisable\000"
 2574      73576474 
 2574      44697361 
 2574      626C6500 
 2575              	.LASF59:
 2576 036e 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 2576      72617465 
 2576      645F536F 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 99


 2576      75726365 
 2576      5C50536F 
 2577              	.LASF31:
 2578 038f 43795379 		.ascii	"CySysClkWcoStop\000"
 2578      73436C6B 
 2578      57636F53 
 2578      746F7000 
 2579              	.LASF58:
 2580 039f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2580      43313120 
 2580      352E342E 
 2580      31203230 
 2580      31363036 
 2581 03d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2581      20726576 
 2581      6973696F 
 2581      6E203233 
 2581      37373135 
 2582 0405 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2582      67202D66 
 2582      66756E63 
 2582      74696F6E 
 2582      2D736563 
 2583              	.LASF33:
 2584 0431 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 2584      73436C6B 
 2584      57636F53 
 2584      6574506F 
 2584      7765724D 
 2585              	.LASF13:
 2586 0449 63686172 		.ascii	"char\000"
 2586      00
 2587              	.LASF34:
 2588 044e 6D6F6465 		.ascii	"mode\000"
 2588      00
 2589              	.LASF45:
 2590 0453 43795379 		.ascii	"CySysWdtGetCount\000"
 2590      73576474 
 2590      47657443 
 2590      6F756E74 
 2590      00
 2591              	.LASF26:
 2592 0464 64657369 		.ascii	"desiredDelayInCounts\000"
 2592      72656444 
 2592      656C6179 
 2592      496E436F 
 2592      756E7473 
 2593              	.LASF30:
 2594 0479 43795379 		.ascii	"CySysClkWcoStart\000"
 2594      73436C6B 
 2594      57636F53 
 2594      74617274 
 2594      00
 2595              	.LASF14:
 2596 048a 63797374 		.ascii	"cystatus\000"
 2596      61747573 
 2596      00
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\cczAFUJb.s 			page 100


 2597              	.LASF32:
 2598 0493 43795379 		.ascii	"CySysClkIloCompensate\000"
 2598      73436C6B 
 2598      496C6F43 
 2598      6F6D7065 
 2598      6E736174 
 2599              	.LASF55:
 2600 04a9 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 2600      73576474 
 2600      47657449 
 2600      6E746572 
 2600      72757074 
 2601              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
